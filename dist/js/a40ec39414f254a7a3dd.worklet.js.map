{"version":3,"sources":["webpack://JSPatcher/./src/core/worklets/AudioWorkletProxyProcessor.ts","webpack://JSPatcher/./src/core/worklets/TemporalAnalyser.worklet.ts","webpack://JSPatcher/./src/utils/buffer.ts","webpack://JSPatcher/./src/utils/math.ts","webpack://JSPatcher/./src/utils/utils.ts","webpack://JSPatcher/./src/utils/yin.ts","webpack://JSPatcher/webpack/bootstrap","webpack://JSPatcher/webpack/runtime/define property getters","webpack://JSPatcher/webpack/runtime/hasOwnProperty shorthand","webpack://JSPatcher/webpack/runtime/make namespace object","webpack://JSPatcher/webpack/startup"],"names":["AudioWorkletProcessor","globalThis","Processor","fnNames","constructor","options","resolves","rejects","messagePortRequestId","handleDisposed","port","removeEventListener","handleMessage","close","e","id","call","args","value","error","data","r","postMessage","_disposed","Promise","resolve","reject","Ctor","forEach","name","start","addEventListener","processorID","SharedArrayBuffer","ArrayBuffer","registerProcessor","sampleRate","TemporalAnalyserAtoms","lock","Atomics","load","_lock","store","$","_$","$total","_$total","wait","asObject","_sab","Uint32Array","BYTES_PER_ELEMENT","Int32Array","TemporalAnalyserProcessor","AudioWorkletProxyProcessor","parameterDescriptors","defaultValue","maxValue","minValue","atoms","getRms","window","map","rms","getAbsMax","absMax","getZcr","zcr","getEstimatedFreq","threshold","probabilityThreshold","ch","yinEstimate","getBuffer","gets","result","analysis","key","length","method","charAt","toUpperCase","slice","destroy","destroyed","windowSize","_windowSize","sizeIn","Math","min","max","process","inputs","outputs","parameters","input","windowSab","splice","bufferSize","c","i","Float32Array","oldWindow","oldWindowSize","setTypedArray","channel","set","subarray","console","warn","sum","array","mean","median","Error","sortedArray","sort","maxIndex","index","cur","energy","signal","sample","sqrt","abs","lastPositive","positive","centroid","weightedSum","weight","conjugatedCentroid","factor","geometricMean","log","exp","flatness","flux","prev","norm","halfRectify","diff","kurtosis","c1","c2","c3","c4","numerator","denominator","skewness","rolloff","cutoff","n","element","slope","xSum","x2Sum","ySum","xySum","x","y","spread","to","from","offsetTo","offsetFrom","toLength","fromLength","spillLength","spilled","$to","mod","$from","$spillLength","$fromEnd","getSubTypedArray","offset","sliceBuffer","fftw2Amp","windowEnergyFactor","amps","real","imag","estimateFreq","indexToFreq","fftBins","round","floor","ceil","toRad","degrees","PI","toMIDI","f","atodb","a","log10","dbtoa","db","iNormExp","normExp","scale","l1","h1","l2","h2","r1","r2","scaleClip","isIdentityMatrix","Array","isArray","every","row","isNumberArray","j","identityMatrix","dim","fill","undefined","isStringArray","isTRect","isTPresentationRect","v","isRectMovable","isRectResizable","isMIDIEvent","Uint8Array","stringifyError","message","JSON","stringify","parseToPrimitive","parse","toString","rgbaMax2Css","maxColor","cssColor","join","css2RgbaMax","color","matched","match","split","s","decodeBPF","sIn","tupleLength","numbers","filter","find","isFinite","tuples","$tuple","decodeCurve","decodeLine","detectOS","appVersion","navigator","indexOf","detectBrowserCore","chrome","InstallTrigger","roundedRect","ctx","width","height","radius","radii","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","stroke","fillRoundedRect","selectElementRange","elementIsEditable","nodeName","selection","getSelection","focus","select","setBaseAndExtent","hasChildNodes","addRange","removeAllRanges","document","createRange","range","selectNodeContents","selectElementPos","pos","setStart","childNodes","collapse","findFromAscendants","predict","ascendants","parent","parentElement","body","push","getPropertyDescriptor","obj","Object","getOwnPropertyDescriptor","getPrototypeOf","getPropertyDescriptors","getOwnPropertyDescriptors","proto","prototype","assign","extToType","ext","max2js","patcherIn","patcher","boxes","lines","maxPatcher","props","bgColor","bgcolor","editingBgColor","editing_bgcolor","dependencies","grid","gridsize","openInPresentation","openinpresentation","maxBoxes","maxLines","maxBox","box","numID","parseInt","inlets","numinlets","outlets","numoutlets","rect","patching_rect","presentationRect","presentation_rect","background","presentation","text","maxclass","lineArgs","patchline","src","source","replace","dest","destination","js2max","line","convertSampleToUnit","unit","bpm","beatsPerMeasure","division","str","values","milliseconds","roundedMs","dpms","totalDivisions","roundedTotalDivisions","divisions","beats","measure","padStart","ms","h","MEASURE_UNIT_REGEX","TIME_UNIT_REGEX","convertUnitToSample","measureIn","beatsIn","divisionsIn","bps","samplesPerBeat","measures","hIn","minIn","msIn","detect","bufferIn","paramsIn","yinBufferSize","yinBuffer","prob","tau","delta","t","runningSum","betterTau","x0","x2","s0","s1","s2"],"mappings":"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","file":"js/a40ec39414f254a7a3dd.worklet.js","sourcesContent":["import { AudioWorkletGlobalScope, MessagePortResponse, TypedMessageEvent } from \"./TypedAudioWorklet\";\nimport { AudioWorkletProxyProcessor } from \"./AudioWorkletProxyProcessor.types\";\n\ndeclare const globalThis: AudioWorkletGlobalScope;\nconst { AudioWorkletProcessor } = globalThis;\n\nconst Processor = class extends AudioWorkletProcessor {\n    static get fnNames(): string[] {\n        return [];\n    }\n    _disposed = false;\n    constructor(options: AudioWorkletNodeOptions) {\n        super(options);\n        const resolves: Record<number, ((...args: any[]) => any)> = {};\n        const rejects: Record<number, ((...args: any[]) => any)> = {};\n        let messagePortRequestId = -1;\n        const handleDisposed = () => {\n            this.port.removeEventListener(\"message\", handleMessage);\n            this.port.close();\n        };\n        const handleMessage = async (e: TypedMessageEvent) => {\n            const { id, call, args, value, error } = e.data;\n            if (call) {\n                const r: MessagePortResponse = { id };\n                try {\n                    r.value = await (this as any)[call](...args);\n                } catch (e) {\n                    r.error = e;\n                }\n                this.port.postMessage(r as any);\n                if (this._disposed) handleDisposed();\n            } else {\n                if (error) {\n                    if (rejects[id]) rejects[id](error);\n                    delete rejects[id];\n                    return;\n                }\n                if (resolves[id]) {\n                    resolves[id](value);\n                    delete resolves[id];\n                }\n            }\n        };\n        const call = (call: string, ...args: any[]) => new Promise<any>((resolve, reject) => {\n            const id = messagePortRequestId--;\n            resolves[id] = resolve;\n            rejects[id] = reject;\n            this.port.postMessage({ id, call, args });\n        });\n        const Ctor = (this.constructor as typeof AudioWorkletProxyProcessor);\n        Ctor.fnNames.forEach(name => (this as any)[name] = (...args: any[]) => call(name, ...args));\n        this.port.start();\n        this.port.addEventListener(\"message\", handleMessage);\n    }\n} as typeof AudioWorkletProxyProcessor;\n\nexport default Processor;\n","import { rms, zcr, setTypedArray, absMax } from \"../../utils/buffer\";\nimport yinEstimate from \"../../utils/yin\";\nimport { AudioWorkletGlobalScope, TypedAudioParamDescriptor } from \"./TypedAudioWorklet\";\nimport { ITemporalAnalyserProcessor, ITemporalAnalyserNode, TemporalAnalyserParameters, TemporalAnalysis } from \"./TemporalAnalyserWorklet.types\";\nimport AudioWorkletProxyProcessor from \"./AudioWorkletProxyProcessor\";\n\nconst processorID = \"__JSPatcher_TemporalAnalyser\";\ndeclare const globalThis: AudioWorkletGlobalScope & { SharedArrayBuffer: typeof SharedArrayBuffer | typeof ArrayBuffer; Atomics: typeof Atomics };\nif (!globalThis.SharedArrayBuffer) globalThis.SharedArrayBuffer = ArrayBuffer;\nconst { registerProcessor, sampleRate } = globalThis;\n\n/**\n * Some data to transfer across threads\n */\nclass TemporalAnalyserAtoms {\n    private readonly _sab: SharedArrayBuffer;\n    private readonly _lock: Int32Array;\n    private readonly _$: Uint32Array;\n    private readonly _$total: Uint32Array;\n    /**\n     * Atomic Lock\n     */\n    get lock(): number {\n        return globalThis.Atomics ? Atomics.load(this._lock, 0) : null;\n    }\n    set lock(value: number) {\n        if (globalThis.Atomics) Atomics.store(this._lock, 0, value);\n    }\n    /**\n     * Next audio sample index to write into window\n     */\n    get $(): number {\n        return this._$[0];\n    }\n    set $(value: number) {\n        this._$[0] = value;\n    }\n    /**\n     * Total samples written counter\n     */\n    get $total(): number {\n        return this._$total[0];\n    }\n    set $total(value: number) {\n        this._$total[0] = value;\n    }\n    /**\n     * Infinite loop until unlocked\n     */\n    wait() {\n        while (this.lock);\n    }\n    /**\n     * Get all atoms\n     */\n    get asObject() {\n        return { $: this._$, $total: this._$total, lock: this._lock };\n    }\n    constructor() {\n        this._sab = new SharedArrayBuffer(3 * Uint32Array.BYTES_PER_ELEMENT);\n        this._lock = new Int32Array(this._sab, 0, 1);\n        this._$ = new Uint32Array(this._sab, 4, 1);\n        this._$total = new Uint32Array(this._sab, 8, 1);\n    }\n}\nclass TemporalAnalyserProcessor extends AudioWorkletProxyProcessor<ITemporalAnalyserProcessor, ITemporalAnalyserNode, TemporalAnalyserParameters> implements ITemporalAnalyserProcessor {\n    static get parameterDescriptors(): TypedAudioParamDescriptor<TemporalAnalyserParameters>[] {\n        return [{\n            defaultValue: 1024,\n            maxValue: 2 ** 32,\n            minValue: 128,\n            name: \"windowSize\"\n        }];\n    }\n    private destroyed = false;\n    private readonly atoms = new TemporalAnalyserAtoms();\n    /**\n     * Concatenated audio data, array of channels\n     */\n    private readonly windowSab: SharedArrayBuffer[] = [];\n    /**\n     * Float32Array Buffer view of window\n     */\n    private readonly window: Float32Array[] = [];\n    /**\n     * Atomic Lock\n     */\n    get lock() {\n        return this.atoms.lock;\n    }\n    set lock(value: number) {\n        this.atoms.lock = value;\n    }\n    /**\n     * Next audio sample index to write into window\n     */\n    get $() {\n        return this.atoms.$;\n    }\n    set $(value: number) {\n        this.atoms.$ = value;\n    }\n    /**\n     * Total samples written counter\n     */\n    get $total() {\n        return this.atoms.$total;\n    }\n    set $total(value: number) {\n        this.atoms.$total = value;\n    }\n    /**\n     * Infinite loop until unlocked\n     */\n    wait() {\n        this.atoms.wait();\n    }\n    getRms() {\n        return this.window.map(rms);\n    }\n    getAbsMax() {\n        return this.window.map(absMax);\n    }\n    getZcr() {\n        return this.window.map(zcr);\n    }\n    getEstimatedFreq(threshold?: number, probabilityThreshold?: number) {\n        return this.window.map(ch => yinEstimate(ch, { sampleRate, threshold, probabilityThreshold }));\n    }\n    getBuffer() {\n        const data = this.window;\n        const { $, $total, lock } = this.atoms.asObject;\n        return { data, $, $total, lock };\n    }\n    gets<K extends keyof TemporalAnalysis>(...analysis: K[]) {\n        const result: Partial<TemporalAnalysis> = {};\n        for (const key of analysis) {\n            if (typeof key !== \"string\" || !key.length) continue;\n            const method = `get${key.charAt(0).toUpperCase()}${key.slice(1)}` as `get${Capitalize<string & K>}`;\n            if (this[method]) result[key] = this[method]() as TemporalAnalysis[K];\n        }\n        return result;\n    }\n    destroy() {\n        this.destroyed = true;\n        this._disposed = true;\n    }\n    private _windowSize = 1024;\n    get windowSize() {\n        return this._windowSize;\n    }\n    set windowSize(sizeIn: number) {\n        this._windowSize = ~~Math.min(2 ** 32, Math.max(128, sizeIn || 1024));\n    }\n    process(inputs: Float32Array[][], outputs: Float32Array[][], parameters: Record<TemporalAnalyserParameters, Float32Array>) {\n        if (this.destroyed) return false;\n        const input = inputs[0];\n        this.windowSize = ~~parameters.windowSize[0];\n        const { windowSize } = this;\n\n        if (this.window.length > input.length) { // Too much channels ?\n            this.windowSab.splice(input.length);\n            this.window.splice(input.length);\n        }\n        if (input.length === 0) return true;\n\n        const bufferSize = Math.max(...input.map(c => c.length)) || 128;\n\n        this.wait();\n        this.lock = 1;\n\n        this.$ %= windowSize;\n        this.$total += bufferSize;\n        let { $ } = this;\n        // Init windows\n        for (let i = 0; i < input.length; i++) {\n            $ = this.$;\n            if (!this.window[i]) { // Initialise channel if not exist\n                this.windowSab[i] = new SharedArrayBuffer(windowSize * Float32Array.BYTES_PER_ELEMENT);\n                this.window[i] = new Float32Array(windowSize);\n            } else {\n                if (this.window[i].length !== windowSize) { // adjust window size if not corresponded\n                    const oldWindow = this.window[i];\n                    const oldWindowSize = oldWindow.length;\n                    const windowSab = new SharedArrayBuffer(windowSize * Float32Array.BYTES_PER_ELEMENT);\n                    const window = new Float32Array(windowSab);\n                    $ = setTypedArray(window, oldWindow, 0, $ - Math.min(windowSize, oldWindowSize));\n                    this.windowSab[i] = windowSab;\n                    this.window[i] = window;\n                }\n            }\n        }\n        this.$ = $;\n        // Write\n        for (let i = 0; i < input.length; i++) {\n            const window = this.window[i];\n            const channel = input[i].length ? input[i] : new Float32Array(bufferSize);\n            $ = this.$;\n            if (bufferSize > windowSize) {\n                window.set(channel.subarray(bufferSize - windowSize));\n                $ = 0;\n            } else {\n                $ = setTypedArray(window, channel, $);\n            }\n        }\n        this.$ = $;\n        this.lock = 0;\n        return true;\n    }\n}\ntry {\n    registerProcessor(processorID, TemporalAnalyserProcessor);\n} catch (error) {\n    // eslint-disable-next-line no-console\n    console.warn(error);\n}\n","import { mod } from \"./math\";\n\ntype TypedArray = Int8Array | Uint8Array | Int16Array | Uint16Array | Int32Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array;\ntype TypedArrayConstructor = typeof Int8Array | typeof Uint8Array | typeof Int16Array | typeof Uint16Array | typeof Int32Array | typeof Uint32Array | typeof Uint8ClampedArray | typeof Float32Array | typeof Float64Array;\nexport const sum = (array: TypedArray | number[]) => {\n    let sum = 0;\n    for (let i = 0; i < array.length; i++) {\n        sum += array[i];\n    }\n    return sum;\n};\nexport const mean = (array: TypedArray | number[]) => sum(array) / array.length;\nexport const median = (array: TypedArray | number[]) => {\n    const length = array.length;\n    if (length === 0) throw new Error(\"trying to calculate median of empty array\");\n    const sortedArray = array.slice().sort();\n    if (length % 2 === 0) return (sortedArray[length / 2 - 1] + sortedArray[length / 2]) / 2;\n    return sortedArray[~~(length / 2)];\n};\nexport const maxIndex = (array: TypedArray | number[]) => {\n    if (!array.length) return 0;\n    let index = 0;\n    let max = array[0];\n    let i = array.length;\n    while (i-- > 1) {\n        const cur = array[i];\n        if (cur <= max) continue;\n        max = cur;\n        index = i;\n    }\n    return index;\n};\nexport const energy = (signal: TypedArray | number[]) => {\n    let sum = 0;\n    let sample = 0;\n    for (let i = 0; i < signal.length; i++) {\n        sample = signal[i];\n        sum += sample * sample;\n    }\n    return sum;\n};\nexport const rms = (signal: TypedArray | number[]) => Math.sqrt(energy(signal) / signal.length);\nexport const absMax = (signal: TypedArray | number[]) => {\n    let max = 0;\n    let sample = 0;\n    for (let i = 0; i < signal.length; i++) {\n        sample = Math.abs(signal[i]);\n        if (sample > max) max = sample;\n    }\n    return max;\n};\nexport const zcr = (signal: TypedArray | number[]) => {\n    let zcr = 0;\n    let lastPositive = true;\n    let positive = true;\n    for (let i = 0; i < signal.length; i++) {\n        positive = signal[i] >= 0;\n        if (positive !== lastPositive) zcr++;\n        lastPositive = positive;\n    }\n    return zcr;\n};\nexport const centroid = (array: TypedArray | number[]) => {\n    let weightedSum = 0;\n    let weight = 0;\n    for (let i = 0; i < array.length; i++) {\n        weightedSum += i * Math.abs(array[i]);\n        weight += array[i];\n    }\n    return weight === 0 ? 0 : weightedSum / weight;\n};\nexport const conjugatedCentroid = (array: TypedArray | number[], factor: number) => {\n    let weightedSum = 0;\n    let weight = 0;\n    for (let i = 0; i < array.length; i++) {\n        weightedSum += (i ** factor) * Math.abs(array[i]);\n        weight += array[i];\n    }\n    return weight === 0 ? 0 : weightedSum / weight;\n};\nexport const geometricMean = (array: TypedArray | number[]) => {\n    const length = array.length;\n    let sum = 0;\n    let sample = 0;\n    for (let i = 0; i < length; i++) {\n        sample = array[i];\n        if (sample <= 0) return 0;\n        sum += Math.log(array[i]);\n    }\n    return Math.exp(sum / length);\n};\nexport const flatness = (array: TypedArray | number[]) => geometricMean(array) / mean(array);\n/**\n * https://essentia.upf.edu/reference/std_Flux.html\n *\n * @param {TypedArray} cur\n * @param {TypedArray} prev\n * @param {(\"L1\" | \"L2\")} [norm]\n * @param {boolean} [halfRectify]\n * @returns\n */\nexport const flux = (cur: TypedArray | number[], prev: TypedArray | number[], norm?: \"L1\" | \"L2\", halfRectify?: boolean) => {\n    let flux = 0;\n    if (norm === \"L2\") {\n        if (halfRectify === true) { // L2 + halfRectify\n            for (let i = 0; i < cur.length; i++) {\n                const diff = cur[i] - prev[i];\n                if (diff < 0) continue;\n                flux += diff * diff;\n            }\n            return Math.sqrt(flux);\n        }\n        for (let i = 0; i < cur.length; i++) { // L2 not halfRectify\n            const diff = cur[i] - prev[i];\n            flux += diff * diff;\n        }\n        return Math.sqrt(flux);\n    }\n    if (halfRectify === true) { // L1 + halfRectify\n        for (let i = 0; i < cur.length; i++) {\n            const diff = cur[i] - prev[i];\n            if (diff < 0) continue;\n            flux += diff;\n        }\n        return flux;\n    }\n    for (let i = 0; i < cur.length; i++) { // L1 not halfRectify\n        const diff = cur[i] - prev[i];\n        flux += Math.abs(diff);\n    }\n    return flux;\n};\n/**\n * https://github.com/meyda/meyda/blob/master/src/extractors/spectralKurtosis.js\n *\n * @param {TypedArray} array\n */\nexport const kurtosis = (array: TypedArray | number[]) => {\n    const c1 = centroid(array);\n    const c2 = conjugatedCentroid(array, 2);\n    const c3 = conjugatedCentroid(array, 3);\n    const c4 = conjugatedCentroid(array, 4);\n    const numerator = -3 * c1 ** 4 + 6 * c1 * c2 - 4 * c1 * c3 + c4;\n    const denominator = (c2 - c1 ** 2) ** 2;\n    return numerator / denominator;\n};\n/**\n * https://github.com/meyda/meyda/blob/master/src/extractors/spectralSkewness.js\n *\n * @param {TypedArray} array\n */\nexport const skewness = (array: TypedArray | number[]) => {\n    const c1 = centroid(array);\n    const c2 = conjugatedCentroid(array, 2);\n    const c3 = conjugatedCentroid(array, 3);\n    const numerator = 2 * c1 ** 3 - 3 * c1 * c2 + c3;\n    const denominator = (c2 - c1 ** 2) ** 1.5;\n    return numerator / denominator;\n};\n/**\n * https://essentia.upf.edu/reference/std_RollOff.html\n *\n * @param {TypedArray} array\n * @param {number} [cutoff] Between 0 - 1\n * @returns\n */\nexport const rolloff = (array: TypedArray | number[], cutoff?: number) => {\n    const length = array.length;\n    let e = energy(array);\n    const threshold = (cutoff || 0.99) * e;\n    let n = length - 1;\n    while (e > threshold && n >= 0) {\n        const element = array[n];\n        e -= element * element;\n        --n;\n    }\n    return n + 1;\n};\nexport const slope = (array: TypedArray | number[]) => {\n    const n = array.length;\n    const xSum = n * n / 2;\n    const x2Sum = (n - 1) * n * (2 * n - 1) / 6;\n    let ySum = 0;\n    let xySum = 0;\n    for (let x = 0; x < n; x++) {\n        const y = array[x];\n        ySum += y;\n        xySum += x * y;\n    }\n    return (n * xySum - xSum * ySum) / (n * x2Sum - xSum * xSum);\n};\nexport const spread = (array: TypedArray | number[]) => Math.sqrt(conjugatedCentroid(array, 2)) - centroid(array) ** 2;\n/**\n * Copy buffer to another, support negative offset index\n *\n * @template T\n * @param {T} to\n * @param {T} from\n * @param {number} [offsetTo]\n * @param {number} [offsetFrom]\n * @returns\n */\n// eslint-disable-next-line arrow-parens\nexport const setTypedArray = <T extends TypedArray = TypedArray>(to: T, from: T, offsetTo?: number, offsetFrom?: number) => {\n    const toLength = to.length;\n    const fromLength = from.length;\n    const spillLength = Math.min(toLength, fromLength);\n    let spilled = 0;\n    let $to = mod(offsetTo, toLength) || 0;\n    let $from = mod(offsetFrom, fromLength) || 0;\n    while (spilled < spillLength) {\n        const $spillLength = Math.min(spillLength - spilled, toLength - $to, fromLength - $from);\n        const $fromEnd = $from + $spillLength;\n        if ($from === 0 && $fromEnd === fromLength) to.set(from, $to);\n        else to.set(from.subarray($from, $fromEnd), $to);\n        $to = ($to + $spillLength) % toLength;\n        $from = $fromEnd % fromLength;\n        spilled += $spillLength;\n    }\n    return $to;\n};\n// eslint-disable-next-line arrow-parens\nexport const getSubTypedArray = <T extends TypedArray = TypedArray>(from: T, length: number, offset?: number) => {\n    const fromLength = from.length;\n    const $ = mod(offset, fromLength) || 0;\n    if ($ === 0 && length === fromLength) return from;\n    if ($ + length < fromLength) return from.subarray($, $ + length) as T;\n    const to = new (from.constructor as TypedArrayConstructor)(length) as T;\n    setTypedArray(to, from, 0, $);\n    return to;\n};\n// eslint-disable-next-line arrow-parens\nexport const sliceBuffer = <T extends TypedArray = TypedArray>(from: T, length: number, offset?: number) => {\n    const fromLength = from.length;\n    const $ = mod(offset, fromLength) || 0;\n    if ($ === 0 && length === fromLength) return from.slice();\n    if ($ + length < fromLength) return from.slice($, $ + length) as T;\n    const to = new (from.constructor as TypedArrayConstructor)(length) as T;\n    setTypedArray(to, from, 0, $);\n    return to;\n};\n/**\n * http://www.fftw.org/fftw3_doc/The-Halfcomplex_002dformat-DFT.html\n *\n * @param {Float32Array} from\n */\nexport const fftw2Amp = (from: Float32Array, windowEnergyFactor: number) => {\n    const { length } = from;\n    const amps = new Float32Array(length / 2);\n    for (let i = 0; i < length / 2; i++) {\n        const real = from[i];\n        const imag = (i === 0 || i === length / 2 - 1) ? 0 : from[length - i];\n        amps[i] = (real * real + imag * imag) ** 0.5 / length * windowEnergyFactor;\n    }\n    return amps;\n};\nexport const estimateFreq = (amps: Float32Array, sampleRate: number) => indexToFreq(maxIndex(amps), amps.length, sampleRate);\nexport const indexToFreq = (i: number, fftBins: number, sampleRate: number) => (i % fftBins) / fftBins * sampleRate / 2;\n","import { isNumberArray } from \"./utils\";\n\n/**\n * Mod support wrapping with negative numbers\n */\nexport const mod = (x: number, y: number): number => (x % y + y) % y;\n/**\n * Round a number to multiple of another\n */\nexport const round = (x: number, to: number): number => (Math.abs(to) < 1 ? Math.round(x * (1 / to)) / (1 / to) : Math.round(x / to) * to);\n/**\n * Floor a number to multiple of another\n */\nexport const floor = (x: number, to: number): number => (Math.abs(to) < 1 ? Math.floor(x * (1 / to)) / (1 / to) : Math.floor(x / to) * to);\n/**\n * Ceil a number to multiple of another\n */\nexport const ceil = (x: number, to: number): number => (Math.abs(to) < 1 ? Math.ceil(x * (1 / to)) / (1 / to) : Math.ceil(x / to) * to);\n/**\n * Degree to radian\n */\nexport const toRad = (degrees: number): number => degrees * Math.PI / 180;\n/**\n * MIDI note number to string\n */\nexport const toMIDI = (f: number): string => [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"][(f % 12 + 12) % 12] + Math.round(f / 12 - 2);\n/**\n * Linear amplitude ([0, 1]) to dB ([-Inf, 0])\n *\n * @param {number} a linear amplitude value\n * @returns {number} dB value\n */\nexport const atodb = (a: number): number => 20 * Math.log10(a);\n/**\n * dB ([-Inf, 0]) to Linear mplitude ([0, 1])\n *\n * @param {number} db dB value\n * @returns {number} linear amplitude value\n */\nexport const dbtoa = (db: number): number => 10 ** (db / 20);\n/**\n * De-scale a exponently scaled value\n *\n * @param {number} x normalized value to scale between ([0, 1])\n * @param {number} e exponent factor used to scale, 0 means linear, 1 does ** 1.5 curve\n * @returns {number} de-scaled value\n */\nexport const iNormExp = (x: number, e: number): number => Math.max(0, x) ** (1.5 ** -e);\n/**\n * Scale exponently a normalized value\n *\n * @param {number} x normalized value to scale between ([0, 1])\n * @param {number} e exponent factor, 0 means linear, 1 does ** 1.5 curve\n * @returns {number} scaled value\n */\nexport const normExp = (x: number, e: number): number => Math.max(0, x) ** (1.5 ** e);\n\nexport const scale = (x: number, l1: number, h1: number, l2: number, h2: number) => {\n    const r1 = h1 - l1;\n    const r2 = h2 - l2;\n    return (x - l1) / r1 * r2 + l2;\n};\n\nexport const scaleClip = (x: number, l1: number, h1: number, l2: number, h2: number) => Math.max(l2, Math.min(h2, scale(x, l1, h1, l2, h2)));\n\n// eslint-disable-next-line arrow-body-style\nexport const isIdentityMatrix = (x: number[][]) => {\n    return Array.isArray(x)\n    && x.every((row, i) => isNumberArray(row)\n    && row.length === x.length\n    && row.every((e, j) => e === (j === i ? 1 : 0)));\n};\n\nexport const identityMatrix = (dim: number) => new Array(dim).fill(undefined).map((x, i) => new Array(dim).fill(undefined).map((y, j) => +(i === j)));\n","/* eslint-disable arrow-body-style */\nimport { TMIDIEvent, TBPF, TRect, TPresentationRect, FileExtension, ProjectItemType, RawPatcher, TMaxPatcher, TAudioUnit } from \"../core/types\";\n\nexport const isStringArray = (x: any): x is string[] => Array.isArray(x) && x.every(e => typeof e === \"string\");\nexport const isNumberArray = (x: any): x is number[] => Array.isArray(x) && x.every(e => typeof e === \"number\");\nexport const isTRect = (x: any): x is TRect => {\n    return isNumberArray(x)\n        && x.length === 4\n        && x[0] >= 0\n        && x[1] >= 0\n        && x[2] >= 15\n        && x[3] >= 15;\n};\nexport const isTPresentationRect = (x: any): x is TPresentationRect => {\n    return Array.isArray(x)\n        && x.length === 4\n        && x.every(v => typeof v === \"number\" || typeof v === \"string\");\n};\nexport const isRectMovable = (x: any): x is [number, number, number | string, number | string] => {\n    return isTPresentationRect(x) && typeof x[0] === \"number\" && typeof x[1] === \"number\";\n};\nexport const isRectResizable = (x: any): x is TRect => isTRect(x);\nexport const isMIDIEvent = (x: any): x is TMIDIEvent => (isNumberArray(x) || x instanceof Uint8Array) && x.length === 3;\nexport const stringifyError = (data: any) => {\n    if (typeof data === \"string\") return data;\n    if (data instanceof Error) return data.message;\n    if (typeof data === \"object\") return JSON.stringify(data);\n    return `${data}`;\n};\nexport const parseToPrimitive = (value: any) => {\n    try {\n        return JSON.parse(value);\n    } catch (e) {\n        return value.toString();\n    }\n};\nexport const rgbaMax2Css = (maxColor: number[]) => {\n    const cssColor = [255, 255, 255, 1] as TRect;\n    if (Array.isArray(maxColor)) {\n        for (let i = 0; i < 3; i++) {\n            if (typeof maxColor[i] === \"number\") cssColor[i] = Math.floor(maxColor[i] * 255);\n        }\n        if (typeof maxColor[3] === \"number\") cssColor[3] = maxColor[3];\n    }\n    return `rgba(${cssColor.join(\",\")})`;\n};\nexport const css2RgbaMax = (color: string) => {\n    const maxColor = [0.2, 0.2, 0.2, 1] as TRect;\n    const matched = color.match(/rgba\\((.+)\\)/);\n    if (!matched) return maxColor;\n    const cssColor = matched[1].split(\",\").map(s => +s);\n    for (let i = 0; i < 3; i++) {\n        if (typeof cssColor[i] === \"number\") maxColor[i] = cssColor[i] / 255;\n        if (typeof cssColor[3] === \"number\") maxColor[3] = cssColor[3];\n    }\n    return maxColor;\n};\n/**\n * A BPF can be described as a succesion of three number tuples.\n * i.e. `1 1 0.5 2 1 1` curve mode means go to 0 immediately then go to 1 in 1s with a curve of e^0.5, then go to 2 in 1s linear.\n * The function transform the string to number[][], i.e. `[[1, 1, 0.5], [2, 1, 1]]`\n *\n * @param {TBPF} sIn\n * @returns {number[][]}\n */\nexport const decodeBPF = (sIn: TBPF, tupleLength: number): number[][] => {\n    if (typeof sIn === \"number\") return [[sIn]];\n    if (isNumberArray(sIn)) return [sIn];\n    if (Array.isArray(sIn) && sIn.every(a => isNumberArray(a))) return sIn;\n    if (typeof sIn !== \"string\") throw new Error(\"Failed to decode curve.\");\n    const numbers = sIn.split(\" \").filter(s => !!s).map(s => +s);\n    if (numbers.find(v => !isFinite(v))) throw new Error(\"BPF contains invalid number.\");\n    const tuples: number[][] = [];\n    for (let i = 0; i < numbers.length; i++) {\n        const $tuple = ~~(i / tupleLength);\n        const $ = i % tupleLength;\n        if (!tuples[$tuple]) tuples[$tuple] = [];\n        tuples[$tuple][$] = numbers[i];\n    }\n    return tuples;\n};\nexport const decodeCurve = (sIn: TBPF) => decodeBPF(sIn, 3);\nexport const decodeLine = (sIn: TBPF) => decodeBPF(sIn, 2);\n\n/**\n * Gives OS name as follows:\n * \"Windows\"    for all versions of Windows,\n * \"MacOS\"      for all versions of Macintosh OS,\n * \"Linux\"      for all versions of Linux,\n * \"UNIX\"       for all other UNIX flavors,\n * \"Unknown\" indicates failure to detect the OS\n *\n * @returns {\"Windows\" | \"MacOS\" | \"UNIX\" | \"Linux\" | \"Unknown\"} OS name\n */\nexport const detectOS = (): \"Windows\" | \"MacOS\" | \"UNIX\" | \"Linux\" | \"Unknown\" => {\n    const { appVersion } = navigator;\n    if (appVersion.indexOf(\"Win\") !== -1) return \"Windows\";\n    if (appVersion.indexOf(\"Mac\") !== -1) return \"MacOS\";\n    if (appVersion.indexOf(\"X11\") !== -1) return \"UNIX\";\n    if (appVersion.indexOf(\"Linux\") !== -1) return \"Linux\";\n    return \"Unknown\";\n};\nexport const detectBrowserCore = () => {\n    if ((window as any).chrome) return \"Chromium\";\n    if ((window as any).InstallTrigger) return \"Gecko\";\n    return \"Unknown\";\n};\nexport const roundedRect = (ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number | number[]) => {\n    const radii = [0, 0, 0, 0];\n    if (typeof radius === \"number\") radii.fill(radius);\n    else radius.forEach((v, i) => radii[i] = v);\n    ctx.beginPath();\n    ctx.moveTo(x + radii[0], y);\n    ctx.lineTo(x + width - radii[1], y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radii[1]);\n    ctx.lineTo(x + width, y + height - radii[2]);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radii[2], y + height);\n    ctx.lineTo(x + radii[3], y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radii[3]);\n    ctx.lineTo(x, y + radii[0]);\n    ctx.quadraticCurveTo(x, y, x + radii[0], y);\n    ctx.closePath();\n    ctx.stroke();\n};\nexport const fillRoundedRect = (ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number | number[]) => {\n    const radii = [0, 0, 0, 0];\n    if (typeof radius === \"number\") radii.fill(radius);\n    else radius.forEach((v, i) => radii[i] = v);\n    ctx.beginPath();\n    ctx.moveTo(x + radii[0], y);\n    ctx.lineTo(x + width - radii[1], y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radii[1]);\n    ctx.lineTo(x + width, y + height - radii[2]);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radii[2], y + height);\n    ctx.lineTo(x + radii[3], y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radii[3]);\n    ctx.lineTo(x, y + radii[0]);\n    ctx.quadraticCurveTo(x, y, x + radii[0], y);\n    ctx.closePath();\n    ctx.fill();\n};\nexport const selectElementRange = (e: HTMLElement) => {\n    const elementIsEditable = (e: HTMLElement): e is HTMLInputElement | HTMLTextAreaElement => !!e.nodeName.match(/^(INPUT|TEXTAREA)$/i);\n    const selection = window.getSelection();\n    if (elementIsEditable(e)) {\n        e.focus();\n        e.select();\n        return;\n    }\n    if (selection.setBaseAndExtent) {\n        // Safari\n        selection.setBaseAndExtent(e, 0, e, e.hasChildNodes() ? 1 : 0);\n        return;\n    }\n    if (selection.addRange && selection.removeAllRanges && document.createRange) {\n        // Mozilla or Opera 10.5+\n        const range = document.createRange();\n        range.selectNodeContents(e);\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n};\nexport const selectElementPos = (e: HTMLElement, pos: number) => {\n    const range = document.createRange();\n    const selection = window.getSelection();\n    range.setStart(e.childNodes[0], pos);\n    range.collapse(true);\n    selection.removeAllRanges();\n    selection.addRange(range);\n};\nexport const findFromAscendants = (e: HTMLElement, predict: (e: HTMLElement) => boolean) => {\n    const ascendants = [];\n    let parent = e.parentElement;\n    while (parent !== document.body) {\n        ascendants.push(parent);\n        parent = parent.parentElement;\n    }\n    return ascendants.find(predict);\n};\n// eslint-disable-next-line arrow-body-style\nexport const getPropertyDescriptor = (obj: Record<string, any>, key: string): PropertyDescriptor => {\n    return Object.getOwnPropertyDescriptor(obj, key) || getPropertyDescriptor(Object.getPrototypeOf(obj), key);\n};\nexport const getPropertyDescriptors = (obj: Function | Record<string, any>): PropertyDescriptorMap => {\n    if (typeof obj === \"function\") return Object.getOwnPropertyDescriptors(obj);\n    const proto = Object.getPrototypeOf(obj);\n    if (obj !== Object.prototype && proto === Object.prototype) return Object.getOwnPropertyDescriptors(obj);\n    return Object.assign(proto ? getPropertyDescriptors(proto) : {}, Object.getOwnPropertyDescriptors(obj));\n};\n\nexport const extToType = (ext: FileExtension): Exclude<ProjectItemType, \"folder\"> => {\n    if ([\"jspat\", \"maxpat\", \"gendsp\", \"dsppat\"].indexOf(ext) !== -1) return \"patcher\";\n    if ([\"wav\", \"aif\", \"aiff\", \"mp3\", \"aac\", \"flac\", \"ogg\"].indexOf(ext) !== -1) return \"audio\";\n    if ([\"text\", \"json\"].indexOf(ext) !== -1) return \"text\";\n    return \"unknown\";\n};\n\nexport const max2js = (patcherIn: TMaxPatcher): RawPatcher => {\n    const patcher: RawPatcher = { boxes: {}, lines: {} };\n    const maxPatcher = (patcherIn as TMaxPatcher).patcher;\n    patcher.props = {\n        bgColor: rgbaMax2Css(maxPatcher.bgcolor),\n        editingBgColor: rgbaMax2Css(maxPatcher.editing_bgcolor),\n        dependencies: [],\n        grid: maxPatcher.gridsize,\n        openInPresentation: !!maxPatcher.openinpresentation\n    };\n    const maxBoxes = maxPatcher.boxes;\n    const maxLines = maxPatcher.lines;\n    for (let i = 0; i < maxBoxes.length; i++) {\n        const maxBox = maxBoxes[i].box;\n        const numID = parseInt(maxBox.id.match(/\\d+/)[0]);\n        const id = \"box-\" + numID;\n        patcher.boxes[id] = {\n            id,\n            inlets: maxBox.numinlets,\n            outlets: maxBox.numoutlets,\n            rect: maxBox.patching_rect,\n            presentationRect: maxBox.presentation_rect,\n            background: !!maxBox.background,\n            presentation: !!maxBox.presentation,\n            text: (maxBox.maxclass === \"newobj\" ? \"\" : maxBox.maxclass + \" \") + (maxBox.text ? maxBox.text : \"\")\n        };\n    }\n    for (let i = 0; i < maxLines.length; i++) {\n        const lineArgs = maxLines[i].patchline;\n        const id = \"line-\" + i;\n        patcher.lines[id] = {\n            id,\n            src: [lineArgs.source[0].replace(/obj/, \"box\"), lineArgs.source[1]],\n            dest: [lineArgs.destination[0].replace(/obj/, \"box\"), lineArgs.destination[1]]\n        };\n    }\n    return patcher;\n};\n\nexport const js2max = (patcherIn: RawPatcher): TMaxPatcher => {\n    const maxPatcher: TMaxPatcher[\"patcher\"] = {\n        boxes: [],\n        lines: [],\n        rect: undefined,\n        bgcolor: css2RgbaMax(patcherIn.props.bgColor),\n        editing_bgcolor: css2RgbaMax(patcherIn.props.editingBgColor),\n        gridsize: patcherIn.props.grid,\n        openinpresentation: +patcherIn.props.openInPresentation\n    };\n    for (const id in patcherIn.boxes) {\n        const box = patcherIn.boxes[id];\n        const numID = parseInt(id.match(/\\d+/)[0]);\n        maxPatcher.boxes.push({\n            box: {\n                id: `obj-${numID}`,\n                maxclass: \"newobj\",\n                numinlets: box.inlets,\n                numoutlets: box.outlets,\n                patching_rect: box.rect,\n                presentation: +box.presentation,\n                background: +box.background,\n                text: box.text\n            }\n        });\n    }\n    for (const id in patcherIn.lines) {\n        const line = patcherIn.lines[id];\n        maxPatcher.lines.push({\n            patchline: {\n                source: [line.src[0].replace(/box/, \"obj\"), line.src[1]],\n                destination: [line.dest[0].replace(/box/, \"obj\"), line.dest[1]]\n            }\n        });\n    }\n    return { patcher: maxPatcher };\n};\n\nexport const convertSampleToUnit = (sample: number, unit: TAudioUnit, { sampleRate = 48000, bpm = 60, beatsPerMeasure = 4, division = 16 }) => {\n    if (unit === \"sample\") return { unit, str: sample.toString(), value: sample, values: [sample] };\n    const milliseconds = sample * 1000 / sampleRate;\n    const roundedMs = Math.round(milliseconds);\n    if (unit === \"measure\") {\n        const dpms = bpm * division / 60000;\n        const totalDivisions = dpms * milliseconds;\n        const roundedTotalDivisions = dpms * milliseconds;\n        const divisions = ~~(roundedTotalDivisions % division);\n        const beats = ~~(roundedTotalDivisions / division) % beatsPerMeasure + 1;\n        const measure = ~~(roundedTotalDivisions / beatsPerMeasure / division) + 1;\n        const str = `${measure}:${beats}.${divisions.toString().padStart(2, \"0\")}`;\n        return { unit, str, value: totalDivisions / division, values: [measure, beats, divisions] };\n    }\n    // if (unit === \"time\")\n    const ms = roundedMs % 1000;\n    const s = ~~(roundedMs / 1000) % 60;\n    const min = ~~(roundedMs / 60000) % 60;\n    const h = ~~(roundedMs / 3600000);\n    const str = !min ? `${s}.${ms.toString().padStart(3, \"0\")}`\n        : !h ? `${min}:${s.toString().padStart(2, \"0\")}.${ms.toString().padStart(3, \"0\")}`\n            : `${h}:${min.toString().padStart(2, \"0\")}:${s.toString().padStart(2, \"0\")}.${ms.toString().padStart(3, \"0\")}`;\n    return { unit, str, value: milliseconds / 1000, values: [h, min, s, ms] };\n};\nexport const MEASURE_UNIT_REGEX = /^((\\d+):)?(\\d+)\\.?(\\d+)?$/;\nexport const TIME_UNIT_REGEX = /^((\\d+):)??((\\d+):)?(\\d+)\\.?(\\d+)?$/;\nexport const convertUnitToSample = (str: string, unit: TAudioUnit, { sampleRate = 48000, bpm = 60, beatsPerMeasure = 4, division = 16 }) => {\n    if (unit === \"sample\") return +str || 0;\n    if (unit === \"measure\") {\n        const matched = str.match(MEASURE_UNIT_REGEX);\n        if (!matched) throw new Error(`String ${str} cannot be parsed to ${unit}`);\n        const [, , measureIn, beatsIn, divisionsIn] = matched;\n        const bps = bpm / 60;\n        const samplesPerBeat = sampleRate / bps;\n        let measures = +measureIn || 0;\n        let beats = +beatsIn || 0;\n        let divisions = +divisionsIn || 0;\n        beats += ~~(divisions / division);\n        divisions %= division;\n        measures += ~~(beats / beatsPerMeasure);\n        beats %= beatsPerMeasure;\n        return (measures * beatsPerMeasure + beats + divisions / division) * samplesPerBeat;\n    }\n    const matched = str.match(TIME_UNIT_REGEX);\n    if (!matched) throw new Error(`String ${str} cannot be parsed to ${unit}`);\n    const [, , hIn, , minIn, sIn, msIn] = matched;\n    let h = +hIn || 0;\n    let min = +minIn || 0;\n    let s = +sIn || 0;\n    let ms = +msIn || 0;\n    s += ~~(ms / 1000);\n    ms %= 1000;\n    min += ~~(s / 60);\n    s %= 60;\n    h += ~~(min / 60);\n    min %= 60;\n    return (h * 3600 + min * 60 + s + ms / 1000) * sampleRate;\n};\n","interface YinParams {\n    threshold: number;\n    sampleRate: number;\n    probabilityThreshold: number;\n}\n\nconst detect = (bufferIn: Float32Array, paramsIn?: Partial<YinParams>) => {\n    const { threshold = 0.1, sampleRate = 48000, probabilityThreshold = 0.1 } = paramsIn;\n    let bufferSize = 1;\n    while (bufferSize < bufferIn.length) {\n        bufferSize *= 2;\n    }\n    bufferSize /= 2;\n\n    const yinBufferSize = bufferSize / 2;\n    const yinBuffer = new Float32Array(yinBufferSize);\n\n    let prob = 0;\n    let tau;\n    let delta;\n\n    for (let t = 1; t < yinBufferSize; t++) {\n        for (let i = 0; i < yinBufferSize; i++) {\n            delta = bufferIn[i] - bufferIn[i + t];\n            yinBuffer[t] += delta * delta;\n        }\n    }\n    yinBuffer[0] = 1;\n    yinBuffer[1] = 1;\n    let runningSum = 0;\n    for (let t = 1; t < yinBufferSize; t++) {\n        runningSum += yinBuffer[t];\n        yinBuffer[t] *= t / runningSum;\n    }\n    for (tau = 2; tau < yinBufferSize; tau++) {\n        if (yinBuffer[tau] < threshold) {\n            while (tau + 1 < yinBufferSize && yinBuffer[tau + 1] < yinBuffer[tau]) {\n                tau++;\n            }\n            prob = 1 - yinBuffer[tau];\n            break;\n        }\n    }\n    if (tau === yinBufferSize || yinBuffer[tau] >= threshold) {\n        return null;\n    }\n    if (prob < probabilityThreshold) {\n        return null;\n    }\n    let betterTau;\n    let x0;\n    let x2;\n    if (tau < 1) {\n        x0 = tau;\n    } else {\n        x0 = tau - 1;\n    }\n    if (tau + 1 < yinBufferSize) {\n        x2 = tau + 1;\n    } else {\n        x2 = tau;\n    }\n    if (x0 === tau) {\n        if (yinBuffer[tau] <= yinBuffer[x2]) {\n            betterTau = tau;\n        } else {\n            betterTau = x2;\n        }\n    } else if (x2 === tau) {\n        if (yinBuffer[tau] <= yinBuffer[x0]) {\n            betterTau = tau;\n        } else {\n            betterTau = x0;\n        }\n    } else {\n        const s0 = yinBuffer[x0];\n        const s1 = yinBuffer[tau];\n        const s2 = yinBuffer[x2];\n        betterTau = tau + (s2 - s0) / (2 * (2 * s1 - s2 - s0));\n    }\n\n    return sampleRate / betterTau;\n};\nexport default detect;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(\"./node_modules/babel-loader/lib/index.js!./src/core/worklets/TemporalAnalyser.worklet.ts\");\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}