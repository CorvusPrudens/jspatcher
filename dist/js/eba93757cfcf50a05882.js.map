{"version":3,"sources":["webpack://JSPatcher/./src/core/objects/dsp/AudioWorklet/Base.ts","webpack://JSPatcher/./src/core/objects/dsp/AudioWorklet/TemporalAnalyser.ts","webpack://JSPatcher/./src/core/objects/dsp/AudioWorklet/TemporalAnalyser.worklet.ts","webpack://JSPatcher/./src/core/objects/live/Base.tsx","webpack://JSPatcher/./src/core/objects/live/button.tsx","webpack://JSPatcher/./src/core/objects/live/dial.tsx","webpack://JSPatcher/./src/core/objects/live/exports.ts","webpack://JSPatcher/./src/core/objects/live/gain.tsx","webpack://JSPatcher/./src/core/objects/live/meter.tsx","webpack://JSPatcher/./src/core/objects/live/numbox.tsx","webpack://JSPatcher/./src/core/objects/live/slider.tsx","webpack://JSPatcher/./src/core/objects/live/tab.tsx","webpack://JSPatcher/./src/core/objects/live/text.tsx","webpack://JSPatcher/./src/core/objects/live/toggle.tsx"],"names":["registeredProcessors","Set","AWN","window","AudioWorkletNode","DisposableAudioWorkletNode","port","parameters","destroy","postMessage","close","destroyed","constructor","context","name","options","AudioWorkletRegister","registered","has","processorID","b","add","registerProcessor","audioWorklet","registering","url","processorURL","URL","createObjectURL","Blob","processor","toString","type","addModule","resolves","forEach","f","e","rejects","register","promise","Promise","resolve","reject","push","TemporalAnalyserNode","numberOfInputs","numberOfOutputs","onmessage","id","data","rms","gets","zcr","buffer","Error","promiseID","TemporalAnalyserRegister","getDisplayValue","value","unitstyle","units","enums","toFixed","Math","abs","toMIDI","LiveUI","CanvasUI","state","object","canvas","focus","rect","getBoundingClientRect","prevX","touches","clientX","prevY","clientY","fromX","left","fromY","top","prevValue","handlePointerDown","x","y","originalEvent","handleTouchMove","preventDefault","changedTouches","movementX","movementY","handlePointerDrag","handleTouchEnd","handlePointerUp","document","removeEventListener","addEventListener","passive","handleMouseMove","handleMouseUp","setState","props","onChangeFromUI","displayValue","$changeTimer","distance","getDistance","max","min","exponent","normalized","length","iNormExp","stepsCount","step","Number","MAX_SAFE_INTEGER","floor","round","unitStyle","setValueToOutput","scheduleChangeHandler","setTimeout","changeCallback","speedLim","paint","render","refCanvas","className","join","position","display","width","height","handleKeyDown","handleKeyUp","handleTouchStart","handleWheel","handleClick","handleMouseDown","handleMouseOver","handleMouseOut","handleContextMenu","handleFocusIn","handleFocusOut","canvasProps","LiveObject","BaseAudioObject","toValidValue","getProp","v","toDisplayValue","validateValue","emit","subscribe","on","lastValue","updateUI","default","description","isUIState","active","shortName","longName","frameRate","LiveButtonUI","$resetTimer","inTouch","clearTimeout","resetCallback","bgColor","activeBgColor","bgOnColor","activeBgOnColor","borderColor","focusBorderColor","ctx","borderWidth","fullSize","clearRect","lineWidth","buttonBgColor","buttonBorderColor","fillStyle","beginPath","ellipse","PI","fill","strokeStyle","stroke","LiveButton","inlets","outlets","args","inlet","outlet","Bang","transition","b01","b10","isHot","optional","LiveDialUI","inputBuffer","interactionRect","newValue","getValueFromDelta","addStep","key","match","slice","fontFamily","fontSize","fontFace","appearance","triangle","showName","showNumber","panelColor","activeNeedleColor","needleColor","activeDialColor","dialColor","textColor","triBorderColor","triColor","triangleHeight","triangleLineWidth","start","end","valPos","dialHeight","toRad","dialRadius","dialCenterX","dialCenterY","arcStartX","cos","arcStartY","sin","arcEndX","arcEndY","valuePosX","valuePosY","endCapRadius","panelOffset","roundedRect","fillRoundedRect","arc","midpoint","moveTo","lineTo","font","textAlign","fillText","tinyOffset","tipPositionX","tipPositionY","totalPixels","stepPixels","prevPixels","pixels","steps","normExp","LiveDial","isBang","outletAll","numbox","LiveNumbox","button","dial","slider","LiveSlider","tab","LiveTab","toggle","LiveToggle","text","LiveText","LiveMeter","LiveGain","LiveGainUI","levels","relative","getValueFromPos","orientation","triOnColor","mode","coldColor","warmColor","hotColor","overloadColor","inactiveColdColor","inactiveWarmColor","padding","find","i","maxValues","maxTimer","undefined","schedulePaint","channels","clipValue","meterThick","metersThick","save","$width","$height","translate","rotate","fgColor","$top","fillRect","histMax","histDistance","clipDistance","clip","hotStop","warmStop","gradient","createLinearGradient","addColorStop","triOrigin","restore","rmsNode","gainNode","audioCtx","createGain","bypassNode","$requestTimer","node","index","startRequest","lastResult","request","thresh","result","map","atodb","every","scheduleRequest","lastMetering","lastMode","windowSize","applyBPF","get","metering","disconnect","connect","dbtoa","update","gain","Node","paramValue","sliderColor","thresholdDB","thresholdLinear","interp","LiveMeterUI","values","disconnectAudioInlet","inletConnections","connectAudioInlet","package","author","version","LiveNumboxUI","activeTriColor","triColor2","activeTriColor2","activeSliderColor","closePath","textBaseline","LiveSliderUI","interactionWidth","LiveTabUI","tabRects","getTabRects","multiline","spacingX","spacingXIn","spacingY","spacingYIn","margin","minHeight","count","countPerLine","lines","interval","rectWidth","ceil","textWidths","total","space","j","textDimensions","measureText","used","rectSpace","textOnColor","activeTextColor","activeTextOnColor","LiveTextUI","textOn","LiveToggleUI"],"mappings":"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","file":"js/eba93757cfcf50a05882.js","sourcesContent":["export const registeredProcessors = new Set<string>();\n\nconst AWN: typeof AudioWorkletNode = window.AudioWorkletNode ? AudioWorkletNode : null;\ntype DataToProcessor = DisposableAudioWorkletMessageEventDataToProcessor;\nexport class DisposableAudioWorkletNode<F extends Record<string, any> = Record<string, any>, T extends DataToProcessor = DataToProcessor, P extends string = string, O extends any = any> extends AWN {\n    get port(): AudioWorkletMessagePort<F, T> {\n        return super.port;\n    }\n    get parameters(): DisposableAudioParamMap<P> {\n        return super.parameters as DisposableAudioParamMap<P>;\n    }\n    protected readonly options: TypedAudioWorkletNodeOptions<O>;\n    destroyed = false;\n    destroy() {\n        this.port.postMessage({ destroy: true } as T);\n        this.port.close();\n        this.destroyed = true;\n    }\n    constructor(context: BaseAudioContext, name: string, options?: TypedAudioWorkletNodeOptions<O>) {\n        super(context, name, options);\n        this.options = options;\n    }\n}\n\nexport abstract class AudioWorkletRegister {\n    static processorID: string;\n    static processorURL: string;\n    static registeredProcessors = registeredProcessors;\n    static registering = false;\n    static get registered() {\n        return this.registeredProcessors.has(this.processorID);\n    }\n    static set registered(b: boolean) {\n        this.registeredProcessors.add(this.processorID);\n    }\n    static processor: () => void;\n    static Node: new (context: BaseAudioContext, options?: AudioWorkletNodeOptions) => DisposableAudioWorkletNode;\n    private static resolves: { [id: string]: ((value?: void | PromiseLike<void>) => void)[]} = {};\n    private static rejects: { [id: string]: ((reason?: any) => void)[] } = {};\n    private static async registerProcessor(audioWorklet: AudioWorklet) {\n        this.registering = true;\n        try {\n            const url = this.processorURL || window.URL.createObjectURL(new Blob([`(${this.processor.toString()})();`], { type: \"text/javascript\" }));\n            await audioWorklet.addModule(url);\n            this.resolves[this.processorID].forEach(f => f());\n            this.registering = false;\n            this.registered = true;\n        } catch (e) {\n            this.rejects[this.processorID].forEach(f => f(e));\n        }\n        this.rejects[this.processorID] = [];\n        this.resolves[this.processorID] = [];\n    }\n    static async register(audioWorklet: AudioWorklet): Promise<void> {\n        if (!this.resolves[this.processorID]) this.resolves[this.processorID] = [];\n        if (!this.rejects[this.processorID]) this.rejects[this.processorID] = [];\n        const promise = new Promise<void>((resolve, reject) => {\n            this.resolves[this.processorID].push(resolve);\n            this.rejects[this.processorID].push(reject);\n        });\n        if (this.registered) return new Promise<void>(resolve => resolve());\n        if (this.registering) return promise;\n        if (!this.registered && audioWorklet) this.registerProcessor(audioWorklet);\n        return promise;\n    }\n}\n","import { AudioWorkletRegister, DisposableAudioWorkletNode } from \"./Base\";\nimport processorURL from \"./TemporalAnalyser.worklet.ts\"; // eslint-disable-line import/extensions\n\nexport interface DataToProcessor extends DisposableAudioWorkletMessageEventDataToProcessor {\n    id: number;\n    rms?: boolean;\n    zcr?: boolean;\n    buffer?: boolean;\n}\nexport interface DataFromProcessor {\n    id: number;\n    rms?: number[];\n    zcr?: number[];\n    buffer?: { $: Uint32Array; data: Float32Array[]; $total: Uint32Array; lock: Int32Array };\n}\nexport type Parameters = \"windowSize\";\nexport const processorID = \"__JSPatcher_TemporalAnalyser\";\nexport class TemporalAnalyserNode extends DisposableAudioWorkletNode<DataFromProcessor, DataToProcessor, Parameters> {\n    private promiseID = 0;\n    private resolves: { [id: number]: (rms?: DataFromProcessor | PromiseLike<DataFromProcessor>) => any } = {};\n    constructor(context: BaseAudioContext) {\n        super(context, processorID, { numberOfInputs: 1, numberOfOutputs: 0 });\n        this.port.onmessage = (e: AudioWorkletMessageEvent<DataFromProcessor>) => {\n            const { id } = e.data;\n            delete e.data.id;\n            const f = this.resolves[id];\n            if (f) f(e.data);\n            delete this.resolves[id];\n        };\n    }\n    get rms() {\n        return this.gets({ rms: true });\n    }\n    get zcr() {\n        return this.gets({ zcr: true });\n    }\n    get buffer() {\n        return this.gets({ buffer: true });\n    }\n    gets(options: Omit<DataToProcessor, \"id\">) {\n        if (this.destroyed) throw new Error(\"The Node is already destroyed.\");\n        const promise = new Promise<DataFromProcessor>(resolve => this.resolves[this.promiseID] = resolve);\n        this.port.postMessage({ id: this.promiseID++, ...options });\n        return promise;\n    }\n}\nexport class TemporalAnalyserRegister extends AudioWorkletRegister {\n    static processorID = processorID;\n    static processorURL = processorURL;\n    static Node = TemporalAnalyserNode;\n}\n","module.exports = __webpack_public_path__ + \"js/b280af5c0cc51e6cd7ee.worklet.js\";","import * as React from \"react\";\nimport { toMIDI, iNormExp } from \"../../../utils/math\";\nimport { BaseAudioObject } from \"../Base\";\nimport { TMeta } from \"../../types\";\nimport { BaseUI, BaseUIState, CanvasUI } from \"../BaseUI\";\n\nexport const getDisplayValue = (value: number, type: string, unitstyle: string, units: string, enums: string[]) => {\n    if (type === \"enum\") return enums[value];\n    if (unitstyle === \"int\") return value.toFixed(0);\n    if (unitstyle === \"float\") return value.toFixed(2);\n    if (unitstyle === \"time\") return value.toFixed(type === \"int\" ? 0 : 2) + \" ms\";\n    if (unitstyle === \"hertz\") return value.toFixed(type === \"int\" ? 0 : 2) + \" Hz\";\n    if (unitstyle === \"decibel\") return value.toFixed(type === \"int\" ? 0 : 2) + \" dB\";\n    if (unitstyle === \"%\") return value.toFixed(type === \"int\" ? 0 : 2) + \" %\";\n    if (unitstyle === \"pan\") return value === 0 ? \"C\" : (type === \"int\" ? Math.abs(value) : Math.abs(value).toFixed(2)) + (value < 0 ? \" L\" : \" R\");\n    if (unitstyle === \"semitones\") return value.toFixed(type === \"int\" ? 0 : 2) + \" st\";\n    if (unitstyle === \"midi\") return toMIDI(value);\n    if (unitstyle === \"custom\") return value.toFixed(type === \"int\" ? 0 : 2) + \" \" + units;\n    if (unitstyle === \"native\") return value.toFixed(type === \"int\" ? 0 : 2);\n    return \"N/A\";\n};\nexport type LiveUIState = LiveUIProps & BaseUIState;\nexport class LiveUI<T extends LiveObject, S extends Partial<LiveUIState> & Record<string, any> = {}> extends CanvasUI<T, {}, S & LiveUIState> {\n    className: string;\n    $changeTimer = -1;\n    state: S & LiveUIState = {\n        ...this.state,\n        value: this.object.state.value\n    };\n    handleKeyDown = (e: React.KeyboardEvent) => {};\n    handleKeyUp = (e: React.KeyboardEvent) => {};\n    private handleTouchStart = (e: React.TouchEvent) => {\n        this.canvas.focus();\n        const rect = this.canvas.getBoundingClientRect();\n        let prevX = e.touches[0].clientX;\n        let prevY = e.touches[0].clientY;\n        const fromX = prevX - rect.left;\n        const fromY = prevY - rect.top;\n        const prevValue = this.state.value;\n        this.handlePointerDown({ x: fromX, y: fromY, originalEvent: e });\n        const handleTouchMove = (e: TouchEvent) => {\n            e.preventDefault();\n            const clientX = e.changedTouches[0].clientX;\n            const clientY = e.changedTouches[0].clientY;\n            const movementX = clientX - prevX;\n            const movementY = clientY - prevY;\n            prevX = clientX;\n            prevY = clientY;\n            const x = clientX - rect.left;\n            const y = clientY - rect.top;\n            this.handlePointerDrag({ prevValue, x, y, fromX, fromY, movementX, movementY, originalEvent: e });\n        };\n        const handleTouchEnd = (e: TouchEvent) => {\n            e.preventDefault();\n            const x = e.changedTouches[0].clientX - rect.left;\n            const y = e.changedTouches[0].clientY - rect.top;\n            this.handlePointerUp({ x, y, originalEvent: e });\n            document.removeEventListener(\"touchmove\", handleTouchMove);\n            document.removeEventListener(\"touchend\", handleTouchEnd);\n        };\n        document.addEventListener(\"touchmove\", handleTouchMove, { passive: false });\n        document.addEventListener(\"touchend\", handleTouchEnd, { passive: false });\n    };\n    handleWheel = (e: React.WheelEvent) => {};\n    handleClick = (e: React.MouseEvent) => {};\n    private handleMouseDown = (e: React.MouseEvent) => {\n        e.preventDefault();\n        this.canvas.focus();\n        const rect = this.canvas.getBoundingClientRect();\n        const fromX = e.clientX - rect.left;\n        const fromY = e.clientY - rect.top;\n        const prevValue = this.state.value;\n        this.handlePointerDown({ x: fromX, y: fromY, originalEvent: e });\n        const handleMouseMove = (e: MouseEvent) => {\n            e.preventDefault();\n            const x = e.clientX - rect.left;\n            const y = e.clientY - rect.top;\n            this.handlePointerDrag({ prevValue, x, y, fromX, fromY, movementX: e.movementX, movementY: e.movementY, originalEvent: e });\n        };\n        const handleMouseUp = (e: MouseEvent) => {\n            e.preventDefault();\n            const x = e.clientX - rect.left;\n            const y = e.clientY - rect.top;\n            this.handlePointerUp({ x, y, originalEvent: e });\n            document.removeEventListener(\"mousemove\", handleMouseMove);\n            document.removeEventListener(\"mouseup\", handleMouseUp);\n        };\n        document.addEventListener(\"mousemove\", handleMouseMove);\n        document.addEventListener(\"mouseup\", handleMouseUp);\n    };\n    handleMouseOver = (e: React.MouseEvent) => {};\n    handleMouseOut = (e: React.MouseEvent) => {};\n    handleContextMenu = (e: React.MouseEvent) => {};\n    handlePointerDown = (e: PointerDownEvent) => {};\n    handlePointerDrag = (e: PointerDragEvent) => {};\n    handlePointerUp = (e: PointerUpEvent) => {};\n    handleFocusIn = (e: React.FocusEvent) => this.setState({ focus: true });\n    handleFocusOut = (e: React.FocusEvent) => this.setState({ focus: false });\n    /**\n     * Normalized value between 0 - 1.\n     *\n     * @readonly\n     * @memberof LiveUI\n     */\n    get distance() {\n        return LiveUI.getDistance(this.state);\n    }\n    static getDistance(state: { type: \"enum\" | \"int\" | \"float\"; value: number; min: number; max: number; exponent: number; enums?: string[] }) {\n        const { type, max, min, value, exponent, enums } = state;\n        const normalized = type === \"enum\" ? Math.max(0, Math.min(enums.length - 1, value)) / (enums.length - 1) : (Math.max(min, Math.min(max, value)) - min) / (max - min);\n        return iNormExp(normalized || 0, exponent);\n    }\n    /**\n     * Count steps in range min-max with step\n     *\n     * @readonly\n     * @memberof LiveUI\n     */\n    get stepsCount() {\n        const { type, max, min, step, enums } = this.state;\n        if (type === \"enum\") return enums.length - 1;\n        if (type === \"float\") return Math.min(Number.MAX_SAFE_INTEGER, Math.floor((max - min) / step));\n        return Math.min(Math.floor((max - min) / (Math.round(step) || 1)), max - min);\n    }\n    get displayValue() {\n        const { value, type, unitStyle, units, enums } = this.state;\n        return getDisplayValue(value, type, unitStyle, units, enums);\n    }\n    setValueToOutput(value: number) {\n        this.setState({ value });\n        this.scheduleChangeHandler();\n    }\n    changeCallback = () => {\n        this.props.object.onChangeFromUI({ value: this.state.value, displayValue: this.displayValue });\n        this.$changeTimer = -1;\n    };\n    scheduleChangeHandler() {\n        if (this.$changeTimer === -1) this.$changeTimer = window.setTimeout(this.changeCallback, this.state.speedLim);\n    }\n    paint() {}\n    render() {\n        return (\n            <BaseUI {...this.props}>\n                <canvas\n                    ref={this.refCanvas}\n                    className={[\"live-component\", this.className].join(\" \")}\n                    style={{ position: \"absolute\", display: \"inline-block\", width: \"100%\", height: \"100%\" }}\n                    tabIndex={1}\n                    onKeyDown={this.handleKeyDown}\n                    onKeyUp={this.handleKeyUp}\n                    onTouchStart={this.handleTouchStart}\n                    onWheel={this.handleWheel}\n                    onClick={this.handleClick}\n                    onMouseDown={this.handleMouseDown}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onContextMenu={this.handleContextMenu}\n                    onFocus={this.handleFocusIn}\n                    onBlur={this.handleFocusOut}\n                    {...this.props.canvasProps}\n                />\n            </BaseUI>\n        );\n    }\n}\nexport type LiveObjectState = { value: number; displayValue: string };\nexport type LiveObjectEventMap = { \"changeFromUI\": { value: number; displayValue: string } };\nexport class LiveObject<D = {}, S extends Partial<LiveObjectState> & Record<string, any> = {}, I extends any[] = any[], O extends any[] = any[], A extends any[] = any[], P extends Partial<Omit<LiveUIState, \"value\">> & Record<string, any> = {}, U extends Partial<LiveUIState> & Record<string, any> = {}> extends BaseAudioObject<D, S & LiveObjectState, I, O, A, P & Omit<LiveUIState, \"value\">, U & LiveUIState, LiveObjectEventMap> {\n    static package = \"live\";\n    static author = \"Fr0stbyteR\";\n    static version = \"1.0.0\";\n    static description = \"Ab**ton Live User ?\";\n    static props: TMeta[\"props\"] = { /*\n        value: {\n            type: \"number\",\n            default: 0,\n            description: \"Initial value\",\n            isUIState: true\n        },*/\n        min: {\n            type: \"number\",\n            default: 0,\n            description: \"Minimum value\",\n            isUIState: true\n        },\n        max: {\n            type: \"number\",\n            default: 127,\n            description: \"Maximum value\",\n            isUIState: true\n        },\n        step: {\n            type: \"number\",\n            default: 1,\n            description: \"Value change step\",\n            isUIState: true\n        },\n        type: {\n            type: \"enum\",\n            enums: [\"enum\", \"float\", \"int\"],\n            default: \"int\",\n            description: \"Value type\",\n            isUIState: true\n        },\n        enums: {\n            type: \"object\",\n            default: [\"\"],\n            description: \"Enum values\",\n            isUIState: true\n        },\n        active: {\n            type: \"boolean\",\n            default: true,\n            description: \"Active state\",\n            isUIState: true\n        },\n        focus: {\n            type: \"boolean\",\n            default: false,\n            description: \"Focus state\",\n            isUIState: true\n        },\n        shortName: {\n            type: \"string\",\n            default: \"\",\n            description: \"Short name to display\",\n            isUIState: true\n        },\n        longName: {\n            type: \"string\",\n            default: \"\",\n            description: \"Long name to display\",\n            isUIState: true\n        },\n        unitStyle: {\n            type: \"enum\",\n            enums: [\"float\", \"int\", \"time\", \"hertz\", \"decibel\", \"%\", \"pan\", \"semitones\", \"midi\", \"custom\", \"native\"],\n            default: \"int\",\n            description: \"Style of unit to display\",\n            isUIState: true\n        },\n        units: {\n            type: \"string\",\n            default: \"\",\n            description: \"If unitStyle set to custom, display this as unit\",\n            isUIState: true\n        },\n        exponent: {\n            type: \"number\",\n            default: 0,\n            description: \"UI modulation bpf, 0 for linear\",\n            isUIState: true\n        },\n        speedLim: {\n            type: \"number\",\n            default: 16,\n            description: \"Value output speed limit in ms\",\n            isUIState: true\n        },\n        frameRate: {\n            type: \"number\",\n            default: 60,\n            description: \"UI refresh rate\",\n            isUIState: true\n        }\n    };\n    state = { value: 0, displayValue: \"0\" } as S & LiveObjectState;\n    static ui: typeof LiveUI;\n    /**\n     * Get a nearest valid number\n     *\n     * @returns {number}\n     * @memberof LiveObject\n     */\n    toValidValue(value: number): number {\n        const min = this.getProp(\"min\");\n        const max = this.getProp(\"max\");\n        const step = this.getProp(\"step\");\n        const v = Math.min(max, Math.max(min, value));\n        return min + Math.floor((v - min) / step) * step;\n    }\n    toDisplayValue(value: number): string {\n        const { type, unitStyle, units, enums } = this.props;\n        return getDisplayValue(value, type, unitStyle, units, enums);\n    }\n    validateValue() {\n        this.state.value = this.toValidValue(this.state.value);\n        this.state.displayValue = this.toDisplayValue(this.state.value);\n    }\n    onChangeFromUI(e: { value: number; displayValue: string }) {\n        this.emit(\"changeFromUI\", e);\n    }\n    subscribe() {\n        super.subscribe();\n        this.on(\"updateProps\", (props) => {\n            if (typeof props.max !== \"undefined\" || typeof props.min !== \"undefined\" || typeof props.step !== \"undefined\") {\n                const lastValue = this.state.value;\n                this.validateValue();\n                if (lastValue !== this.state.value) this.updateUI({ value: this.state.value } as any);\n            }\n        });\n    }\n}\n","import { LiveUI, LiveObject, LiveUIState } from \"./Base\";\nimport { TMeta } from \"../../types\";\nimport { Bang } from \"../Base\";\n\ninterface LiveButtonProps extends LiveUIProps {\n    bgColor: string;\n    activeBgColor: string;\n    bgOnColor: string;\n    activeBgOnColor: string;\n    borderColor: string;\n    focusBorderColor: string;\n    transition: \"Zero->One\" | \"One->Zero\" | \"Both\";\n}\ninterface LiveButtonUIState extends Omit<LiveButtonProps, \"transition\">, LiveUIState {}\n\nclass LiveButtonUI extends LiveUI<LiveButton, LiveButtonUIState> {\n    static defaultSize: [number, number] = [30, 30];\n    className = \"live-button\";\n    inTouch = false;\n    $resetTimer = -1;\n    resetCallback = () => {\n        this.setValueToOutput(0);\n        this.$resetTimer = -1;\n    };\n    paint() {\n        if (this.$resetTimer !== -1) {\n            window.clearTimeout(this.$resetTimer);\n            this.resetCallback();\n        }\n        const {\n            // width,\n            // height,\n            active,\n            focus,\n            bgColor,\n            activeBgColor,\n            bgOnColor,\n            activeBgOnColor,\n            borderColor,\n            focusBorderColor,\n            value\n        } = this.state;\n        const ctx = this.ctx;\n        if (!ctx) return;\n        const borderWidth = 1;\n\n        const [width, height] = this.fullSize();\n        ctx.clearRect(0, 0, width, height);\n\n        ctx.lineWidth = borderWidth;\n        const buttonBgColor = active ? (value ? activeBgOnColor : activeBgColor) : (value ? bgOnColor : bgColor);\n        const buttonBorderColor = focus ? focusBorderColor : borderColor;\n\n        ctx.fillStyle = buttonBgColor;\n        ctx.beginPath();\n        ctx.ellipse(width * 0.5, height * 0.5, width * 0.5 - 2 * borderWidth, height * 0.5 - 2 * borderWidth, 0, 0, 2 * Math.PI);\n        ctx.fill();\n        ctx.strokeStyle = buttonBorderColor;\n        ctx.stroke();\n\n        if (value && !this.inTouch) this.$resetTimer = window.setTimeout(this.resetCallback, 100);\n    }\n    handlePointerDown = () => {\n        this.inTouch = true;\n        this.setValueToOutput(1);\n    };\n    handlePointerUp = () => {\n        this.inTouch = false;\n        this.setValueToOutput(0);\n    };\n}\n\nexport class LiveButton extends LiveObject<{}, {}, [any], [Bang, number], [number], LiveButtonProps, LiveButtonUIState> {\n    static description = \"Button\";\n    static inlets: TMeta[\"inlets\"] = [{\n        isHot: true,\n        type: \"number\",\n        description: \"Output a bang following transition prop.\"\n    }];\n    static outlets: TMeta[\"outlets\"] = [{\n        type: \"bang\",\n        description: \"Bang\"\n    }, {\n        type: \"number\",\n        description: \"Current value\"\n    }];\n    static args: TMeta[\"args\"] = [{\n        type: \"number\",\n        optional: true,\n        default: 0,\n        description: \"Initial value\"\n    }];\n    static props: TMeta[\"props\"] = {\n        shortName: {\n            type: \"string\",\n            default: \"live.button\",\n            description: \"Short name to display\",\n            isUIState: true\n        },\n        longName: {\n            type: \"string\",\n            default: \"live.button\",\n            description: \"Long name to display\",\n            isUIState: true\n        },\n        max: {\n            type: \"number\",\n            default: 1,\n            description: \"Maximum value\",\n            isUIState: true\n        },\n        bgColor: {\n            type: \"color\",\n            default: \"rgba(90, 90, 90, 1)\",\n            description: \"Background color (inactive)\",\n            isUIState: true\n        },\n        activeBgColor: {\n            type: \"color\",\n            default: \"rgba(195, 195, 195, 1)\",\n            description: \"Background color (active)\",\n            isUIState: true\n        },\n        bgOnColor: {\n            type: \"color\",\n            default: \"rgba(195, 195, 195, 1)\",\n            description: \"Background color (on / inactive)\",\n            isUIState: true\n        },\n        activeBgOnColor: {\n            type: \"color\",\n            default: \"rgba(109, 215, 255, 1)\",\n            description: \"Background color (on / active)\",\n            isUIState: true\n        },\n        borderColor: {\n            type: \"color\",\n            default: \"rgba(80, 80, 80, 1)\",\n            description: \"Border color (unfocus)\",\n            isUIState: true\n        },\n        focusBorderColor: {\n            type: \"color\",\n            default: \"rgba(80, 80, 80, 1)\",\n            description: \"Border color (focus)\",\n            isUIState: true\n        },\n        transition: {\n            type: \"enum\",\n            enums: [\"Zero->One\", \"One->Zero\", \"Both\"],\n            default: \"Zero->One\",\n            description: \"Specifies when a bang message will be sent to the outlet\"\n        }\n    };\n    static ui = LiveButtonUI;\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 1;\n            this.outlets = 2;\n        });\n        this.on(\"updateArgs\", (args) => {\n            this.state.value = +!!args[0];\n            this.validateValue();\n            this.updateUI({ value: this.state.value });\n        });\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) {\n                this.state.value = +!!data;\n                this.validateValue();\n                this.updateUI({ value: this.state.value });\n                this.outlet(1, this.state.value);\n                if (this.state.value && this.getProp(\"transition\") !== \"One->Zero\") this.outlet(0, new Bang());\n            }\n        });\n        this.on(\"changeFromUI\", ({ value }) => {\n            const lastValue = this.state.value;\n            this.state.value = value;\n            this.validateValue();\n            this.outlet(1, value);\n            const transition = this.getProp(\"transition\");\n            const b01 = transition !== \"One->Zero\";\n            const b10 = transition !== \"Zero->One\";\n            if ((b01 && lastValue < this.state.value) || (b10 && lastValue > this.state.value)) this.outlet(0, new Bang());\n        });\n    }\n}\n","import { LiveUI, LiveObject, LiveUIState } from \"./Base\";\nimport { TMeta } from \"../../types\";\nimport { Bang, isBang } from \"../Base\";\nimport { roundedRect, fillRoundedRect } from \"../../../utils/utils\";\nimport { normExp, toRad } from \"../../../utils/math\";\n\ninterface LiveDialProps extends LiveUIProps {\n    borderColor: string;\n    focusBorderColor: string;\n    dialColor: string;\n    activeDialColor: string;\n    needleColor: string;\n    activeNeedleColor: string;\n    panelColor: string;\n    triBorderColor: string;\n    triColor: string;\n    textColor: string;\n    fontFamily: string;\n    fontSize: number;\n    fontFace: \"regular\" | \"bold\" | \"italic\" | \"bold italic\";\n    appearance: \"vertical\" | \"tiny\" | \"panel\";\n    showName: boolean;\n    showNumber: boolean;\n    triangle: boolean;\n}\ninterface LiveDialUIState extends LiveDialProps, LiveUIState {\n    inputBuffer: string;\n}\nclass LiveDialUI extends LiveUI<LiveDial, LiveDialUIState> {\n    static defaultSize: [number, number] = [45, 60];\n    state: LiveDialUIState = {\n        ...this.state,\n        inputBuffer: \"\"\n    };\n    className = \"live-dial\";\n    interactionRect = [0, 0, 0, 0];\n    inTouch = false;\n    paint() {\n        const {\n            // width,\n            // height,\n            active,\n            focus,\n            fontFamily,\n            fontSize,\n            fontFace,\n            appearance,\n            triangle,\n            showName,\n            showNumber,\n            borderColor,\n            focusBorderColor,\n            panelColor,\n            activeNeedleColor,\n            needleColor,\n            activeDialColor,\n            dialColor,\n            textColor,\n            triBorderColor,\n            triColor,\n            shortName,\n            inputBuffer\n        } = this.state;\n        const ctx = this.ctx;\n        if (!ctx) return;\n        const distance = this.distance;\n        const displayValue = inputBuffer ? inputBuffer + \"_\" : this.displayValue;\n\n        const [width, height] = this.fullSize();\n        ctx.clearRect(0, 0, width, height);\n\n        const triangleHeight = 4;\n        const triangleLineWidth = 0.6;\n\n        let start: number;\n        let end: number;\n        let valPos: number;\n        let dialHeight: number;\n\n        if (appearance === \"tiny\") {\n            dialHeight = 18;\n            start = -3 * Math.PI * 0.5;\n            end = 0;\n            valPos = start + toRad(this.distance * 270);\n        } else {\n            dialHeight = 25;\n            start = Math.PI - 3 * Math.PI / 8;\n            end = 2 * Math.PI + 3 * Math.PI / 8;\n            valPos = start + toRad(this.distance * 315);\n        }\n        const dialRadius = dialHeight * 0.5;\n\n        let dialCenterX = width * 0.5;\n        let dialCenterY = height * 0.5 + 1;\n        if (appearance === \"panel\") {\n            dialCenterY += 10;\n        } else if (appearance === \"vertical\") {\n            if (showNumber) dialCenterY -= fontSize - 5;\n            if (showName) dialCenterY += fontSize - 5;\n            if (triangle) dialCenterY += triangleHeight - 1;\n        } else if (appearance === \"tiny\") {\n            if (showName) {\n                dialCenterY += 6;\n                dialCenterX = 10;\n            }\n        }\n        this.interactionRect = [0, dialCenterY - dialHeight * 0.5, width, dialHeight];\n        const arcStartX = dialCenterX + (dialHeight * 0.5 * Math.cos(start));\n        const arcStartY = dialCenterY + (dialHeight * 0.5 * Math.sin(start));\n        const arcEndX = dialCenterX + (dialHeight * 0.5 * Math.cos(end));\n        const arcEndY = dialCenterY + (dialHeight * 0.5 * Math.sin(end));\n        const valuePosX = dialCenterX + (dialHeight * 0.5 * Math.cos(valPos));\n        const valuePosY = dialCenterY + (dialHeight * 0.5 * Math.sin(valPos));\n        const endCapRadius = 1;\n        const lineWidth = 2;\n        let panelOffset = 0;\n\n        if (appearance === \"panel\") {\n            panelOffset = 5;\n            ctx.strokeStyle = focus ? focusBorderColor : borderColor;\n            ctx.lineWidth = 0.4;\n            roundedRect(ctx, 1, 1, width - 2, height - 2, 5);\n            ctx.fillStyle = panelColor;\n            fillRoundedRect(ctx, 1.2, 1.2, width - 2.4, 30 - 0.4, [5, 5, 0, 0]);\n        }\n\n        ctx.strokeStyle = active ? activeNeedleColor : needleColor;\n        ctx.fillStyle = ctx.strokeStyle;\n        ctx.lineWidth = lineWidth;\n        // draw background arc endcaps\n        ctx.beginPath();\n        ctx.arc(arcStartX, arcStartY, endCapRadius, 0, 2 * Math.PI);\n        ctx.fill();\n        ctx.beginPath();\n        ctx.arc(arcEndX, arcEndY, endCapRadius, 0, 2 * Math.PI);\n        ctx.fill();\n        // draw background arc\n        ctx.beginPath();\n        ctx.arc(dialCenterX, dialCenterY, dialRadius, start, end);\n        ctx.stroke();\n\n        // draw value arc, which changes if triangle is enabled\n        ctx.strokeStyle = active ? activeDialColor : dialColor;\n        ctx.fillStyle = ctx.strokeStyle;\n        if (triangle) {\n            const midpoint = (start + end) * 0.5;\n            ctx.strokeStyle = active ? activeDialColor : dialColor;\n            ctx.beginPath();\n            if (distance > 0.5) ctx.arc(dialCenterX, dialCenterY, dialRadius, midpoint, valPos);\n            else ctx.arc(dialCenterX, dialCenterY, dialRadius, valPos, midpoint);\n            ctx.stroke();\n        } else {\n            // draw value arc endcap\n            ctx.beginPath();\n            ctx.arc(arcStartX, arcStartY, endCapRadius, 0, 2 * Math.PI);\n            ctx.fill();\n            // draw value arc\n            ctx.beginPath();\n            ctx.arc(dialCenterX, dialCenterY, dialRadius, start, valPos);\n            ctx.stroke();\n        }\n        // draw dial\n        // draw dial round endcaps\n        ctx.strokeStyle = active ? activeNeedleColor : needleColor;\n        ctx.fillStyle = ctx.strokeStyle;\n        ctx.beginPath();\n        ctx.arc(dialCenterX, dialCenterY, endCapRadius, 0, 2 * Math.PI);\n        ctx.fill();\n        ctx.beginPath();\n        ctx.arc(valuePosX, valuePosY, endCapRadius, 0, 2 * Math.PI);\n        ctx.fill();\n        // draw dial line\n        ctx.beginPath();\n        ctx.moveTo(dialCenterX, dialCenterY);\n        ctx.lineTo(valuePosX, valuePosY);\n        ctx.stroke();\n        // add text if it is enabled\n        ctx.font = `${fontFace === \"regular\" ? \"\" : fontFace} ${fontSize}px ${fontFamily}, sans-serif`;\n        ctx.fillStyle = textColor;\n        if (showName) {\n            if (appearance === \"tiny\") {\n                ctx.textAlign = \"left\";\n                ctx.fillText(shortName, 0, panelOffset + fontSize, width);\n            } else {\n                ctx.textAlign = \"center\";\n                ctx.fillText(shortName, width * 0.5, panelOffset + fontSize, width);\n            }\n        }\n        if (showNumber) {\n            const tinyOffset = appearance === \"tiny\" ? 12 : 0;\n            if (appearance === \"tiny\") {\n                ctx.textAlign = \"left\";\n                ctx.fillText(displayValue, tinyOffset, height - 2, width);\n            } else {\n                ctx.textAlign = \"center\";\n                ctx.fillText(displayValue, width * 0.5, height - 2, width);\n            }\n        }\n        // draw triangle if it is enabled\n        if (triangle) {\n            if (!distance) ctx.fillStyle = triColor;\n            else if (!active) ctx.fillStyle = dialColor;\n            else ctx.fillStyle = activeDialColor;\n            ctx.beginPath();\n            if (appearance === \"tiny\") {\n                const tipPositionX = dialCenterX + dialHeight * 0.5 * Math.cos(-3 * Math.PI / 4) - 1;\n                const tipPositionY = dialCenterY + dialHeight * 0.5 * Math.sin(-3 * Math.PI / 4) - 1;\n                ctx.moveTo(tipPositionX, tipPositionY);\n                ctx.lineTo(tipPositionX - triangleHeight, tipPositionY);\n                ctx.lineTo(tipPositionX, tipPositionY - triangleHeight);\n                ctx.lineTo(tipPositionX, tipPositionY);\n            } else {\n                ctx.moveTo(dialCenterX, dialCenterY - dialRadius - 1);\n                ctx.lineTo(dialCenterX - triangleHeight, dialCenterY - dialRadius - 1 - triangleHeight);\n                ctx.lineTo(dialCenterX + triangleHeight, dialCenterY - dialRadius - 1 - triangleHeight);\n                ctx.lineTo(dialCenterX, dialCenterY - dialRadius - 1);\n            }\n            ctx.fill();\n            ctx.strokeStyle = triBorderColor || \"transparent\";\n            ctx.lineWidth = triangleLineWidth;\n            ctx.stroke();\n        }\n    }\n    getValueFromDelta(e: PointerDragEvent) {\n        const { type, min, max, enums, exponent } = this.state;\n        const step = type === \"enum\" ? 1 : (this.state.step || 1);\n        const totalPixels = 100;\n        const stepsCount = this.stepsCount;\n        const stepPixels = totalPixels / stepsCount;\n        const prevPixels = LiveUI.getDistance({ value: e.prevValue, type, min, max, enums, exponent }) * totalPixels;\n        const pixels = prevPixels + e.fromY - e.y;\n        let steps = Math.round(normExp(pixels / totalPixels, exponent) * totalPixels / stepPixels);\n        steps = Math.min(stepsCount, Math.max(0, steps));\n        if (type === \"enum\") return steps;\n        if (type === \"int\") return Math.round(steps * step + min);\n        return steps * step + min;\n    }\n    handlePointerDown = (e: PointerDownEvent) => {\n        if (\n            e.x < this.interactionRect[0]\n            || e.x > this.interactionRect[0] + this.interactionRect[2]\n            || e.y < this.interactionRect[1]\n            || e.y > this.interactionRect[1] + this.interactionRect[3]\n        ) return;\n        this.inTouch = true;\n    };\n    handlePointerDrag = (e: PointerDragEvent) => {\n        if (!this.inTouch) return;\n        const newValue = this.getValueFromDelta(e);\n        if (newValue !== this.state.value) this.setValueToOutput(newValue);\n    };\n    handlePointerUp = () => {\n        this.inTouch = false;\n    };\n    handleKeyDown = (e: React.KeyboardEvent) => {\n        if (!this.state.inputBuffer) {\n            let addStep = 0;\n            if (e.key === \"ArrowUp\" || e.key === \"ArrowRight\") addStep = 1;\n            if (e.key === \"ArrowDown\" || e.key === \"ArrowLeft\") addStep = -1;\n            if (addStep !== 0) {\n                const newValue = this.object.toValidValue(this.state.value + this.state.step * addStep);\n                if (newValue !== this.state.value) this.setValueToOutput(newValue);\n            }\n        }\n        if (e.key.match(/[0-9.-]/)) {\n            this.setState({ inputBuffer: this.state.inputBuffer + e.key });\n            return;\n        }\n        if (e.key === \"Backspace\") {\n            this.setState({ inputBuffer: this.state.inputBuffer.slice(0, -1) });\n            return;\n        }\n        if (e.key === \"Enter\") {\n            const newValue = this.object.toValidValue(+this.state.inputBuffer);\n            this.setState({ inputBuffer: \"\" });\n            if (newValue !== this.state.value) this.setValueToOutput(newValue);\n        }\n    };\n    handleFocusOut = () => {\n        if (this.state.inputBuffer) {\n            const newValue = this.object.toValidValue(+this.state.inputBuffer);\n            this.setState({ inputBuffer: \"\" });\n            if (newValue !== this.state.value) this.setValueToOutput(newValue);\n        }\n        this.setState({ focus: false });\n    };\n}\n\nexport class LiveDial extends LiveObject<{}, {}, [number | Bang, number], [number, string], [number], LiveDialProps, LiveDialUIState> {\n    static description = \"Dial knob\";\n    static inlets: TMeta[\"inlets\"] = [{\n        isHot: true,\n        type: \"number\",\n        description: \"Set and output the value\"\n    }, {\n        isHot: false,\n        type: \"number\",\n        description: \"Set without output the value\"\n    }];\n    static outlets: TMeta[\"outlets\"] = [{\n        type: \"number\",\n        description: \"Number value\"\n    }, {\n        type: \"string\",\n        description: \"Display value\"\n    }];\n    static args: TMeta[\"args\"] = [{\n        type: \"number\",\n        optional: true,\n        default: 0,\n        description: \"Initial value\"\n    }];\n    static props: TMeta[\"props\"] = {\n        shortName: {\n            type: \"string\",\n            default: \"live.dial\",\n            description: \"Short name to display\",\n            isUIState: true\n        },\n        longName: {\n            type: \"string\",\n            default: \"live.dial\",\n            description: \"Long name to display\",\n            isUIState: true\n        },\n        borderColor: {\n            type: \"color\",\n            default: \"rgba(90, 90, 90, 1)\",\n            description: \"Border color (unfocus)\",\n            isUIState: true\n        },\n        focusBorderColor: {\n            type: \"color\",\n            default: \"rgba(80, 80, 80, 1)\",\n            description: \"Border color (focus)\",\n            isUIState: true\n        },\n        dialColor: {\n            type: \"color\",\n            default: \"rgba(109, 215, 255, 1)\",\n            description: \"Dial color (inactive)\",\n            isUIState: true\n        },\n        activeDialColor: {\n            type: \"color\",\n            default: \"rgba(109, 215, 255, 1)\",\n            description: \"Dial color (active)\",\n            isUIState: true\n        },\n        needleColor: {\n            type: \"color\",\n            default: \"rgba(105, 105, 105, 1)\",\n            description: \"Needle color (inactive)\",\n            isUIState: true\n        },\n        activeNeedleColor: {\n            type: \"color\",\n            default: \"rgba(195, 195, 195, 1)\",\n            description: \"Needle color (active)\",\n            isUIState: true\n        },\n        panelColor: {\n            type: \"color\",\n            default: \"rgba(165, 165, 165, 1)\",\n            description: \"Panel color\",\n            isUIState: true\n        },\n        triBorderColor: {\n            type: \"color\",\n            default: \"rgba(50, 50, 50, 1)\",\n            description: \"Triangle border color\",\n            isUIState: true\n        },\n        triColor: {\n            type: \"color\",\n            default: \"rgba(40, 40, 40, 1)\",\n            description: \"Triangle color (inactive)\",\n            isUIState: true\n        },\n        textColor: {\n            type: \"color\",\n            default: \"rgba(255, 255, 255, 1)\",\n            description: \"Text color\",\n            isUIState: true\n        },\n        fontFamily: {\n            type: \"enum\",\n            enums: [\"Lato\", \"Georgia\", \"Times New Roman\", \"Arial\", \"Tahoma\", \"Verdana\", \"Courier New\"],\n            default: \"Arial\",\n            description: \"Font family\",\n            isUIState: true\n        },\n        fontSize: {\n            type: \"number\",\n            default: 10,\n            description: \"Text font size\",\n            isUIState: true\n        },\n        fontFace: {\n            type: \"enum\",\n            enums: [\"regular\", \"bold\", \"italic\", \"bold italic\"],\n            default: \"regular\",\n            description: \"Text style\",\n            isUIState: true\n        },\n        appearance: {\n            type: \"enum\",\n            enums: [\"vertical\", \"tiny\", \"panel\"],\n            default: \"vertical\",\n            description: \"Dial style\",\n            isUIState: true\n        },\n        showName: {\n            type: \"boolean\",\n            default: true,\n            description: \"Display name\",\n            isUIState: true\n        },\n        showNumber: {\n            type: \"boolean\",\n            default: true,\n            description: \"Display number as text\",\n            isUIState: true\n        },\n        triangle: {\n            type: \"boolean\",\n            default: false,\n            description: \"Display yriangle\",\n            isUIState: true\n        }\n    };\n    static ui = LiveDialUI;\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 2;\n            this.outlets = 2;\n        });\n        this.on(\"updateArgs\", (args) => {\n            if (typeof args[0] === \"number\") {\n                this.state.value = args[0];\n                this.validateValue();\n                this.updateUI({ value: this.state.value });\n            }\n        });\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) {\n                if (!isBang(data)) {\n                    const value = +data;\n                    this.state.value = value;\n                    this.validateValue();\n                    this.updateUI({ value: this.state.value });\n                }\n                this.outletAll([this.state.value, this.state.displayValue]);\n            } else if (inlet === 1) {\n                const value = +data;\n                this.state.value = value;\n                this.validateValue();\n                this.updateUI({ value: this.state.value });\n            }\n        });\n        this.on(\"changeFromUI\", ({ value, displayValue }) => {\n            this.state.value = value;\n            this.state.displayValue = displayValue;\n            this.outletAll([this.state.value, this.state.displayValue]);\n        });\n    }\n}\n","import { LiveNumbox } from \"./numbox\";\nimport { LiveButton } from \"./button\";\nimport { LiveDial } from \"./dial\";\nimport { LiveSlider } from \"./slider\";\nimport { LiveTab } from \"./tab\";\nimport { LiveToggle } from \"./toggle\";\nimport { LiveText } from \"./text\";\nimport { LiveMeter } from \"./meter\";\nimport { LiveGain } from \"./gain\";\n\nexport default {\n    numbox: LiveNumbox,\n    button: LiveButton,\n    dial: LiveDial,\n    slider: LiveSlider,\n    tab: LiveTab,\n    toggle: LiveToggle,\n    text: LiveText,\n    \"meter~\": LiveMeter,\n    \"gain~\": LiveGain\n};\n","import { LiveSliderProps } from \"./slider\";\nimport { LiveMeterProps } from \"./meter\";\nimport { LiveUIState, LiveUI, LiveObject, LiveObjectState } from \"./Base\";\nimport { TMeta } from \"../../types\";\nimport { TemporalAnalyserRegister } from \"../dsp/AudioWorklet/TemporalAnalyser\";\nimport { atodb, dbtoa, normExp } from \"../../../utils/math\";\nimport { Bang, isBang } from \"../Base\";\n\ninterface LiveGainProps extends Omit<LiveSliderProps, \"sliderColor\">, LiveMeterProps {\n    metering: \"postFader\" | \"preFader\";\n    interp: number;\n}\ninterface LiveGainUIState extends Omit<LiveGainProps, \"thresholdLinear\" | \"thresholdDB\" | \"windowSize\" | \"speedLim\">, LiveUIState {\n    levels: number[];\n    inputBuffer: string;\n}\nclass LiveGainUI extends LiveUI<LiveGain, LiveGainUIState> {\n    static defaultSize: [number, number] = [120, 45];\n    state: LiveGainUIState = {\n        ...this.state,\n        levels: [],\n        inputBuffer: \"\"\n    };\n    className = \"live-gain\";\n    interactionRect: number[] = [0, 0, 0, 0];\n    inTouch = false;\n    levels: number[] = [];\n    maxValues: number[] = [];\n    maxTimer: number;\n    paint() {\n        const {\n            // width,\n            // height,\n            fontFamily,\n            fontSize,\n            fontFace,\n            orientation,\n            showName,\n            showNumber,\n            textColor,\n            triBorderColor,\n            triOnColor,\n            triColor,\n            shortName,\n            levels,\n            min,\n            max,\n            exponent,\n            active,\n            mode,\n            bgColor,\n            coldColor,\n            warmColor,\n            hotColor,\n            overloadColor,\n            inactiveColdColor,\n            inactiveWarmColor,\n            inputBuffer\n        } = this.state;\n        const ctx = this.ctx;\n        if (!ctx) return;\n        const lineWidth = 0.5;\n        const padding = 8;\n        const distance = this.distance;\n        const displayValue = inputBuffer ? inputBuffer + \"_\" : this.displayValue;\n\n        const [width, height] = this.fullSize();\n        ctx.clearRect(0, 0, width, height);\n\n        this.levels = levels.slice();\n        if (this.levels.length === 0) this.levels = [min];\n        if (this.levels.find((v, i) => typeof this.maxValues[i] === \"undefined\" || v > this.maxValues[i])) {\n            this.maxValues = [...this.levels];\n            if (this.maxTimer) window.clearTimeout(this.maxTimer);\n            this.maxTimer = window.setTimeout(() => {\n                this.maxValues = [...this.levels];\n                this.maxTimer = undefined;\n                this.schedulePaint();\n            }, 1000);\n        } else if (this.levels.find((v, i) => v < this.maxValues[i]) && typeof this.maxTimer === \"undefined\") {\n            this.maxTimer = window.setTimeout(() => {\n                this.maxValues = [...this.levels];\n                this.maxTimer = undefined;\n                this.schedulePaint();\n            }, 1000);\n        }\n\n        const channels = this.levels.length;\n        const clipValue = +(mode === \"linear\");\n        const meterThick = 8;\n        const metersThick = (meterThick + 1) * channels - 1;\n\n        ctx.font = `${fontFace === \"regular\" ? \"\" : fontFace} ${fontSize}px ${fontFamily}, sans-serif`;\n        ctx.textAlign = \"center\";\n        ctx.fillStyle = textColor;\n        if (showName) ctx.fillText(shortName, width * 0.5, fontSize, width);\n        if (showNumber) {\n            if (orientation === \"horizontal\") {\n                ctx.textAlign = \"left\";\n                ctx.fillText(displayValue, 4, height - 2, width);\n            } else {\n                ctx.fillText(displayValue, width * 0.5, height - 2, width);\n            }\n        }\n        this.interactionRect = [\n            0,\n            fontSize + padding,\n            width,\n            height - 2 * (fontSize + padding)\n        ];\n\n        ctx.save();\n        let $width: number;\n        const $height = meterThick;\n        if (orientation === \"horizontal\") {\n            $width = width;\n            ctx.translate(0, (height - metersThick) * 0.5);\n        } else {\n            $width = this.interactionRect[3];\n            ctx.translate((width - metersThick) * 0.5, height - fontSize - padding);\n            ctx.rotate(-Math.PI * 0.5);\n        }\n        ctx.fillStyle = bgColor;\n        if (min >= clipValue || clipValue >= max) {\n            const fgColor = min >= clipValue ? active ? overloadColor : inactiveWarmColor : active ? coldColor : inactiveColdColor;\n            let $top = 0;\n            this.levels.forEach((v) => {\n                if (v < max) ctx.fillRect(0, $top, $width, $height);\n                $top += $height + 1;\n            });\n            $top = 0;\n            ctx.fillStyle = fgColor;\n            this.levels.forEach((v, i) => {\n                const distance = LiveUI.getDistance({ type: \"float\", value: v, min, max, exponent });\n                if (distance > 0) ctx.fillRect(0, $top, distance * $width, $height);\n                const histMax = this.maxValues[i];\n                if (typeof histMax === \"number\" && histMax > v) {\n                    const histDistance = LiveUI.getDistance({ type: \"float\", value: histMax, min, max, exponent });\n                    ctx.fillRect(Math.min($width - 1, histDistance * $width), $top, 1, $height);\n                }\n                $top += $height + 1;\n            });\n        } else {\n            const clipDistance = LiveUI.getDistance({ type: \"float\", value: clipValue, min, max, exponent });\n            const clip = $width - clipDistance * $width;\n            const hotStop = $width - clip;\n            const warmStop = hotStop - 1;\n            const gradient = ctx.createLinearGradient(0, 0, $width, 0);\n            gradient.addColorStop(0, active ? coldColor : inactiveColdColor);\n            gradient.addColorStop(warmStop / $width, active ? warmColor : inactiveWarmColor);\n            gradient.addColorStop(hotStop / $width, active ? hotColor : inactiveWarmColor);\n            gradient.addColorStop(1, active ? overloadColor : inactiveWarmColor);\n            let $top = 0;\n            this.levels.forEach((v) => {\n                if (v < clipValue) ctx.fillRect(0, $top, warmStop, $height);\n                if (v < max) ctx.fillRect(hotStop, $top, clip, $height);\n                $top += $height + 1;\n            });\n            $top = 0;\n            ctx.fillStyle = gradient;\n            this.levels.forEach((v, i) => {\n                const distance = LiveUI.getDistance({ type: \"float\", value: v, min, max, exponent });\n                if (distance > 0) ctx.fillRect(0, $top, Math.min(warmStop, distance * $width), $height);\n                if (distance > clipDistance) ctx.fillRect(hotStop, $top, Math.min(clip, (distance - clipDistance) * $width), $height);\n                const histMax = this.maxValues[i];\n                if (typeof histMax === \"number\" && histMax > v) {\n                    const histDistance = LiveUI.getDistance({ type: \"float\", value: histMax, min, max, exponent });\n                    if (histDistance <= clipDistance) ctx.fillRect(histDistance * $width, $top, 1, $height);\n                    else ctx.fillRect(Math.min($width - 1, histDistance * $width), $top, 1, $height);\n                }\n                $top += $height + 1;\n            });\n        }\n\n        ctx.lineWidth = 1;\n        ctx.strokeStyle = triBorderColor;\n        const triOrigin: [number, number] = [\n            $width * distance,\n            metersThick + lineWidth\n        ];\n        ctx.beginPath();\n        ctx.moveTo(triOrigin[0], triOrigin[1]);\n        ctx.lineTo(triOrigin[0] - 4, triOrigin[1] + 8);\n        ctx.lineTo(triOrigin[0] + 4, triOrigin[1] + 8);\n        ctx.lineTo(triOrigin[0], triOrigin[1]);\n        ctx.stroke();\n\n        ctx.fillStyle = this.inTouch ? triOnColor : triColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    getValueFromPos(e: PointerDownEvent) {\n        const { orientation, type, min, exponent } = this.state;\n        const step = type === \"enum\" ? 1 : (this.state.step || 1);\n        const totalPixels = orientation === \"vertical\" ? this.interactionRect[3] : this.interactionRect[2];\n        const stepsCount = this.stepsCount;\n        const stepPixels = totalPixels / stepsCount;\n        const pixels = orientation === \"vertical\" ? this.interactionRect[3] - (e.y - this.interactionRect[1]) : e.x - this.interactionRect[0];\n        let steps = Math.round(normExp(pixels / totalPixels, exponent) * totalPixels / stepPixels);\n        steps = Math.min(stepsCount, Math.max(0, steps));\n        if (type === \"enum\") return steps;\n        if (type === \"int\") return Math.round(steps * step + min);\n        return steps * step + min;\n    }\n    getValueFromDelta(e: PointerDragEvent) {\n        const { type, min, max, enums, exponent, orientation } = this.state;\n        const step = type === \"enum\" ? 1 : (this.state.step || 1);\n        const totalPixels = orientation === \"horizontal\" ? this.interactionRect[2] : this.interactionRect[3];\n        const stepsCount = this.stepsCount;\n        const stepPixels = totalPixels / stepsCount;\n        const prevPixels = LiveUI.getDistance({ value: e.prevValue, type, min, max, enums, exponent }) * totalPixels;\n        const pixels = prevPixels + (orientation === \"horizontal\" ? e.x - e.fromX : e.fromY - e.y);\n        let steps = Math.round(normExp(pixels / totalPixels, exponent) * totalPixels / stepPixels);\n        steps = Math.min(stepsCount, Math.max(0, steps));\n        if (type === \"enum\") return steps;\n        if (type === \"int\") return Math.round(steps * step + min);\n        return steps * step + min;\n    }\n    handlePointerDown = (e: PointerDownEvent) => {\n        if (\n            e.x < this.interactionRect[0]\n            || e.x > this.interactionRect[0] + this.interactionRect[2]\n            || e.y < this.interactionRect[1]\n            || e.y > this.interactionRect[1] + this.interactionRect[3]\n        ) return;\n        if (!this.state.relative) {\n            const newValue = this.getValueFromPos(e);\n            if (newValue !== this.state.value) this.setValueToOutput(newValue);\n        }\n        this.inTouch = true;\n    };\n    handlePointerDrag = (e: PointerDragEvent) => {\n        if (!this.inTouch) return;\n        let newValue;\n        if (this.state.relative) newValue = this.getValueFromDelta(e);\n        else newValue = this.getValueFromPos(e);\n        if (newValue !== this.state.value) this.setValueToOutput(newValue);\n    };\n    handlePointerUp = () => {\n        this.inTouch = false;\n    };\n    handleKeyDown = (e: React.KeyboardEvent) => {\n        if (!this.state.inputBuffer) {\n            let addStep = 0;\n            if (e.key === \"ArrowUp\" || e.key === \"ArrowRight\") addStep = 1;\n            if (e.key === \"ArrowDown\" || e.key === \"ArrowLeft\") addStep = -1;\n            if (addStep !== 0) {\n                const newValue = this.object.toValidValue(this.state.value + this.state.step * addStep);\n                if (newValue !== this.state.value) this.setValueToOutput(newValue);\n            }\n        }\n        if (e.key.match(/[0-9.-]/)) {\n            this.setState({ inputBuffer: this.state.inputBuffer + e.key });\n            return;\n        }\n        if (e.key === \"Backspace\") {\n            this.setState({ inputBuffer: this.state.inputBuffer.slice(0, -1) });\n            return;\n        }\n        if (e.key === \"Enter\") {\n            const newValue = this.object.toValidValue(+this.state.inputBuffer);\n            this.setState({ inputBuffer: \"\" });\n            if (newValue !== this.state.value) this.setValueToOutput(newValue);\n        }\n    };\n    handleFocusOut = () => {\n        if (this.state.inputBuffer) {\n            const newValue = this.object.toValidValue(+this.state.inputBuffer);\n            this.setState({ inputBuffer: \"\" });\n            if (newValue !== this.state.value) this.setValueToOutput(newValue);\n        }\n        this.setState({ focus: false });\n    };\n}\n\nexport type LiveGainState = { rmsNode: InstanceType<typeof TemporalAnalyserRegister[\"Node\"]>; bypassNode: GainNode; gainNode: GainNode; $requestTimer: number } & LiveObjectState;\nexport class LiveGain extends LiveObject<{}, {}, [number | Bang, number], [undefined, number, string, number[]], [number], LiveGainProps, LiveGainUIState> {\n    static description = \"Gain slider and monitor\";\n    static inlets: TMeta[\"inlets\"] = [{\n        isHot: true,\n        type: \"signal\",\n        description: \"Signal in, number to set gain\"\n    }];\n    static outlets: TMeta[\"outlets\"] = [{\n        type: \"signal\",\n        description: \"Audio out\"\n    }, {\n        type: \"number\",\n        description: \"Number value\"\n    }, {\n        type: \"string\",\n        description: \"Display value\"\n    }, {\n        type: \"object\",\n        description: \"Amplitude value: number[]\"\n    }];\n    static args: TMeta[\"args\"] = [{\n        type: \"number\",\n        optional: true,\n        default: 0,\n        description: \"Initial value\"\n    }];\n    static props: TMeta[\"props\"] = {\n        shortName: {\n            type: \"string\",\n            default: \"live.gain\",\n            description: \"Short name to display\",\n            isUIState: true\n        },\n        longName: {\n            type: \"string\",\n            default: \"live.gain\",\n            description: \"Long name to display\",\n            isUIState: true\n        },\n        min: {\n            type: \"number\",\n            default: -70,\n            description: \"Minimum value (dB)\",\n            isUIState: true\n        },\n        max: {\n            type: \"number\",\n            default: 6,\n            description: \"Maximum value (dB)\",\n            isUIState: true\n        },\n        step: {\n            type: \"number\",\n            default: 0.01,\n            description: \"Value change step\",\n            isUIState: true\n        },\n        type: {\n            type: \"enum\",\n            enums: [\"enum\", \"float\", \"int\"],\n            default: \"float\",\n            description: \"Value type\",\n            isUIState: true\n        },\n        unitStyle: {\n            type: \"enum\",\n            enums: [\"float\", \"int\", \"time\", \"hertz\", \"decibel\", \"%\", \"pan\", \"semitones\", \"midi\", \"custom\", \"native\"],\n            default: \"decibel\",\n            description: \"Style of unit to display\",\n            isUIState: true\n        },\n        relative: {\n            type: \"boolean\",\n            default: false,\n            description: \"Modify value use relative mouse move\",\n            isUIState: true\n        },\n        sliderColor: {\n            type: \"color\",\n            default: \"rgba(195, 195, 195, 1)\",\n            description: \"Slider color\",\n            isUIState: true\n        },\n        triBorderColor: {\n            type: \"color\",\n            default: \"rgba(80, 80, 80, 1)\",\n            description: \"Triangle border color\",\n            isUIState: true\n        },\n        triColor: {\n            type: \"color\",\n            default: \"rgba(165, 165, 165, 1)\",\n            description: \"Triangle color\",\n            isUIState: true\n        },\n        triOnColor: {\n            type: \"color\",\n            default: \"rgba(195, 195, 195, 1)\",\n            description: \"Triangle color while on\",\n            isUIState: true\n        },\n        textColor: {\n            type: \"color\",\n            default: \"rgba(255, 255, 255, 1)\",\n            description: \"Text color\",\n            isUIState: true\n        },\n        fontFamily: {\n            type: \"enum\",\n            enums: [\"Lato\", \"Georgia\", \"Times New Roman\", \"Arial\", \"Tahoma\", \"Verdana\", \"Courier New\"],\n            default: \"Arial\",\n            description: \"Font family\",\n            isUIState: true\n        },\n        fontSize: {\n            type: \"number\",\n            default: 10,\n            description: \"Text font size\",\n            isUIState: true\n        },\n        fontFace: {\n            type: \"enum\",\n            enums: [\"regular\", \"bold\", \"italic\", \"bold italic\"],\n            default: \"regular\",\n            description: \"Text style\",\n            isUIState: true\n        },\n        orientation: {\n            type: \"enum\",\n            enums: [\"vertical\", \"horizontal\"],\n            default: \"horizontal\",\n            description: \"Slider orientation\",\n            isUIState: true\n        },\n        showName: {\n            type: \"boolean\",\n            default: true,\n            description: \"Display name\",\n            isUIState: true\n        },\n        showNumber: {\n            type: \"boolean\",\n            default: true,\n            description: \"Display number as text\",\n            isUIState: true\n        },\n        bgColor: {\n            type: \"color\",\n            default: \"rgb(40, 40, 40)\",\n            description: \"Background color\",\n            isUIState: true\n        },\n        inactiveColdColor: {\n            type: \"color\",\n            default: \"rgb(130, 130, 130)\",\n            description: \"Cold color (inactive)\",\n            isUIState: true\n        },\n        inactiveWarmColor: {\n            type: \"color\",\n            default: \"rgb(149, 149, 149)\",\n            description: \"Warm color (inactive)\",\n            isUIState: true\n        },\n        coldColor: {\n            type: \"color\",\n            default: \"rgb(12, 248, 100)\",\n            description: \"Cold color (active)\",\n            isUIState: true\n        },\n        warmColor: {\n            type: \"color\",\n            default: \"rgb(195, 248, 100)\",\n            description: \"Warm color (active)\",\n            isUIState: true\n        },\n        hotColor: {\n            type: \"color\",\n            default: \"rgb(255, 193, 10)\",\n            description: \"Hot color (active)\",\n            isUIState: true\n        },\n        overloadColor: {\n            type: \"color\",\n            default: \"rgb(255, 10, 10)\",\n            description: \"Overload color (active)\",\n            isUIState: true\n        },\n        mode: {\n            type: \"enum\",\n            enums: [\"deciBel\", \"linear\"],\n            default: \"deciBel\",\n            description: \"Display mode\",\n            isUIState: true\n        },\n        speedLim: {\n            type: \"number\",\n            default: 16,\n            description: \"Value output speed limit in ms\"\n        },\n        frameRate: {\n            type: \"number\",\n            default: 60,\n            description: \"UI refresh rate\",\n            isUIState: true\n        },\n        windowSize: {\n            type: \"number\",\n            default: 1024,\n            description: \"RMS window size\"\n        },\n        thresholdDB: {\n            type: \"number\",\n            default: 0.1,\n            description: \"Redraw Threshold in dB\"\n        },\n        thresholdLinear: {\n            type: \"number\",\n            default: 0.01,\n            description: \"Redraw Threshold in Linear\"\n        },\n        metering: {\n            type: \"enum\",\n            enums: [\"postFader\", \"preFader\"],\n            default: \"postFader\",\n            description: \"Display meter pre/post fader\"\n        },\n        interp: {\n            type: \"number\",\n            default: 0.01,\n            description: \"Ramp time\"\n        }\n    };\n    static ui = LiveGainUI;\n    state: LiveGainState = {\n        ...this.state,\n        rmsNode: undefined,\n        gainNode: this.audioCtx.createGain(),\n        bypassNode: this.audioCtx.createGain(),\n        $requestTimer: -1\n    };\n    inletConnections = [{ node: this.state.bypassNode, index: 0 }];\n    outletConnections = [{ node: this.state.gainNode, index: 0 }];\n    subscribe() {\n        super.subscribe();\n        const startRequest = () => {\n            let lastResult: number[] = [];\n            const request = async () => {\n                if (this.state.rmsNode && !this.state.rmsNode.destroyed) {\n                    const { rms } = await this.state.rmsNode.gets({ rms: true });\n                    const mode = this.getProp(\"mode\");\n                    const thresh = this.getProp(mode === \"deciBel\" ? \"thresholdDB\" : \"thresholdLinear\");\n                    const result = mode === \"deciBel\" ? rms.map(v => atodb(v)) : rms;\n                    if (!lastResult.every((v, i) => v === result[i] || Math.abs(v - result[i]) < thresh) || lastResult.length !== result.length) {\n                        this.outlet(3, result);\n                        this.updateUI({ levels: result });\n                        lastResult = result;\n                    }\n                }\n                scheduleRequest();\n            };\n            const scheduleRequest = () => {\n                this.state.$requestTimer = window.setTimeout(request, this.getProp(\"speedLim\"));\n            };\n            request();\n        };\n        this.on(\"preInit\", () => {\n            this.inlets = 1;\n            this.outlets = 4;\n        });\n        this.on(\"updateArgs\", (args) => {\n            if (typeof args[0] === \"number\") {\n                this.state.value = args[0];\n                this.validateValue();\n                this.updateUI({ value: this.state.value });\n            }\n        });\n        let lastMetering: \"preFader\" | \"postFader\";\n        let lastMode: \"deciBel\" | \"linear\";\n        this.on(\"updateProps\", async (props) => {\n            if (props.windowSize && this.state.rmsNode) this.applyBPF(this.state.rmsNode.parameters.get(\"windowSize\"), [[props.windowSize]]);\n            if (props.metering && lastMetering !== props.metering && this.state.rmsNode) {\n                if (lastMetering) {\n                    if (lastMetering === \"postFader\") this.state.gainNode.disconnect(this.state.rmsNode);\n                    else this.state.bypassNode.disconnect(this.state.rmsNode);\n                }\n                lastMetering = props.metering;\n                if (props.metering === \"preFader\") this.state.bypassNode.connect(this.state.rmsNode, 0, 0);\n                else this.state.gainNode.connect(this.state.rmsNode, 0, 0);\n            }\n            if (props.mode && lastMode && lastMode !== props.mode) {\n                lastMode = props.mode;\n                let value: number;\n                if (props.mode === \"linear\") {\n                    value = dbtoa(this.state.value);\n                    await this.update(undefined, { min: 0, max: 1.5, unitStyle: \"float\" });\n                } else {\n                    value = atodb(this.state.value);\n                    await this.update(undefined, { min: -70, max: 6, unitStyle: \"decibel\" });\n                }\n                this.state.value = value;\n                this.validateValue();\n                this.updateUI({ value: this.state.value });\n            }\n        });\n        this.on(\"postInit\", async () => {\n            lastMode = this.getProp(\"mode\");\n            this.applyBPF(this.state.gainNode.gain, [[this.getProp(\"mode\") === \"deciBel\" ? dbtoa(this.state.value) : this.state.value]]);\n            this.state.bypassNode.connect(this.state.gainNode);\n            await TemporalAnalyserRegister.register(this.audioCtx.audioWorklet);\n            this.state.rmsNode = new TemporalAnalyserRegister.Node(this.audioCtx);\n            this.applyBPF(this.state.rmsNode.parameters.get(\"windowSize\"), [[this.getProp(\"windowSize\")]]);\n            if (this.getProp(\"metering\") === \"preFader\") this.state.bypassNode.connect(this.state.rmsNode, 0, 0);\n            else this.state.gainNode.connect(this.state.rmsNode, 0, 0);\n            startRequest();\n        });\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) {\n                if (!isBang(data)) {\n                    const value = +data;\n                    this.state.value = value;\n                    this.validateValue();\n                    const paramValue = this.state.value === this.getProp(\"min\") ? 0 : this.getProp(\"mode\") === \"deciBel\" ? dbtoa(this.state.value) : this.state.value;\n                    this.applyBPF(this.state.gainNode.gain, [[paramValue, this.getProp(\"interp\")]]);\n                    this.updateUI({ value: this.state.value });\n                }\n                this.outletAll([, this.state.value, this.state.displayValue]);\n            }\n        });\n        this.on(\"changeFromUI\", ({ value, displayValue }) => {\n            this.state.value = value;\n            this.state.displayValue = displayValue;\n            const paramValue = this.state.value === this.getProp(\"min\") ? 0 : this.getProp(\"mode\") === \"deciBel\" ? dbtoa(this.state.value) : this.state.value;\n            this.applyBPF(this.state.gainNode.gain, [[paramValue, this.getProp(\"interp\")]]);\n            this.outletAll([, this.state.value, this.state.displayValue]);\n        });\n        this.on(\"destroy\", () => {\n            this.state.bypassNode.disconnect();\n            this.state.gainNode.disconnect();\n            window.clearTimeout(this.state.$requestTimer);\n            if (this.state.rmsNode) this.state.rmsNode.destroy();\n        });\n    }\n}\n","import { LiveObject, LiveUI } from \"./Base\";\nimport { BaseAudioObject } from \"../Base\";\nimport { TMeta } from \"../../types\";\nimport { TemporalAnalyserRegister } from \"../dsp/AudioWorklet/TemporalAnalyser\";\nimport { atodb } from \"../../../utils/math\";\nimport { CanvasUI, CanvasUIState } from \"../BaseUI\";\n\nexport interface LiveMeterProps {\n    active: boolean;\n    orientation: \"vertical\" | \"horizontal\";\n    mode: \"deciBel\" | \"linear\";\n    min: number;\n    max: number;\n    thresholdLinear: number;\n    thresholdDB: number;\n    speedLim: number;\n    frameRate: number;\n    windowSize: number;\n    bgColor: string;\n    inactiveColdColor: string;\n    inactiveWarmColor: string;\n    coldColor: string;\n    warmColor: string;\n    hotColor: string;\n    overloadColor: string;\n}\ninterface LiveMeterUIState extends Omit<LiveMeterProps, \"thresholdLinear\" | \"thresholdDB\" | \"windowSize\" | \"speedLim\">, CanvasUIState {\n    value: number[];\n}\nexport class LiveMeterUI extends CanvasUI<LiveMeter, {}, LiveMeterUIState> {\n    state: LiveMeterUIState = {\n        ...this.state,\n        value: []\n    };\n    values: number[] = [];\n    maxValues: number[] = [];\n    maxTimer: number;\n    paint() {\n        const {\n            // width,\n            // height,\n            active,\n            mode,\n            value,\n            min,\n            max,\n            orientation,\n            bgColor,\n            coldColor,\n            warmColor,\n            hotColor,\n            overloadColor,\n            inactiveColdColor,\n            inactiveWarmColor\n        } = this.state;\n        const ctx = this.ctx;\n        if (!ctx) return;\n\n        let [width, height] = this.fullSize();\n        ctx.clearRect(0, 0, width, height);\n\n        this.values = value.slice();\n        if (this.values.length === 0) this.values = [min];\n        if (this.values.find((v, i) => typeof this.maxValues[i] === \"undefined\" || v > this.maxValues[i])) {\n            this.maxValues = [...this.values];\n            if (this.maxTimer) window.clearTimeout(this.maxTimer);\n            this.maxTimer = window.setTimeout(() => {\n                this.maxValues = [...this.values];\n                this.maxTimer = undefined;\n                this.schedulePaint();\n            }, 1000);\n        } else if (this.values.find((v, i) => v < this.maxValues[i]) && typeof this.maxTimer === \"undefined\") {\n            this.maxTimer = window.setTimeout(() => {\n                this.maxValues = [...this.values];\n                this.maxTimer = undefined;\n                this.schedulePaint();\n            }, 1000);\n        }\n        const channels = this.values.length;\n        const clipValue = +(mode === \"linear\");\n        if (orientation === \"vertical\") {\n            ctx.save();\n            ctx.translate(0, height);\n            ctx.rotate(-Math.PI * 0.5);\n            [height, width] = [width, height];\n        }\n        const $height = (height - channels - 1) / this.values.length;\n        ctx.fillStyle = bgColor;\n        if (min >= clipValue || clipValue >= max) {\n            const fgColor = min >= clipValue ? active ? overloadColor : inactiveWarmColor : active ? coldColor : inactiveColdColor;\n            let $top = 0;\n            this.values.forEach((v) => {\n                if (v < max) ctx.fillRect(0, $top, width, $height);\n                $top += $height + 1;\n            });\n            $top = 0;\n            ctx.fillStyle = fgColor;\n            this.values.forEach((v, i) => {\n                const distance = LiveUI.getDistance({ type: \"float\", value: v, min, max, exponent: 0 });\n                if (distance > 0) ctx.fillRect(0, $top, distance * width, $height);\n                const histMax = this.maxValues[i];\n                if (typeof histMax === \"number\" && histMax > v) {\n                    const histDistance = LiveUI.getDistance({ type: \"float\", value: histMax, min, max, exponent: 0 });\n                    ctx.fillRect(Math.min(width - 1, histDistance * width), $top, 1, $height);\n                }\n                $top += $height + 1;\n            });\n        } else {\n            const clipDistance = LiveUI.getDistance({ type: \"float\", value: clipValue, min, max, exponent: 0 });\n            const clip = width - clipDistance * width;\n            const hotStop = width - clip;\n            const warmStop = hotStop - 1;\n            const gradient = ctx.createLinearGradient(0, 0, width, 0);\n            gradient.addColorStop(0, active ? coldColor : inactiveColdColor);\n            gradient.addColorStop(warmStop / width, active ? warmColor : inactiveWarmColor);\n            gradient.addColorStop(hotStop / width, active ? hotColor : inactiveWarmColor);\n            gradient.addColorStop(1, active ? overloadColor : inactiveWarmColor);\n            let $top = 0;\n            this.values.forEach((v) => {\n                if (v < clipValue) ctx.fillRect(0, $top, warmStop, $height);\n                if (v < max) ctx.fillRect(hotStop, $top, clip, $height);\n                $top += $height + 1;\n            });\n            $top = 0;\n            ctx.fillStyle = gradient;\n            this.values.forEach((v, i) => {\n                const distance = LiveUI.getDistance({ type: \"float\", value: v, min, max, exponent: 0 });\n                if (distance > 0) ctx.fillRect(0, $top, Math.min(warmStop, distance * width), $height);\n                if (distance > clipDistance) ctx.fillRect(hotStop, $top, Math.min(clip, (distance - clipDistance) * width), $height);\n                const histMax = this.maxValues[i];\n                if (typeof histMax === \"number\" && histMax > v) {\n                    const histDistance = LiveUI.getDistance({ type: \"float\", value: histMax, min, max, exponent: 0 });\n                    if (histDistance <= clipDistance) ctx.fillRect(histDistance * width, $top, 1, $height);\n                    else ctx.fillRect(Math.min(width - 1, histDistance * width), $top, 1, $height);\n                }\n                $top += $height + 1;\n            });\n        }\n        if (orientation === \"vertical\") ctx.restore();\n    }\n}\nexport type LiveMeterState = { node: InstanceType<typeof TemporalAnalyserRegister[\"Node\"]>; $requestTimer: number };\nexport class LiveMeter extends BaseAudioObject<{}, LiveMeterState, [], [number[]], [], LiveMeterProps, LiveMeterUIState> {\n    static package = LiveObject.package;\n    static author = LiveObject.author;\n    static version = LiveObject.version;\n    static description = \"Meter\";\n    static inlets: TMeta[\"inlets\"] = [{\n        isHot: true,\n        type: \"signal\",\n        description: \"Signal to measure\"\n    }];\n    static outlets: TMeta[\"outlets\"] = [{\n        type: \"object\",\n        description: \"Amplitude value: number[]\"\n    }];\n    static props: TMeta[\"props\"] = {\n        min: {\n            type: \"number\",\n            default: -70,\n            description: \"Minimum value (dB)\",\n            isUIState: true\n        },\n        max: {\n            type: \"number\",\n            default: 6,\n            description: \"Maximum value (dB)\",\n            isUIState: true\n        },\n        active: {\n            type: \"boolean\",\n            default: true,\n            description: \"Active state\",\n            isUIState: true\n        },\n        bgColor: {\n            type: \"color\",\n            default: \"rgb(40, 40, 40)\",\n            description: \"Background color\",\n            isUIState: true\n        },\n        inactiveColdColor: {\n            type: \"color\",\n            default: \"rgb(130, 130, 130)\",\n            description: \"Cold color (inactive)\",\n            isUIState: true\n        },\n        inactiveWarmColor: {\n            type: \"color\",\n            default: \"rgb(149, 149, 149)\",\n            description: \"Warm color (inactive)\",\n            isUIState: true\n        },\n        coldColor: {\n            type: \"color\",\n            default: \"rgb(12, 248, 100)\",\n            description: \"Cold color (active)\",\n            isUIState: true\n        },\n        warmColor: {\n            type: \"color\",\n            default: \"rgb(195, 248, 100)\",\n            description: \"Warm color (active)\",\n            isUIState: true\n        },\n        hotColor: {\n            type: \"color\",\n            default: \"rgb(255, 193, 10)\",\n            description: \"Hot color (active)\",\n            isUIState: true\n        },\n        overloadColor: {\n            type: \"color\",\n            default: \"rgb(255, 10, 10)\",\n            description: \"Overload color (active)\",\n            isUIState: true\n        },\n        orientation: {\n            type: \"enum\",\n            enums: [\"vertical\", \"horizontal\"],\n            default: \"horizontal\",\n            description: \"Meter orientation\",\n            isUIState: true\n        },\n        mode: {\n            type: \"enum\",\n            enums: [\"deciBel\", \"linear\"],\n            default: \"deciBel\",\n            description: \"Display mode\",\n            isUIState: true\n        },\n        speedLim: {\n            type: \"number\",\n            default: 16,\n            description: \"Value output speed limit in ms\"\n        },\n        frameRate: {\n            type: \"number\",\n            default: 60,\n            description: \"UI refresh rate\",\n            isUIState: true\n        },\n        windowSize: {\n            type: \"number\",\n            default: 1024,\n            description: \"RMS window size\"\n        },\n        thresholdDB: {\n            type: \"number\",\n            default: 0.1,\n            description: \"Redraw Threshold in dB\"\n        },\n        thresholdLinear: {\n            type: \"number\",\n            default: 0.01,\n            description: \"Redraw Threshold in Linear\"\n        }\n    };\n    static ui = LiveMeterUI;\n    state: LiveMeterState = { node: undefined, $requestTimer: -1 };\n    subscribe() {\n        super.subscribe();\n        const startRequest = () => {\n            let lastResult: number[] = [];\n            const request = async () => {\n                if (this.state.node && !this.state.node.destroyed) {\n                    const { rms } = await this.state.node.gets({ rms: true });\n                    const mode = this.getProp(\"mode\");\n                    const thresh = this.getProp(mode === \"deciBel\" ? \"thresholdDB\" : \"thresholdLinear\");\n                    const result = mode === \"deciBel\" ? rms.map(v => atodb(v)) : rms;\n                    if (!lastResult.every((v, i) => v === result[i] || Math.abs(v - result[i]) < thresh) || lastResult.length !== result.length) {\n                        this.outlet(0, result);\n                        this.updateUI({ value: result });\n                        lastResult = result;\n                    }\n                }\n                scheduleRequest();\n            };\n            const scheduleRequest = () => {\n                this.state.$requestTimer = window.setTimeout(request, this.getProp(\"speedLim\"));\n            };\n            request();\n        };\n        this.on(\"preInit\", () => {\n            this.inlets = 1;\n            this.outlets = 1;\n        });\n        this.on(\"updateProps\", (props) => {\n            if (props.windowSize && this.state.node) this.applyBPF(this.state.node.parameters.get(\"windowSize\"), [[props.windowSize]]);\n        });\n        this.on(\"postInit\", async () => {\n            await TemporalAnalyserRegister.register(this.audioCtx.audioWorklet);\n            this.state.node = new TemporalAnalyserRegister.Node(this.audioCtx);\n            this.applyBPF(this.state.node.parameters.get(\"windowSize\"), [[this.getProp(\"windowSize\")]]);\n            this.disconnectAudioInlet();\n            this.inletConnections[0] = { node: this.state.node, index: 0 };\n            this.connectAudioInlet();\n            startRequest();\n        });\n        this.on(\"destroy\", () => {\n            window.clearTimeout(this.state.$requestTimer);\n            if (this.state.node) this.state.node.destroy();\n        });\n    }\n}\n","import { LiveUI, LiveObject, LiveUIState } from \"./Base\";\nimport { TMeta } from \"../../types\";\nimport { Bang, isBang } from \"../Base\";\nimport { normExp } from \"../../../utils/math\";\n\ninterface LiveNumboxProps extends LiveUIProps {\n    bgColor: string;\n    activeBgColor: string;\n    borderColor: string;\n    focusBorderColor: string;\n    textColor: string;\n    fontFamily: string;\n    fontSize: number;\n    fontFace: \"regular\" | \"bold\" | \"italic\" | \"bold italic\";\n    appearance: \"slider\" | \"triangle\" | \"default\";\n    triColor: string;\n    activeTriColor: string;\n    triColor2: string;\n    activeTriColor2: string;\n    activeSliderColor: string;\n}\ninterface LiveNumboxUIState extends LiveNumboxProps, LiveUIState {\n    inputBuffer: string;\n}\nclass LiveNumboxUI extends LiveUI<LiveNumbox, LiveNumboxUIState> {\n    state: LiveNumboxUIState = {\n        ...this.state,\n        inputBuffer: \"\"\n    };\n    className = \"live-numbox\";\n    paint() {\n        const {\n            // width,\n            // height,\n            active,\n            focus,\n            fontFamily,\n            fontSize,\n            fontFace,\n            appearance,\n            bgColor,\n            activeBgColor,\n            borderColor,\n            focusBorderColor,\n            textColor,\n            triColor,\n            activeTriColor,\n            triColor2,\n            activeTriColor2,\n            activeSliderColor,\n            inputBuffer\n        } = this.state;\n        const ctx = this.ctx;\n        if (!ctx) return;\n        const distance = this.distance;\n        const displayValue = inputBuffer ? inputBuffer + \"_\" : this.displayValue;\n\n        const [width, height] = this.fullSize();\n        ctx.clearRect(0, 0, width, height);\n\n        // draw background\n        ctx.fillStyle = active ? activeBgColor : bgColor;\n        ctx.rect(0, 0, width, height);\n        ctx.fill();\n\n        if (appearance === \"slider\" && active && distance) {\n            ctx.fillStyle = activeSliderColor;\n            ctx.fillRect(0, 0, distance * width, height);\n        }\n\n        // draw border (eventually we might need to redefine the shape)\n        ctx.lineWidth = 1;\n        ctx.strokeStyle = focus ? focusBorderColor : borderColor;\n        ctx.stroke();\n\n        if (appearance === \"triangle\") {\n            const triangleHeight = 8;\n            ctx.fillStyle = active ? (distance ? activeTriColor2 : activeTriColor) : (distance ? triColor2 : triColor);\n            ctx.beginPath();\n            ctx.moveTo(width - triangleHeight - 1, height * 0.5);\n            ctx.lineTo(width - 1, 1);\n            ctx.lineTo(width - 1, height - 1);\n            ctx.closePath();\n            ctx.fill();\n        }\n        // display the text\n        ctx.font = `${fontFace === \"regular\" ? \"\" : fontFace} ${fontSize}px ${fontFamily}, sans-serif`;\n        ctx.fillStyle = textColor;\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"middle\";\n        ctx.fillText(displayValue, width * 0.5, height * 0.5, width);\n    }\n    getValueFromDelta(e: PointerDragEvent) {\n        const { type, min, max, enums, exponent } = this.state;\n        const step = type === \"enum\" ? 1 : (this.state.step || 1);\n        const totalPixels = 100;\n        const stepsCount = this.stepsCount;\n        const stepPixels = totalPixels / stepsCount;\n        const prevPixels = LiveUI.getDistance({ value: e.prevValue, type, min, max, enums, exponent }) * totalPixels;\n        const pixels = prevPixels + e.fromY - e.y;\n        let steps = Math.round(normExp(pixels / totalPixels, exponent) * totalPixels / stepPixels);\n        steps = Math.min(stepsCount, Math.max(0, steps));\n        if (type === \"enum\") return steps;\n        if (type === \"int\") return Math.round(steps * step + min);\n        return steps * step + min;\n    }\n    handlePointerDrag = (e: PointerDragEvent) => {\n        const newValue = this.getValueFromDelta(e);\n        if (newValue !== this.state.value) this.setValueToOutput(newValue);\n    };\n    handleKeyDown = (e: React.KeyboardEvent) => {\n        if (!this.state.inputBuffer) {\n            let addStep = 0;\n            if (e.key === \"ArrowUp\" || e.key === \"ArrowRight\") addStep = 1;\n            if (e.key === \"ArrowDown\" || e.key === \"ArrowLeft\") addStep = -1;\n            if (addStep !== 0) {\n                const newValue = this.object.toValidValue(this.state.value + this.state.step * addStep);\n                if (newValue !== this.state.value) this.setValueToOutput(newValue);\n            }\n        }\n        if (e.key.match(/[0-9.-]/)) {\n            this.setState({ inputBuffer: this.state.inputBuffer + e.key });\n            return;\n        }\n        if (e.key === \"Backspace\") {\n            this.setState({ inputBuffer: this.state.inputBuffer.slice(0, -1) });\n            return;\n        }\n        if (e.key === \"Enter\") {\n            const newValue = this.object.toValidValue(+this.state.inputBuffer);\n            this.setState({ inputBuffer: \"\" });\n            if (newValue !== this.state.value) this.setValueToOutput(newValue);\n        }\n    };\n    handleFocusOut = () => {\n        if (this.state.inputBuffer) {\n            const newValue = this.object.toValidValue(+this.state.inputBuffer);\n            this.setState({ inputBuffer: \"\" });\n            if (newValue !== this.state.value) this.setValueToOutput(newValue);\n        }\n        this.setState({ focus: false });\n    };\n}\n\nexport class LiveNumbox extends LiveObject<{}, {}, [number | Bang, number], [number, string], [number], LiveNumboxProps, LiveNumboxUIState> {\n    static description = \"Number box\";\n    static inlets: TMeta[\"inlets\"] = [{\n        isHot: true,\n        type: \"number\",\n        description: \"Set and output the value\"\n    }, {\n        isHot: false,\n        type: \"number\",\n        description: \"Set without output the value\"\n    }];\n    static outlets: TMeta[\"outlets\"] = [{\n        type: \"number\",\n        description: \"Number value\"\n    }, {\n        type: \"string\",\n        description: \"Display value\"\n    }];\n    static args: TMeta[\"args\"] = [{\n        type: \"number\",\n        optional: true,\n        default: 0,\n        description: \"Initial value\"\n    }];\n    static props: TMeta[\"props\"] = {\n        bgColor: {\n            type: \"color\",\n            default: \"rgba(195, 195, 195, 1)\",\n            description: \"Background color (inactive)\",\n            isUIState: true\n        },\n        activeBgColor: {\n            type: \"color\",\n            default: \"rgba(195, 195, 195, 1)\",\n            description: \"Background color (active)\",\n            isUIState: true\n        },\n        borderColor: {\n            type: \"color\",\n            default: \"rgba(80, 80, 80, 1)\",\n            description: \"Border color (unfocus)\",\n            isUIState: true\n        },\n        focusBorderColor: {\n            type: \"color\",\n            default: \"rgba(80, 80, 80, 1)\",\n            description: \"Border color (focus)\",\n            isUIState: true\n        },\n        textColor: {\n            type: \"color\",\n            default: \"rgba(0, 0, 0, 1)\",\n            description: \"Text color\",\n            isUIState: true\n        },\n        fontFamily: {\n            type: \"enum\",\n            enums: [\"Lato\", \"Georgia\", \"Times New Roman\", \"Arial\", \"Tahoma\", \"Verdana\", \"Courier New\"],\n            default: \"Arial\",\n            description: \"Font family\",\n            isUIState: true\n        },\n        fontSize: {\n            type: \"number\",\n            default: 10,\n            description: \"Text font size\",\n            isUIState: true\n        },\n        fontFace: {\n            type: \"enum\",\n            enums: [\"regular\", \"bold\", \"italic\", \"bold italic\"],\n            default: \"regular\",\n            description: \"Text style\",\n            isUIState: true\n        },\n        appearance: {\n            type: \"enum\",\n            enums: [\"default\", \"slider\", \"triangle\"],\n            default: \"default\",\n            description: \"Text style\",\n            isUIState: true\n        },\n        triColor: {\n            type: \"color\",\n            default: \"rgba(195, 195, 195, 1)\",\n            description: \"Triangle color (inactive)\",\n            isUIState: true\n        },\n        activeTriColor: {\n            type: \"color\",\n            default: \"rgba(165, 165, 165, 1)\",\n            description: \"Triangle color (active)\",\n            isUIState: true\n        },\n        triColor2: {\n            type: \"color\",\n            default: \"rgba(165, 165, 165, 1)\",\n            description: \"Triangle color on positive value (inactive)\",\n            isUIState: true\n        },\n        activeTriColor2: {\n            type: \"color\",\n            default: \"rgba(109, 215, 255, 1)\",\n            description: \"Triangle color on positive value (active)\",\n            isUIState: true\n        },\n        activeSliderColor: {\n            type: \"color\",\n            default: \"rgba(109, 215, 255, 1)\",\n            description: \"Slider color\",\n            isUIState: true\n        }\n    };\n    static ui = LiveNumboxUI;\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 2;\n            this.outlets = 2;\n        });\n        this.on(\"updateArgs\", (args) => {\n            if (typeof args[0] === \"number\") {\n                this.state.value = args[0];\n                this.validateValue();\n                this.updateUI({ value: this.state.value });\n            }\n        });\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) {\n                if (!isBang(data)) {\n                    const value = +data;\n                    this.state.value = value;\n                    this.validateValue();\n                    this.updateUI({ value: this.state.value });\n                }\n                this.outletAll([this.state.value, this.state.displayValue]);\n            } else if (inlet === 1) {\n                const value = +data;\n                this.state.value = value;\n                this.validateValue();\n                this.updateUI({ value: this.state.value });\n            }\n        });\n        this.on(\"changeFromUI\", ({ value, displayValue }) => {\n            this.state.value = value;\n            this.state.displayValue = displayValue;\n            this.outletAll([this.state.value, this.state.displayValue]);\n        });\n    }\n}\n","import { LiveUI, LiveObject, LiveUIState } from \"./Base\";\nimport { TMeta } from \"../../types\";\nimport { Bang, isBang } from \"../Base\";\nimport { normExp } from \"../../../utils/math\";\n\nexport interface LiveSliderProps extends LiveUIProps {\n    relative: boolean;\n    sliderColor: string;\n    triBorderColor: string;\n    triColor: string;\n    triOnColor: string;\n    textColor: string;\n    fontFamily: string;\n    fontSize: number;\n    fontFace: \"regular\" | \"bold\" | \"italic\" | \"bold italic\";\n    orientation: \"vertical\" | \"horizontal\";\n    showName: boolean;\n    showNumber: boolean;\n}\ninterface LiveSliderUIState extends LiveSliderProps, LiveUIState {\n    inputBuffer: string;\n}\nclass LiveSliderUI extends LiveUI<LiveSlider, LiveSliderUIState> {\n    static defaultSize: [number, number] = [120, 45];\n    state: LiveSliderUIState = {\n        ...this.state,\n        inputBuffer: \"\"\n    };\n    className = \"live-slider\";\n    interactionRect: number[] = [0, 0, 0, 0];\n    inTouch = false;\n    paint() {\n        const {\n            // width,\n            // height,\n            fontFamily,\n            fontSize,\n            fontFace,\n            orientation,\n            showName,\n            showNumber,\n            sliderColor,\n            textColor,\n            triBorderColor,\n            triOnColor,\n            triColor,\n            shortName,\n            inputBuffer\n        } = this.state;\n        const ctx = this.ctx;\n        if (!ctx) return;\n        const lineWidth = 0.5;\n        const padding = 8;\n        const distance = this.distance;\n        const displayValue = inputBuffer ? inputBuffer + \"_\" : this.displayValue;\n\n        const [width, height] = this.fullSize();\n        ctx.clearRect(0, 0, width, height);\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = sliderColor;\n\n        if (orientation === \"vertical\") {\n            ctx.beginPath();\n            ctx.moveTo(width * 0.5, fontSize + padding);\n            ctx.lineTo(width * 0.5, height - (fontSize + padding));\n            ctx.stroke();\n\n            const interactionWidth = width * 0.5;\n            this.interactionRect = [\n                width * 0.5 - interactionWidth * 0.5,\n                fontSize + padding,\n                interactionWidth,\n                height - 2 * (fontSize + padding)\n            ];\n\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = triBorderColor;\n            const triOrigin: [number, number] = [\n                width * 0.5 + lineWidth * 0.5 + 0.5,\n                this.interactionRect[1] - 4 + this.interactionRect[3] * (1 - distance)\n            ];\n            ctx.beginPath();\n            ctx.moveTo(triOrigin[0], triOrigin[1] + 4);\n            ctx.lineTo(triOrigin[0] + 8, triOrigin[1]);\n            ctx.lineTo(triOrigin[0] + 8, triOrigin[1] + 8);\n            ctx.lineTo(triOrigin[0], triOrigin[1] + 4);\n            ctx.stroke();\n\n            ctx.fillStyle = this.inTouch ? triOnColor : triColor;\n            ctx.fill();\n\n            ctx.font = `${fontFace === \"regular\" ? \"\" : fontFace} ${fontSize}px ${fontFamily}, sans-serif`;\n            ctx.textAlign = \"center\";\n            ctx.fillStyle = textColor;\n            if (showName) ctx.fillText(shortName, width * 0.5, fontSize, width);\n            if (showNumber) ctx.fillText(displayValue, width * 0.5, height - 2, width);\n        } else {\n            ctx.beginPath();\n            ctx.moveTo(padding, height * 0.5);\n            ctx.lineTo(width - padding, height * 0.5);\n            ctx.stroke();\n\n            const interactionWidth = height * 0.5;\n            this.interactionRect = [\n                padding,\n                height * 0.5 - interactionWidth * 0.5,\n                width - 2 * padding,\n                interactionWidth\n            ];\n\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = triBorderColor;\n            const triOrigin: [number, number] = [\n                this.interactionRect[0] + this.interactionRect[2] * distance - 4,\n                height * 0.5 + lineWidth * 0.5 + 2\n            ];\n            ctx.beginPath();\n            ctx.moveTo(triOrigin[0], triOrigin[1] + 8);\n            ctx.lineTo(triOrigin[0] + 4, triOrigin[1]);\n            ctx.lineTo(triOrigin[0] + 8, triOrigin[1] + 8);\n            ctx.lineTo(triOrigin[0], triOrigin[1] + 8);\n            ctx.stroke();\n\n            ctx.fillStyle = this.inTouch ? triOnColor : triColor;\n            ctx.fill();\n\n            ctx.font = `${fontFace === \"regular\" ? \"\" : fontFace} ${fontSize}px ${fontFamily}, sans-serif`;\n            ctx.textAlign = \"center\";\n            ctx.fillStyle = textColor;\n            if (showName) ctx.fillText(shortName, width * 0.5, fontSize, width);\n            ctx.textAlign = \"left\";\n            if (showNumber) ctx.fillText(displayValue, 4, height - 2, width);\n        }\n    }\n    getValueFromPos(e: PointerDownEvent) {\n        const { orientation, type, min, exponent } = this.state;\n        const step = type === \"enum\" ? 1 : (this.state.step || 1);\n        const totalPixels = orientation === \"vertical\" ? this.interactionRect[3] : this.interactionRect[2];\n        const stepsCount = this.stepsCount;\n        const stepPixels = totalPixels / stepsCount;\n        const pixels = orientation === \"vertical\" ? this.interactionRect[3] - (e.y - this.interactionRect[1]) : e.x - this.interactionRect[0];\n        let steps = Math.round(normExp(pixels / totalPixels, exponent) * totalPixels / stepPixels);\n        steps = Math.min(stepsCount, Math.max(0, steps));\n        if (type === \"enum\") return steps;\n        if (type === \"int\") return Math.round(steps * step + min);\n        return steps * step + min;\n    }\n    getValueFromDelta(e: PointerDragEvent) {\n        const { type, min, max, enums, exponent, orientation } = this.state;\n        const step = type === \"enum\" ? 1 : (this.state.step || 1);\n        const totalPixels = orientation === \"horizontal\" ? this.interactionRect[2] : this.interactionRect[3];\n        const stepsCount = this.stepsCount;\n        const stepPixels = totalPixels / stepsCount;\n        const prevPixels = LiveUI.getDistance({ value: e.prevValue, type, min, max, enums, exponent }) * totalPixels;\n        const pixels = prevPixels + (orientation === \"horizontal\" ? e.x - e.fromX : e.fromY - e.y);\n        let steps = Math.round(normExp(pixels / totalPixels, exponent) * totalPixels / stepPixels);\n        steps = Math.min(stepsCount, Math.max(0, steps));\n        if (type === \"enum\") return steps;\n        if (type === \"int\") return Math.round(steps * step + min);\n        return steps * step + min;\n    }\n    handlePointerDown = (e: PointerDownEvent) => {\n        if (\n            e.x < this.interactionRect[0]\n            || e.x > this.interactionRect[0] + this.interactionRect[2]\n            || e.y < this.interactionRect[1]\n            || e.y > this.interactionRect[1] + this.interactionRect[3]\n        ) return;\n        if (!this.state.relative) {\n            const newValue = this.getValueFromPos(e);\n            if (newValue !== this.state.value) this.setValueToOutput(newValue);\n        }\n        this.inTouch = true;\n    };\n    handlePointerDrag = (e: PointerDragEvent) => {\n        if (!this.inTouch) return;\n        let newValue;\n        if (this.state.relative) newValue = this.getValueFromDelta(e);\n        else newValue = this.getValueFromPos(e);\n        if (newValue !== this.state.value) this.setValueToOutput(newValue);\n    };\n    handlePointerUp = () => {\n        this.inTouch = false;\n    };\n    handleKeyDown = (e: React.KeyboardEvent) => {\n        if (!this.state.inputBuffer) {\n            let addStep = 0;\n            if (e.key === \"ArrowUp\" || e.key === \"ArrowRight\") addStep = 1;\n            if (e.key === \"ArrowDown\" || e.key === \"ArrowLeft\") addStep = -1;\n            if (addStep !== 0) {\n                const newValue = this.object.toValidValue(this.state.value + this.state.step * addStep);\n                if (newValue !== this.state.value) this.setValueToOutput(newValue);\n            }\n        }\n        if (e.key.match(/[0-9.-]/)) {\n            this.setState({ inputBuffer: this.state.inputBuffer + e.key });\n            return;\n        }\n        if (e.key === \"Backspace\") {\n            this.setState({ inputBuffer: this.state.inputBuffer.slice(0, -1) });\n            return;\n        }\n        if (e.key === \"Enter\") {\n            const newValue = this.object.toValidValue(+this.state.inputBuffer);\n            this.setState({ inputBuffer: \"\" });\n            if (newValue !== this.state.value) this.setValueToOutput(newValue);\n        }\n    };\n    handleFocusOut = () => {\n        if (this.state.inputBuffer) {\n            const newValue = this.object.toValidValue(+this.state.inputBuffer);\n            this.setState({ inputBuffer: \"\" });\n            if (newValue !== this.state.value) this.setValueToOutput(newValue);\n        }\n        this.setState({ focus: false });\n    };\n}\n\nexport class LiveSlider extends LiveObject<{}, {}, [number | Bang, number], [number, string], [number], LiveSliderProps, LiveSliderUIState> {\n    static description = \"Slider\";\n    static inlets: TMeta[\"inlets\"] = [{\n        isHot: true,\n        type: \"number\",\n        description: \"Set and output the value\"\n    }, {\n        isHot: false,\n        type: \"number\",\n        description: \"Set without output the value\"\n    }];\n    static outlets: TMeta[\"outlets\"] = [{\n        type: \"number\",\n        description: \"Number value\"\n    }, {\n        type: \"string\",\n        description: \"Display value\"\n    }];\n    static args: TMeta[\"args\"] = [{\n        type: \"number\",\n        optional: true,\n        default: 0,\n        description: \"Initial value\"\n    }];\n    static props: TMeta[\"props\"] = {\n        shortName: {\n            type: \"string\",\n            default: \"live.slider\",\n            description: \"Short name to display\",\n            isUIState: true\n        },\n        longName: {\n            type: \"string\",\n            default: \"live.slider\",\n            description: \"Long name to display\",\n            isUIState: true\n        },\n        relative: {\n            type: \"boolean\",\n            default: false,\n            description: \"Modify value use relative mouse move\",\n            isUIState: true\n        },\n        sliderColor: {\n            type: \"color\",\n            default: \"rgba(195, 195, 195, 1)\",\n            description: \"Slider color\",\n            isUIState: true\n        },\n        triBorderColor: {\n            type: \"color\",\n            default: \"rgba(80, 80, 80, 1)\",\n            description: \"Triangle border color\",\n            isUIState: true\n        },\n        triColor: {\n            type: \"color\",\n            default: \"rgba(165, 165, 165, 1)\",\n            description: \"Triangle color\",\n            isUIState: true\n        },\n        triOnColor: {\n            type: \"color\",\n            default: \"rgba(195, 195, 195, 1)\",\n            description: \"Triangle color while on\",\n            isUIState: true\n        },\n        textColor: {\n            type: \"color\",\n            default: \"rgba(255, 255, 255, 1)\",\n            description: \"Text color\",\n            isUIState: true\n        },\n        fontFamily: {\n            type: \"enum\",\n            enums: [\"Lato\", \"Georgia\", \"Times New Roman\", \"Arial\", \"Tahoma\", \"Verdana\", \"Courier New\"],\n            default: \"Arial\",\n            description: \"Font family\",\n            isUIState: true\n        },\n        fontSize: {\n            type: \"number\",\n            default: 10,\n            description: \"Text font size\",\n            isUIState: true\n        },\n        fontFace: {\n            type: \"enum\",\n            enums: [\"regular\", \"bold\", \"italic\", \"bold italic\"],\n            default: \"regular\",\n            description: \"Text style\",\n            isUIState: true\n        },\n        orientation: {\n            type: \"enum\",\n            enums: [\"vertical\", \"horizontal\"],\n            default: \"horizontal\",\n            description: \"Slider orientation\",\n            isUIState: true\n        },\n        showName: {\n            type: \"boolean\",\n            default: true,\n            description: \"Display name\",\n            isUIState: true\n        },\n        showNumber: {\n            type: \"boolean\",\n            default: true,\n            description: \"Display number as text\",\n            isUIState: true\n        }\n    };\n    static ui = LiveSliderUI;\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 2;\n            this.outlets = 2;\n        });\n        this.on(\"updateArgs\", (args) => {\n            if (typeof args[0] === \"number\") {\n                this.state.value = args[0];\n                this.validateValue();\n                this.updateUI({ value: this.state.value });\n            }\n        });\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) {\n                if (!isBang(data)) {\n                    const value = +data;\n                    this.state.value = value;\n                    this.validateValue();\n                    this.updateUI({ value: this.state.value });\n                }\n                this.outletAll([this.state.value, this.state.displayValue]);\n            } else if (inlet === 1) {\n                const value = +data;\n                this.state.value = value;\n                this.validateValue();\n                this.updateUI({ value: this.state.value });\n            }\n        });\n        this.on(\"changeFromUI\", ({ value, displayValue }) => {\n            this.state.value = value;\n            this.state.displayValue = displayValue;\n            this.outletAll([this.state.value, this.state.displayValue]);\n        });\n    }\n}\n","import { LiveUI, LiveObject, LiveUIState } from \"./Base\";\nimport { TMeta, TRect } from \"../../types\";\nimport { Bang, isBang } from \"../Base\";\n\ninterface LiveTabProps extends LiveUIProps {\n    bgColor: string;\n    bgOnColor: string;\n    activeBgColor: string;\n    activeBgOnColor: string;\n    borderColor: string;\n    focusBorderColor: string;\n    textColor: string;\n    textOnColor: string;\n    activeTextColor: string;\n    activeTextOnColor: string;\n    fontFamily: string;\n    fontSize: number;\n    fontFace: \"regular\" | \"bold\" | \"italic\" | \"bold italic\";\n    mode: \"equal\" | \"proportional\";\n    spacingX: number;\n    spacingY: number;\n    multiline: boolean;\n}\ninterface LiveTabUIState extends LiveTabProps, LiveUIState {}\nclass LiveTabUI extends LiveUI<LiveTab, LiveTabUIState> {\n    static defaultSize: [number, number] = [120, 15];\n    className = \"live-tab\";\n    tabRects: TRect[] = [];\n    inTouch = false;\n    getTabRects(width: number, height: number) {\n        const {\n            // width,\n            // height,\n            multiline,\n            mode,\n            enums,\n            spacingX: spacingXIn,\n            spacingY: spacingYIn\n        } = this.state;\n        const margin = 4;\n        const minHeight = 10;\n        const count = enums.length;\n        let countPerLine = count;\n        let lines = 1;\n        let step = height / lines;\n        let interval = 0;\n        let rectWidth = 0;\n        const spacingX = spacingXIn * 0.5;\n        const spacingY = spacingYIn * 0.5;\n\n        if (multiline && height >= 2 * minHeight) {\n            lines = Math.max(1, Math.min(count, Math.floor(height / minHeight)));\n            countPerLine = Math.ceil(count / lines);\n            // if there's not enough height, increase the number of tabs per row\n            while (lines * countPerLine < count) {\n                countPerLine++;\n                if (lines > 1) lines--;\n            }\n            // if there's extra height, reduce the number of rows\n            while (lines * countPerLine > count && (lines - 1) * countPerLine >= count) {\n                lines--;\n            }\n            step = height / lines;\n        }\n        if (mode === \"equal\") {\n            interval = width / countPerLine;\n            rectWidth = interval - spacingX;\n            for (let i = 0; i < count; i++) {\n                this.tabRects[i] = [\n                    (i % countPerLine) * interval + spacingX * 0.5,\n                    Math.floor(i / countPerLine) * step + spacingY * 0.5,\n                    rectWidth,\n                    (height / lines) - spacingY\n                ];\n            }\n        } else {\n            const textWidths = [];\n            for (let i = 0; i < lines; i++) {\n                let total = 0;\n                let space = width;\n                for (let j = i * countPerLine; j < Math.min((i + 1) * countPerLine, count); j++) {\n                    const textDimensions = this.ctx.measureText(enums[j]);\n                    textWidths[j] = textDimensions.width;\n                    total += textWidths[j];\n                    space -= 2 * margin + spacingX;\n                }\n                let used = 0;\n                for (let j = i * countPerLine; j < Math.min((i + 1) * countPerLine, count); j++) {\n                    const rectSpace = textWidths[j] / total;\n                    this.tabRects[j] = [\n                        used + spacingX * 0.5,\n                        i * step + spacingY * 0.5,\n                        space * rectSpace + 2 * margin,\n                        height / lines - spacingY\n                    ];\n                    used += this.tabRects[j][2] + spacingX;\n                }\n            }\n        }\n        return this.tabRects;\n    }\n    paint() {\n        const {\n            active,\n            focus,\n            fontFamily,\n            fontSize,\n            fontFace,\n            activeBgColor,\n            activeBgOnColor,\n            bgColor,\n            bgOnColor,\n            borderColor,\n            focusBorderColor,\n            textColor,\n            textOnColor,\n            activeTextColor,\n            activeTextOnColor,\n            enums,\n            value\n        } = this.state;\n        const ctx = this.ctx;\n        if (!ctx) return;\n        const [width, height] = this.fullSize();\n        const tabRects = this.getTabRects(width, height);\n\n        const borderWidth = 0.5;\n\n        ctx.clearRect(0, 0, width, height);\n        ctx.lineWidth = borderWidth;\n\n        const buttonBorderColor = focus ? focusBorderColor : borderColor;\n        for (let i = 0; i < enums.length; i++) {\n            const buttonBgColor = active ? (value === i ? activeBgOnColor : activeBgColor) : (value === i ? bgOnColor : bgColor);\n            ctx.fillStyle = buttonBgColor;\n            ctx.beginPath();\n            ctx.rect(...tabRects[i]);\n            ctx.fill();\n            ctx.strokeStyle = buttonBorderColor;\n            ctx.stroke();\n\n            ctx.font = `${fontFace === \"regular\" ? \"\" : fontFace} ${fontSize}px ${fontFamily}, sans-serif`;\n            ctx.textAlign = \"center\";\n            ctx.textBaseline = \"middle\";\n            ctx.fillStyle = active ? (value === i ? activeTextOnColor : activeTextColor) : (value === i ? textOnColor : textColor);\n            ctx.fillText(enums[i], tabRects[i][0] + tabRects[i][2] * 0.5, tabRects[i][1] + tabRects[i][3] * 0.5);\n        }\n    }\n    handlePointerDown = (e: PointerDownEvent) => {\n        this.inTouch = true;\n        for (let i = 0; i < this.tabRects.length; i++) {\n            const rect = this.tabRects[i];\n            if (e.x >= rect[0] && e.x <= rect[2] + rect[0] && e.y >= rect[1] && e.y <= rect[3] + rect[1]) {\n                this.setValueToOutput(i);\n                return;\n            }\n        }\n    };\n    handlePointerDrag = (e: PointerDragEvent) => {\n        this.handlePointerDown(e);\n    };\n    handleKeyDown = (e: React.KeyboardEvent) => {\n        let addStep = 0;\n        if (e.key === \"ArrowUp\" || e.key === \"ArrowRight\") addStep = 1;\n        if (e.key === \"ArrowDown\" || e.key === \"ArrowLeft\") addStep = -1;\n        if (addStep !== 0) {\n            const newValue = this.object.toValidValue(this.state.value + this.state.step * addStep);\n            if (newValue !== this.state.value) this.setValueToOutput(newValue);\n        }\n    };\n}\n\nexport class LiveTab extends LiveObject<{}, {}, [number | Bang, number], [number, string], [number], LiveTabProps, LiveTabUIState> {\n    static description = \"Buttons as tab\";\n    static inlets: TMeta[\"inlets\"] = [{\n        isHot: true,\n        type: \"number\",\n        description: \"Set and output the value\"\n    }, {\n        isHot: false,\n        type: \"number\",\n        description: \"Set without output the value\"\n    }];\n    static outlets: TMeta[\"outlets\"] = [{\n        type: \"number\",\n        description: \"Number value\"\n    }, {\n        type: \"string\",\n        description: \"Display value\"\n    }];\n    static args: TMeta[\"args\"] = [{\n        type: \"number\",\n        optional: true,\n        default: 0,\n        description: \"Initial value\"\n    }];\n    static props: TMeta[\"props\"] = {\n        bgColor: {\n            type: \"color\",\n            default: \"rgba(165, 165, 165, 1)\",\n            description: \"Background color (inactive / off)\",\n            isUIState: true\n        },\n        activeBgColor: {\n            type: \"color\",\n            default: \"rgba(165, 165, 165, 1)\",\n            description: \"Background color (active / off)\",\n            isUIState: true\n        },\n        bgOnColor: {\n            type: \"color\",\n            default: \"rgba(165, 165, 165, 1)\",\n            description: \"Background color (inactive / on)\",\n            isUIState: true\n        },\n        activeBgOnColor: {\n            type: \"color\",\n            default: \"rgba(255, 181, 50, 1)\",\n            description: \"Background color (active / on)\",\n            isUIState: true\n        },\n        borderColor: {\n            type: \"color\",\n            default: \"rgba(80, 80, 80, 1)\",\n            description: \"Border color (unfocus)\",\n            isUIState: true\n        },\n        focusBorderColor: {\n            type: \"color\",\n            default: \"rgba(80, 80, 80, 1)\",\n            description: \"Border color (focus)\",\n            isUIState: true\n        },\n        textColor: {\n            type: \"color\",\n            default: \"rgba(90, 90, 90, 1)\",\n            description: \"Text color (inactive / off)\",\n            isUIState: true\n        },\n        textOnColor: {\n            type: \"color\",\n            default: \"rgba(90, 90, 90, 1)\",\n            description: \"Text color (inactive / on)\",\n            isUIState: true\n        },\n        activeTextColor: {\n            type: \"color\",\n            default: \"rgba(0, 0, 0, 1)\",\n            description: \"Text color (active / off)\",\n            isUIState: true\n        },\n        activeTextOnColor: {\n            type: \"color\",\n            default: \"rgba(0, 0, 0, 1)\",\n            description: \"Text color (active / on)\",\n            isUIState: true\n        },\n        fontFamily: {\n            type: \"enum\",\n            enums: [\"Lato\", \"Georgia\", \"Times New Roman\", \"Arial\", \"Tahoma\", \"Verdana\", \"Courier New\"],\n            default: \"Arial\",\n            description: \"Font family\",\n            isUIState: true\n        },\n        fontSize: {\n            type: \"number\",\n            default: 10,\n            description: \"Text font size\",\n            isUIState: true\n        },\n        fontFace: {\n            type: \"enum\",\n            enums: [\"regular\", \"bold\", \"italic\", \"bold italic\"],\n            default: \"regular\",\n            description: \"Text style\",\n            isUIState: true\n        },\n        mode: {\n            type: \"enum\",\n            enums: [\"equal\", \"proportional\"],\n            default: \"equal\",\n            description: \"Spacing mode\",\n            isUIState: true\n        },\n        spacingX: {\n            type: \"number\",\n            default: 6,\n            description: \"Tab horizontal spacing\",\n            isUIState: true\n        },\n        spacingY: {\n            type: \"number\",\n            default: 6,\n            description: \"Tab vertical spacing\",\n            isUIState: true\n        },\n        multiline: {\n            type: \"boolean\",\n            default: true,\n            description: \"Multi-line tabs\",\n            isUIState: true\n        },\n        enums: {\n            type: \"object\",\n            default: [\"one\", \"two\", \"three\"],\n            description: \"Enum values\",\n            isUIState: true\n        }\n    };\n    static ui = LiveTabUI;\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 2;\n            this.outlets = 2;\n        });\n        this.on(\"updateArgs\", (args) => {\n            if (typeof args[0] === \"number\") {\n                this.state.value = args[0];\n                this.validateValue();\n                this.updateUI({ value: this.state.value });\n            }\n        });\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) {\n                if (!isBang(data)) {\n                    const value = +data;\n                    this.state.value = value;\n                    this.validateValue();\n                    this.updateUI({ value: this.state.value });\n                }\n                this.outletAll([this.state.value, this.state.displayValue]);\n            } else if (inlet === 1) {\n                const value = +data;\n                this.state.value = value;\n                this.validateValue();\n                this.updateUI({ value: this.state.value });\n            }\n        });\n        this.on(\"changeFromUI\", ({ value, displayValue }) => {\n            this.state.value = value;\n            this.state.displayValue = displayValue;\n            this.outletAll([this.state.value, this.state.displayValue]);\n        });\n    }\n}\n","import { LiveUI, LiveObject, LiveUIState } from \"./Base\";\nimport { TMeta } from \"../../types\";\nimport { Bang, isBang } from \"../Base\";\nimport { fillRoundedRect } from \"../../../utils/utils\";\n\ninterface LiveTextProps extends LiveUIProps {\n    bgColor: string;\n    bgOnColor: string;\n    activeBgColor: string;\n    activeBgOnColor: string;\n    borderColor: string;\n    focusBorderColor: string;\n    textColor: string;\n    textOnColor: string;\n    activeTextColor: string;\n    activeTextOnColor: string;\n    fontFamily: string;\n    fontSize: number;\n    fontFace: \"regular\" | \"bold\" | \"italic\" | \"bold italic\";\n    mode: \"button\" | \"toggle\";\n    text: string;\n    textOn: string;\n}\ninterface LiveTextUIState extends LiveTextProps, LiveUIState {}\nclass LiveTextUI extends LiveUI<LiveText, LiveTextUIState> {\n    className = \"live-text\";\n    inTouch = false;\n    paint() {\n        const {\n            // width,\n            // height,\n            active,\n            focus,\n            fontFamily,\n            fontSize,\n            fontFace,\n            activeBgColor,\n            activeBgOnColor,\n            bgColor,\n            bgOnColor,\n            borderColor,\n            focusBorderColor,\n            textColor,\n            textOnColor,\n            activeTextColor,\n            activeTextOnColor,\n            mode,\n            text,\n            textOn,\n            value\n        } = this.state;\n        const ctx = this.ctx;\n        if (!ctx) return;\n\n        const borderWidth = 0.5;\n\n        const [width, height] = this.fullSize();\n        ctx.clearRect(0, 0, width, height);\n        ctx.lineWidth = borderWidth;\n\n        const buttonBgColor = active ? (value ? activeBgOnColor : activeBgColor) : (value ? bgOnColor : bgColor);\n        const buttonBorderColor = focus ? focusBorderColor : borderColor;\n\n        ctx.fillStyle = buttonBgColor;\n        if (mode === \"button\") {\n            fillRoundedRect(ctx, 0.5, 0.5, width - 1, height - 1, height * 0.5 - 1);\n        } else {\n            ctx.beginPath();\n            ctx.rect(0.5, 0.5, width - 1, height - 1);\n            ctx.fill();\n        }\n        ctx.lineWidth = 0.5;\n        ctx.strokeStyle = buttonBorderColor;\n        ctx.stroke();\n\n        ctx.font = `${fontFace === \"regular\" ? \"\" : fontFace} ${fontSize}px ${fontFamily}, sans-serif`;\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"middle\";\n        ctx.fillStyle = active ? (value ? activeTextOnColor : activeTextColor) : (value ? textOnColor : textColor);\n        ctx.fillText(value && mode === \"toggle\" ? textOn : text, width * 0.5, height * 0.5);\n    }\n    handlePointerDown = (e: PointerDownEvent) => {\n        const { value, mode } = this.state;\n        this.inTouch = true;\n        this.setValueToOutput(mode === \"button\" ? 1 : 1 - +!!value);\n    };\n    handlePointerUp = () => {\n        const { mode } = this.state;\n        this.inTouch = false;\n        if (mode === \"button\") this.setValueToOutput(0);\n    };\n}\n\nexport class LiveText extends LiveObject<{}, {}, [number | Bang, number], [number, string], [number], LiveTextProps, LiveTextUIState> {\n    static description = \"Button or toggle with text\";\n    static inlets: TMeta[\"inlets\"] = [{\n        isHot: true,\n        type: \"number\",\n        description: \"Set and output the value\"\n    }, {\n        isHot: false,\n        type: \"number\",\n        description: \"Set without output the value\"\n    }];\n    static outlets: TMeta[\"outlets\"] = [{\n        type: \"number\",\n        description: \"Number value\"\n    }, {\n        type: \"string\",\n        description: \"Display value\"\n    }];\n    static args: TMeta[\"args\"] = [{\n        type: \"number\",\n        optional: true,\n        default: 0,\n        description: \"Initial value\"\n    }];\n    static props: TMeta[\"props\"] = {\n        bgColor: {\n            type: \"color\",\n            default: \"rgba(165, 165, 165, 1)\",\n            description: \"Background color (inactive / off)\",\n            isUIState: true\n        },\n        activeBgColor: {\n            type: \"color\",\n            default: \"rgba(165, 165, 165, 1)\",\n            description: \"Background color (active / off)\",\n            isUIState: true\n        },\n        bgOnColor: {\n            type: \"color\",\n            default: \"rgba(165, 165, 165, 1)\",\n            description: \"Background color (inactive / on)\",\n            isUIState: true\n        },\n        activeBgOnColor: {\n            type: \"color\",\n            default: \"rgba(255, 181, 50, 1)\",\n            description: \"Background color (active / on)\",\n            isUIState: true\n        },\n        borderColor: {\n            type: \"color\",\n            default: \"rgba(80, 80, 80, 1)\",\n            description: \"Border color (unfocus)\",\n            isUIState: true\n        },\n        focusBorderColor: {\n            type: \"color\",\n            default: \"rgba(80, 80, 80, 1)\",\n            description: \"Border color (focus)\",\n            isUIState: true\n        },\n        textColor: {\n            type: \"color\",\n            default: \"rgba(90, 90, 90, 1)\",\n            description: \"Text color (inactive / off)\",\n            isUIState: true\n        },\n        textOnColor: {\n            type: \"color\",\n            default: \"rgba(90, 90, 90, 1)\",\n            description: \"Text color (inactive / on)\",\n            isUIState: true\n        },\n        activeTextColor: {\n            type: \"color\",\n            default: \"rgba(0, 0, 0, 1)\",\n            description: \"Text color (active / off)\",\n            isUIState: true\n        },\n        activeTextOnColor: {\n            type: \"color\",\n            default: \"rgba(0, 0, 0, 1)\",\n            description: \"Text color (active / on)\",\n            isUIState: true\n        },\n        fontFamily: {\n            type: \"enum\",\n            enums: [\"Lato\", \"Georgia\", \"Times New Roman\", \"Arial\", \"Tahoma\", \"Verdana\", \"Courier New\"],\n            default: \"Arial\",\n            description: \"Font family\",\n            isUIState: true\n        },\n        fontSize: {\n            type: \"number\",\n            default: 10,\n            description: \"Text font size\",\n            isUIState: true\n        },\n        fontFace: {\n            type: \"enum\",\n            enums: [\"regular\", \"bold\", \"italic\", \"bold italic\"],\n            default: \"regular\",\n            description: \"Text style\",\n            isUIState: true\n        },\n        mode: {\n            type: \"enum\",\n            enums: [\"button\", \"toggle\"],\n            default: \"toggle\",\n            description: \"Trigger mode\",\n            isUIState: true\n        },\n        text: {\n            type: \"string\",\n            default: \"A\",\n            description: \"Text (off)\",\n            isUIState: true\n        },\n        textOn: {\n            type: \"string\",\n            default: \"B\",\n            description: \"Text (off)\",\n            isUIState: true\n        }\n    };\n    static ui = LiveTextUI;\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 2;\n            this.outlets = 2;\n        });\n        this.on(\"updateArgs\", (args) => {\n            if (typeof args[0] === \"number\") {\n                this.state.value = args[0];\n                this.validateValue();\n                this.updateUI({ value: this.state.value });\n            }\n        });\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) {\n                if (!isBang(data)) {\n                    const value = +data;\n                    this.state.value = value;\n                    this.validateValue();\n                    this.updateUI({ value: this.state.value });\n                }\n                this.outletAll([this.state.value, this.state.displayValue]);\n            } else if (inlet === 1) {\n                const value = +data;\n                this.state.value = value;\n                this.validateValue();\n                this.updateUI({ value: this.state.value });\n            }\n        });\n        this.on(\"changeFromUI\", ({ value, displayValue }) => {\n            this.state.value = value;\n            this.state.displayValue = displayValue;\n            this.outletAll([this.state.value, this.state.displayValue]);\n        });\n    }\n}\n","import { LiveUI, LiveObject, LiveUIState } from \"./Base\";\nimport { TMeta } from \"../../types\";\nimport { Bang, isBang } from \"../Base\";\n\ninterface LiveToggleProps extends LiveUIProps {\n    bgColor: string;\n    activeBgColor: string;\n    bgOnColor: string;\n    activeBgOnColor: string;\n    borderColor: string;\n    focusBorderColor: string;\n}\n\ninterface LiveToggleUIState extends LiveToggleProps, LiveUIState {}\nclass LiveToggleUI extends LiveUI<LiveToggle, LiveToggleUIState> {\n    static defaultSize: [number, number] = [30, 30];\n    className = \"live-toggle\";\n    paint() {\n        const {\n            // width,\n            // height,\n            active,\n            focus,\n            bgColor,\n            activeBgColor,\n            bgOnColor,\n            activeBgOnColor,\n            borderColor,\n            focusBorderColor,\n            value\n        } = this.state;\n        const ctx = this.ctx;\n        if (!ctx) return;\n        const borderWidth = 1;\n\n        const [width, height] = this.fullSize();\n        ctx.clearRect(0, 0, width, height);\n\n        ctx.lineWidth = borderWidth;\n\n        const buttonBgColor = active ? (value ? activeBgOnColor : activeBgColor) : (value ? bgOnColor : bgColor);\n        const buttonBorderColor = focus ? focusBorderColor : borderColor;\n\n        ctx.fillStyle = buttonBgColor;\n        ctx.beginPath();\n        ctx.rect(borderWidth, borderWidth, width - 2 * borderWidth, height - 2 * borderWidth);\n        ctx.fill();\n        ctx.strokeStyle = buttonBorderColor;\n        ctx.stroke();\n    }\n    handlePointerDown = () => {\n        this.setValueToOutput(1 - +!!this.state.value);\n    };\n}\n\nexport class LiveToggle extends LiveObject<{}, {}, [number | Bang, number], [number, string], [number], LiveToggleProps, LiveToggleUIState> {\n    static description = \"Toggle\";\n    static inlets: TMeta[\"inlets\"] = [{\n        isHot: true,\n        type: \"number\",\n        description: \"Set and output the value\"\n    }, {\n        isHot: false,\n        type: \"number\",\n        description: \"Set without output the value\"\n    }];\n    static outlets: TMeta[\"outlets\"] = [{\n        type: \"number\",\n        description: \"Number value\"\n    }, {\n        type: \"string\",\n        description: \"Display value\"\n    }];\n    static args: TMeta[\"args\"] = [{\n        type: \"number\",\n        optional: true,\n        default: 0,\n        description: \"Initial value\"\n    }];\n    static props: TMeta[\"props\"] = {\n        max: {\n            type: \"number\",\n            default: 1,\n            description: \"Maximum value\",\n            isUIState: true\n        },\n        bgColor: {\n            type: \"color\",\n            default: \"rgba(90, 90, 90, 1)\",\n            description: \"Background color (inactive)\",\n            isUIState: true\n        },\n        activeBgColor: {\n            type: \"color\",\n            default: \"rgba(195, 195, 195, 1)\",\n            description: \"Background color (active)\",\n            isUIState: true\n        },\n        bgOnColor: {\n            type: \"color\",\n            default: \"rgba(195, 195, 195, 1)\",\n            description: \"Background color (on / inactive)\",\n            isUIState: true\n        },\n        activeBgOnColor: {\n            type: \"color\",\n            default: \"rgba(109, 215, 255, 1)\",\n            description: \"Background color (on / active)\",\n            isUIState: true\n        },\n        borderColor: {\n            type: \"color\",\n            default: \"rgba(80, 80, 80, 1)\",\n            description: \"Border color (unfocus)\",\n            isUIState: true\n        },\n        focusBorderColor: {\n            type: \"color\",\n            default: \"rgba(80, 80, 80, 1)\",\n            description: \"Border color (focus)\",\n            isUIState: true\n        }\n    };\n    static ui = LiveToggleUI;\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 2;\n            this.outlets = 2;\n        });\n        this.on(\"updateArgs\", (args) => {\n            this.state.value = +!!args[0];\n            this.validateValue();\n            this.updateUI({ value: this.state.value });\n        });\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) {\n                if (!isBang(data)) {\n                    const value = +data;\n                    this.state.value = value;\n                    this.validateValue();\n                    this.updateUI({ value: this.state.value });\n                }\n                this.outletAll([this.state.value, this.state.displayValue]);\n            } else if (inlet === 1) {\n                const value = +data;\n                this.state.value = value;\n                this.validateValue();\n                this.updateUI({ value: this.state.value });\n            }\n        });\n        this.on(\"changeFromUI\", ({ value, displayValue }) => {\n            this.state.value = value;\n            this.state.displayValue = displayValue;\n            this.outletAll([this.state.value, this.state.displayValue]);\n        });\n    }\n}\n"],"sourceRoot":""}