{"version":3,"sources":["webpack://JSPatcher/./src/core/objects/UI/ButtonUI.tsx","webpack://JSPatcher/./src/core/objects/UI/bpf.tsx","webpack://JSPatcher/./src/core/objects/UI/exports.ts","webpack://JSPatcher/./src/core/objects/UI/keyboard.tsx","webpack://JSPatcher/./src/core/objects/UI/menu.tsx","webpack://JSPatcher/./src/core/objects/UI/message.ts","webpack://JSPatcher/./src/core/objects/UI/view.ts","webpack://JSPatcher/./src/core/objects/UI/waveform.ts"],"names":["ButtonUI","BaseUI","state","loading","text","props","object","data","React","e","editing","stopPropagation","key","preventDefault","nativeEvent","stopImmediatePropagation","document","execCommand","clipboardData","getData","componentDidMount","toggleEdit","componentDidUpdate","prevProps","toggle","editor","box","locked","refSpan","current","span","selectOnly","id","setState","textContent","focus","selectElementRange","window","getSelection","removeAllRanges","blur","handleChanged","render","classArray","join","onClick","handleClick","meta","icon","handleMouseDown","handleClickSpan","handlePaste","handleKeyDown","onEditEnd","BPFUI","points","ghostPoint","undefined","refG","style","transformOrigin","requestAnimationFrame","ctrlKey","shiftKey","altKey","metaKey","dragged","svg","currentTarget","left","top","width","height","getBoundingClientRect","normalizedX","clientX","normalizedY","clientY","x","y","denormalizePoint","index","$point","point","getInsertPoint","splice","slice","setData","mouseDown","line","cursor","domain","parentElement","range","i","getAttribute","prev","next","handleMouseMove","rangeMin","rangeMax","rangeInterval","delta","Math","min","max","handleMouseUp","removeEventListener","addEventListener","limits","normalized","circle","normalizePoint","circleX","circleY","abs","on","handleResized","componentWillUnmount","off","yIn","length","exponent","normExp","normalizedPoints","map","font","fontFace","fontSize","fontFamily","textColor","lineColor","pointColor","bgColor","circles","lines","linesEvents","texts","prevX","prevY","textAnchor","textX","textY","textStyle","userSelect","WebkitUserSelect","pointerEvents","fill","push","handleMouseDownCircle","handleDoubleClickCircle","round","handleMouseDownLine","handleMouseMoveLine","ghostCircle","opacity","backgroundColor","handleDoubleClick","bpf","UIObject","subscribe","inlets","outlets","prevRange","prevDomain","getProp","p","scaleClip","updateUI","inlet","isBang","outlet","decodeBPF","error","type","isHot","description","default","isUIState","enums","message","comment","code","menu","view","keyboard","waveform","KeyboardUI","keys","selected","mode","touches","rect","pageY","velocity","keyTrigger","keyIn","Array","from","changedTouches","forEach","touch","identifier","target","elementFromPoint","handleTouchStartKey","isBlack","blacks","indexOf","to","whiteCount","count","blackKeyColor","whiteKeyColor","keyOnColor","selectedColor","whites","blackStyle","strokeWidth","stroke","whiteStyle","keyOnStyle","selectedStyle","whiteWidthPercentage","blackWidthPercentage","whiteWidth","blackWidth","$white","$key","keyOn","commonProps","values","onMouseDown","handleMouseDownKey","onMouseEnter","handleMouseEnterKey","onTouchStart","onTouchMove","handleTouchMoveKey","onTouchEnd","handleTouchEndKey","touchAction","flushed","flush","Uint8Array","velocityIn","noOutput","v","prevMode","isMIDIEvent","cmd","channel","data1","data2","MenuUI","value","event","query","options","found","find","o","isNumberArray","filter","handleQuery","clearable","closeOnBlur","closeOnChange","closeOnEscape","deburr","defaultOpen","defaultValue","direction","disabled","lazyLoad","minCharacters","multiple","noResultsMessage","placeholder","scrolling","search","selectOnBlur","selectOnNavigation","simple","tabIndex","upward","wrapSelection","dropdownProps","handleChange","emit","update","varLength","optional","MessageUI","handleUpdateArgs","buffer","Bang","args","stringify","parse","JSON","Util","ViewUI","DOMUI","children","containerProps","template","createElement","innerHTML","content","Element","shadow","WaveformUI","CanvasUI","audio","paint","interleaved","autoVerticalRange","verticalRange","viewRange","showStats","cursorColor","phosphorColor","hueOffset","gridColor","seperatorColor","audioUnit","bpm","ctx","fullSize","clearRect","fillStyle","fillRect","audioBuffer","numberOfChannels","sampleRate","t","toArray","$0","$1","pixelsPerSamp","sampsPerPixel","yMin","yMax","s","j","yFactor","calcY","channelHeight","ruler","getRuler","gridChannels","strokeStyle","beginPath","sampleIn","sample","moveTo","lineTo","dbtoa","a","setLineDash","lineWidth","channelColor","currentWaveform","findStep","save","clip","Path2D","Color","shiftHue","toHSL","idx","maxInStep","minInStep","$","$next","samp","$step","nextX","nextY","restore","cursorX","textAlign","textBaseline","fillText","toFixed","schedulePaint","prevState","PatcherAudio","selRange"],"mappings":"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","file":"js/2dd6eb2867d4b944648c.js","sourcesContent":["import * as React from \"react\";\nimport { Icon } from \"semantic-ui-react\";\nimport { BaseObject } from \"../Base\";\nimport { BaseUI, BaseUIProps, BaseUIState } from \"../BaseUI\";\nimport { selectElementRange } from \"../../../utils/utils\";\n\ntype ButtonUIState = { text: string; loading: boolean } & BaseUIState;\nexport default class ButtonUI<T extends BaseObject<{ text: string }, { editing: boolean }, any, any, any, any, { text: string }>> extends BaseUI<T, {}, ButtonUIState> {\n    state: ButtonUIState = { ...this.state, loading: false, text: this.props.object.data.text };\n    refSpan = React.createRef<HTMLSpanElement>();\n    componentDidMount() {\n        super.componentDidMount();\n        if (this.props.editing) this.toggleEdit(this.props.editing);\n    }\n    componentDidUpdate(prevProps: Readonly<BaseUIProps>) {\n        if (this.props.editing !== prevProps.editing) this.toggleEdit(this.props.editing);\n    }\n    handleChanged = (text: string) => {};\n    toggleEdit(toggle: boolean) {\n        const { editor, box } = this;\n        if (editor.state.locked) return;\n        if (!this.refSpan.current) return;\n        const span = this.refSpan.current;\n        if (toggle) {\n            editor.selectOnly(box.id);\n            this.setState({ text: span.textContent }, () => {\n                span.focus();\n                selectElementRange(span);\n            });\n        } else {\n            window.getSelection().removeAllRanges();\n            span.blur();\n            this.setState({ text: span.textContent });\n            this.handleChanged(span.textContent);\n        }\n    }\n    handleMouseDown = (e: React.MouseEvent) => (this.props.editing ? e.stopPropagation() : null);\n    handleClickSpan = (e: React.MouseEvent) => (this.props.editing ? e.stopPropagation() : null);\n    handleClick = (e: React.MouseEvent) => {};\n    handleKeyDown = (e: React.KeyboardEvent) => { // propagate for parent for focus on boxUI\n        if (!this.props.editing) return;\n        if (e.key === \"Enter\") {\n            e.preventDefault();\n            return;\n        }\n        e.stopPropagation();\n        e.nativeEvent.stopImmediatePropagation();\n    };\n    handlePaste = (e: React.ClipboardEvent) => {\n        if (!this.props.editing) return;\n        e.preventDefault();\n        document.execCommand(\"insertHTML\", false, e.clipboardData.getData(\"text/plain\"));\n    };\n    render() {\n        const { object } = this;\n        const classArray = [\"box-ui-button\", \"ui\", \"button\", \"compact\", \"mini\"];\n        return (\n            <BaseUI {...this.props} additionalClassName={classArray.join(\" \")} containerProps={{ onClick: this.handleClick }}>\n                <div className=\"box-ui-text-container\">\n                    {object.meta.icon ? <Icon inverted={true} loading={this.state.loading} size=\"small\" name={this.state.loading ? \"spinner\" : object.meta.icon} /> : null}\n                    <span contentEditable={this.props.editing} className={\"editable\" + (this.props.editing ? \" editing\" : \"\")} ref={this.refSpan} onMouseDown={this.handleMouseDown} onClick={this.handleClickSpan} onPaste={this.handlePaste} onKeyDown={this.handleKeyDown} onBlur={this.props.onEditEnd} suppressContentEditableWarning={true}>\n                        {this.state.text}\n                    </span>\n                </div>\n            </BaseUI>\n        );\n    }\n}\n","import * as React from \"react\";\nimport UIObject from \"./Base\";\nimport { Bang, isBang } from \"../Base\";\nimport { BaseUI, BaseUIState } from \"../BaseUI\";\nimport { TBPF, TStrictBPF, TBPFPoint, TMeta, TPropsMeta } from \"../../types\";\nimport { decodeBPF } from \"../../../utils/utils\";\nimport { normExp, round, scaleClip } from \"../../../utils/math\";\n\ninterface BPFData {\n    points: TStrictBPF;\n}\ninterface BPFUIProps {\n    domain: number;\n    range: [number, number];\n    fontFamily: string;\n    fontSize: number;\n    fontFace: \"regular\" | \"bold\" | \"italic\" | \"bold italic\";\n    textColor: string;\n    pointColor: string;\n    lineColor: string;\n    bgColor: string;\n}\ninterface BPFUIState extends BPFData, BaseUIState, BPFUIProps {\n    ghostPoint: TBPFPoint;\n}\n\nexport class BPFUI<T extends bpf> extends BaseUI<T, {}, BPFUIState> {\n    static sizing = \"both\" as const;\n    static defaultSize: [number, number] = [450, 300];\n    state: BPFUIState = { ...this.state, points: this.object.data.points, ghostPoint: undefined };\n    dragged = false;\n    mouseDown = false;\n    refG = React.createRef<SVGGElement>();\n    handleResized = () => {\n        if (this.refG.current) {\n            this.refG.current.style.transformOrigin = \"0\";\n            requestAnimationFrame(() => this.refG.current.style.transformOrigin = \"center\");\n        }\n    };\n    componentDidMount() {\n        super.componentDidMount();\n        this.box.on(\"rectChanged\", this.handleResized);\n        this.box.on(\"presentationRectChanged\", this.handleResized);\n    }\n    componentWillUnmount() {\n        super.componentWillUnmount();\n        this.box.off(\"rectChanged\", this.handleResized);\n        this.box.off(\"presentationRectChanged\", this.handleResized);\n    }\n    handleMouseMove = () => {\n        this.setState({ ghostPoint: undefined });\n    };\n    handleDoubleClick = (e: React.MouseEvent<SVGSVGElement>) => {\n        if (e.ctrlKey || e.shiftKey || e.altKey || e.metaKey) return;\n        this.dragged = false;\n        const { points } = this.state;\n        const svg = e.currentTarget;\n        let { left, top, width, height } = svg.getBoundingClientRect();\n        left += 0.025 * width;\n        top += 0.025 * height;\n        width *= 0.95;\n        height *= 0.95;\n        const normalizedX = (e.clientX - left) / width;\n        const normalizedY = 1 - (e.clientY - top) / height;\n        const [x, y] = this.denormalizePoint(normalizedX, normalizedY);\n        const { index: $point, point } = this.getInsertPoint(x, y);\n        points.splice($point, 0, point);\n        this.setState({ points: points.slice() });\n        this.object.setData({ points: this.state.points });\n    };\n    handleMouseMoveLine = (e: React.MouseEvent<SVGLineElement>) => {\n        if (this.mouseDown) return;\n        e.stopPropagation();\n        const line = e.currentTarget;\n        if (e.altKey) {\n            line.style.cursor = \"ns-resize\";\n            return;\n        }\n        line.style.cursor = \"unset\";\n        const { domain } = this.state;\n        const svg = line.parentElement.parentElement;\n        let { left, width } = svg.getBoundingClientRect();\n        left += 0.025 * width;\n        width *= 0.95;\n        const normalizedX = (e.clientX - left) / width;\n        const { point } = this.getInsertPoint(normalizedX * domain);\n        this.setState({ ghostPoint: point });\n    };\n    handleMouseDownLine = (e: React.MouseEvent<SVGLineElement>) => {\n        e.stopPropagation();\n        this.dragged = false;\n        this.mouseDown = true;\n        const line = e.currentTarget;\n        const { points, domain, range } = this.state;\n        const svg = line.parentElement.parentElement;\n        let { left, top, width, height } = svg.getBoundingClientRect();\n        left += 0.025 * width;\n        top += 0.025 * height;\n        width *= 0.95;\n        height *= 0.95;\n        if (e.altKey) {\n            const i = +line.getAttribute(\"values\");\n            const prev = points[i];\n            const next = points[i + 1];\n            const { clientY } = e;\n            const handleMouseMove = (e: MouseEvent) => {\n                this.dragged = true;\n                let [rangeMin, rangeMax] = range;\n                if (rangeMin > rangeMax) [rangeMin, rangeMax] = [rangeMax, rangeMin];\n                const rangeInterval = rangeMax - rangeMin;\n                if (!rangeInterval) return;\n                const delta = (e.clientY - clientY) / height * rangeInterval;\n                points[i] = prev.slice() as TBPFPoint;\n                points[i][1] = Math.min(rangeMax, Math.max(rangeMin, prev[1] - delta));\n                if (next) {\n                    points[i + 1] = next.slice() as TBPFPoint;\n                    points[i + 1][1] = Math.min(rangeMax, Math.max(rangeMin, next[1] - delta));\n                }\n                this.setState({ points: points.slice() });\n                this.object.setData({ points: this.state.points });\n            };\n            const handleMouseUp = () => {\n                this.mouseDown = false;\n                document.removeEventListener(\"mousemove\", handleMouseMove);\n                document.removeEventListener(\"mouseup\", handleMouseUp);\n            };\n            document.addEventListener(\"mousemove\", handleMouseMove);\n            document.addEventListener(\"mouseup\", handleMouseUp);\n        } else {\n            const normalizedX = (e.clientX - left) / width;\n            const { index: $point, point } = this.getInsertPoint(normalizedX * domain);\n            const limits = [\n                points[$point - 1][0] / domain * width + left,\n                points[$point] ? points[$point][0] / domain * width + left : left + width\n            ];\n            points.splice($point, 0, point);\n            this.setState({ points: points.slice() });\n            this.object.setData({ points: this.state.points });\n            const handleMouseMove = (e: MouseEvent) => {\n                this.dragged = true;\n                const clientX = Math.max(limits[0], Math.min(limits[1], e.clientX));\n                const clientY = Math.max(top, Math.min(top + height, e.clientY));\n                const normalized = [(clientX - left) / width, 1 - (clientY - top) / height] as const;\n                const [x, y] = this.denormalizePoint(...normalized);\n                const point: TBPFPoint = [x, y, 0];\n                points[$point] = point;\n                this.setState({ points: points.slice() });\n                this.object.setData({ points: this.state.points });\n            };\n            const handleMouseUp = () => {\n                this.mouseDown = false;\n                document.removeEventListener(\"mousemove\", handleMouseMove);\n                document.removeEventListener(\"mouseup\", handleMouseUp);\n            };\n            document.addEventListener(\"mousemove\", handleMouseMove);\n            document.addEventListener(\"mouseup\", handleMouseUp);\n        }\n    };\n    handleMouseDownCircle = (e: React.MouseEvent<SVGCircleElement>) => {\n        e.stopPropagation();\n        this.dragged = false;\n        const { points, domain } = this.state;\n        const circle = e.currentTarget;\n        const svg = circle.parentElement.parentElement;\n        let { left, top, width, height } = svg.getBoundingClientRect();\n        left += 0.05 * width;\n        top += 0.05 * height;\n        width *= 0.9;\n        height *= 0.9;\n        const i = +circle.getAttribute(\"values\");\n        const limits = [\n            points[i - 1] ? points[i - 1][0] / domain * width + left : left,\n            points[i + 1] ? points[i + 1][0] / domain * width + left : left + width\n        ];\n        const [x, y] = this.normalizePoint(points[i][0], points[i][1]);\n        const circleX = left + x * width;\n        const circleY = top + (1 - y) * height;\n        const handleMouseMove = (e: MouseEvent) => {\n            this.dragged = true;\n            const clientX = Math.max(limits[0], Math.min(limits[1], e.shiftKey || Math.abs(circleX - e.clientX) > 5 ? e.clientX : circleX));\n            const clientY = Math.max(top, Math.min(top + height, e.shiftKey || Math.abs(circleY - e.clientY) > 5 ? e.clientY : circleY));\n            const normalized = [(clientX - left) / width, 1 - (clientY - top) / height] as const;\n            const [x, y] = this.denormalizePoint(...normalized);\n            const point = [x, y, 0];\n            points[i] = point as TBPFPoint;\n            this.setState({ points: points.slice() });\n            this.object.setData({ points: this.state.points });\n        };\n        const handleMouseUp = () => {\n            document.removeEventListener(\"mousemove\", handleMouseMove);\n            document.removeEventListener(\"mouseup\", handleMouseUp);\n        };\n        document.addEventListener(\"mousemove\", handleMouseMove);\n        document.addEventListener(\"mouseup\", handleMouseUp);\n    };\n    handleDoubleClickCircle = (e: React.MouseEvent<SVGCircleElement>) => {\n        e.stopPropagation();\n        if (this.dragged) return;\n        const circle = e.currentTarget;\n        const i = +circle.getAttribute(\"values\");\n        const { points } = this.state;\n        points.splice(i, 1);\n        this.setState({ points: points.slice() });\n        this.object.setData({ points: this.state.points });\n    };\n    getInsertPoint(x: number, yIn?: number, e = 0): { index: number; point: TBPFPoint } {\n        const { points } = this.state;\n        let $point = 0;\n        let prev = points[0];\n        let next: TBPFPoint;\n        while ($point < points.length) {\n            next = points[$point];\n            if (next[0] > x) break;\n            prev = next;\n            $point++;\n        }\n        if (prev === next) return { index: $point, point: [x, typeof yIn === \"number\" ? yIn : prev[1], e] };\n        if (typeof yIn === \"number\") return { index: $point, point: [x, yIn, e] };\n        const exponent = prev[2] || 0;\n        const normalizedX = (x - prev[0]) / (next[0] - prev[0]);\n        const normalizedY = normExp(normalizedX, exponent);\n        const y = prev[1] + normalizedY * (next[1] - prev[1]);\n        return { index: $point, point: [x, y, e] };\n    }\n    get normalizedPoints() {\n        const { domain, range, points } = this.state;\n        let [rangeMin, rangeMax] = range;\n        if (rangeMin > rangeMax) [rangeMin, rangeMax] = [rangeMax, rangeMin];\n        const rangeInterval = rangeMax - rangeMin;\n        return points.map(point => [point[0] / domain, rangeInterval ? (point[1] - rangeMin) / rangeInterval : 0.5]);\n    }\n    normalizePoint(x: number, y: number) {\n        const { domain, range } = this.state;\n        let [rangeMin, rangeMax] = range;\n        if (rangeMin > rangeMax) [rangeMin, rangeMax] = [rangeMax, rangeMin];\n        const rangeInterval = rangeMax - rangeMin;\n        return [x / domain, rangeInterval ? (y - rangeMin) / rangeInterval : 0.5];\n    }\n    denormalizePoint(x: number, y: number) {\n        const { domain, range } = this.state;\n        let [rangeMin, rangeMax] = range;\n        if (rangeMin > rangeMax) [rangeMin, rangeMax] = [rangeMax, rangeMin];\n        const rangeInterval = rangeMax - rangeMin;\n        return [x * domain, y * rangeInterval + rangeMin];\n    }\n    get font() {\n        const { fontFace, fontSize, fontFamily } = this.state;\n        return `${fontFace === \"regular\" ? \"\" : fontFace} ${fontSize}px ${fontFamily}, sans-serif`;\n    }\n    render() {\n        const { normalizedPoints, font, state } = this;\n        const { domain, points, textColor, ghostPoint, lineColor, pointColor, bgColor } = state;\n        const circles: JSX.Element[] = [];\n        const lines: JSX.Element[] = [];\n        const linesEvents: JSX.Element[] = [];\n        const texts: JSX.Element[] = [];\n        let prevX: string;\n        let prevY: string;\n        for (let i = 0; i < normalizedPoints.length; i++) {\n            const point = normalizedPoints[i];\n            const x = point[0] * 100 + \"%\";\n            const y = (1 - point[1]) * 100 + \"%\";\n            const textAnchor = point[0] < 0.5 ? \"start\" : \"end\";\n            const textX = point[0] * 100 + (point[0] < 0.5 ? 2 : -2) + \"%\";\n            const textY = (1 - point[1]) * 100 + (point[1] < 0.5 ? -1 : 4) + \"%\";\n            const textStyle: React.CSSProperties = {\n                userSelect: \"none\",\n                WebkitUserSelect: \"none\",\n                pointerEvents: \"none\",\n                font, // stylelint-disable-line font-family-no-missing-generic-family-keyword\n                fill: textColor\n            };\n            circles.push(<circle key={i} cx={x} cy={y} r={4} values={`${i}`} fill={pointColor} onMouseDown={this.handleMouseDownCircle} onDoubleClick={this.handleDoubleClickCircle} />);\n            texts.push(<text textAnchor={textAnchor} key={`${i}_text`} x={textX} y={textY} style={textStyle} >{`${round(points[i][0], 0.01)}, ${round(points[i][1], 0.01)}`}</text>);\n            if (prevX && prevY) {\n                lines.push(<line key={`${i - 1}_line`} x1={prevX} y1={prevY} x2={x} y2={y} stroke={lineColor} strokeWidth={2} />);\n                linesEvents.push(<line key={`${i - 1}_events`} x1={prevX} y1={prevY} x2={x} y2={y} values={`${i - 1}`} stroke=\"transparent\" strokeWidth={10} onMouseDown={this.handleMouseDownLine} onMouseMove={this.handleMouseMoveLine} />);\n            }\n            prevX = x;\n            prevY = y;\n        }\n        let ghostCircle: JSX.Element;\n        if (ghostPoint) {\n            const point = this.normalizePoint(ghostPoint[0], ghostPoint[1]);\n            const x = point[0] * 100 + \"%\";\n            const y = (1 - point[1]) * 100 + \"%\";\n            ghostCircle = <circle key=\"ghostPoint\" cx={x} cy={y} r={4} fill={pointColor} style={{ opacity: 0.25, pointerEvents: \"none\" }} />;\n        }\n        if (points.length && points[points.length - 1][0] !== domain) {\n            const i = points.length - 1;\n            lines.push(<line key={`${i}_line`} x1={prevX} y1={prevY} x2=\"100%\" y2={prevY} stroke={lineColor} strokeWidth={2} />);\n            linesEvents.push(<line key={`${i}_events`} x1={prevX} y1={prevY} x2=\"100%\" y2={prevY} values={`${i}`} stroke=\"transparent\" strokeWidth={10} onMouseDown={this.handleMouseDownLine} onMouseMove={this.handleMouseMoveLine} />);\n        }\n        return (\n            <BaseUI {...this.props} containerProps={{ style: { height: \"100%\", width: \"100%\" } }}>\n                <svg width=\"100%\" height=\"100%\" style={{ backgroundColor: bgColor }} onMouseMove={this.handleMouseMove} onDoubleClick={this.handleDoubleClick}>\n                    <g ref={this.refG} transform=\"scale(0.95, 0.95)\" style={{ transformOrigin: \"center\" }}>\n                        {texts}\n                        {ghostCircle}\n                        {lines}\n                        {linesEvents}\n                        {circles}\n                    </g>\n                </svg>\n            </BaseUI>\n        );\n    }\n}\nexport default class bpf extends UIObject<BPFData, {}, [TBPF | Bang], [TStrictBPF], [], BPFUIProps, BPFUIProps & BPFData> {\n    static description = \"Break-point function editor\";\n    static inlets: TMeta[\"inlets\"] = [{\n        type: \"anything\",\n        isHot: true,\n        description: \"Display & output a bpf, bang to output\"\n    }, {\n        type: \"anything\",\n        isHot: true,\n        description: \"Display without output\"\n    }];\n    static outlets: TMeta[\"outlets\"] = [{\n        type: \"object\",\n        description: \"BPF triggered\"\n    }];\n    static props: TPropsMeta<BPFUIProps> = {\n        domain: {\n            type: \"number\",\n            default: 1000,\n            description: \"X-axis range, starts from 0\",\n            isUIState: true\n        },\n        range: {\n            type: \"object\",\n            default: [0, 1],\n            description: \"Y-axis range, [low, high]\",\n            isUIState: true\n        },\n        textColor: {\n            type: \"color\",\n            default: \"rgba(0, 255, 255, 1)\",\n            description: \"Text color\",\n            isUIState: true\n        },\n        fontFamily: {\n            type: \"enum\",\n            enums: [\"Lato\", \"Georgia\", \"Times New Roman\", \"Arial\", \"Tahoma\", \"Verdana\", \"Courier New\"],\n            default: \"Arial\",\n            description: \"Font family\",\n            isUIState: true\n        },\n        fontSize: {\n            type: \"number\",\n            default: 10,\n            description: \"Text font size\",\n            isUIState: true\n        },\n        fontFace: {\n            type: \"enum\",\n            enums: [\"regular\", \"bold\", \"italic\", \"bold italic\"],\n            default: \"regular\",\n            description: \"Text style\",\n            isUIState: true\n        },\n        pointColor: {\n            type: \"color\",\n            default: \"white\",\n            description: \"Text color\",\n            isUIState: true\n        },\n        lineColor: {\n            type: \"color\",\n            default: \"white\",\n            description: \"Line color\",\n            isUIState: true\n        },\n        bgColor: {\n            type: \"color\",\n            default: \"rgba(0, 0, 0, 0.5)\",\n            description: \"Background color\",\n            isUIState: true\n        }\n    };\n    static UI = BPFUI;\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 2;\n            this.outlets = 1;\n            if (!this.data.points) this.data.points = [];\n        });\n        let prevRange: [number, number];\n        let prevDomain: number;\n        this.on(\"postInit\", () => {\n            prevRange = this.getProp(\"range\");\n            prevDomain = this.getProp(\"domain\");\n        });\n        this.on(\"updateProps\", () => {\n            const range = this.getProp(\"range\");\n            if (prevRange && prevRange !== range) {\n                const points = this.data.points.map(p => [p[0], scaleClip(p[1], prevRange[0], prevRange[1], range[0], range[1]), p[2]] as TBPFPoint);\n                this.setData({ points });\n                this.updateUI(this.data);\n                prevRange = range;\n            }\n            const domain = this.getProp(\"domain\");\n            if (typeof prevDomain === \"number\" && prevDomain !== domain) {\n                const points = this.data.points.map(p => [scaleClip(p[0], 0, prevDomain, 0, domain), p[1], p[2]] as TBPFPoint);\n                this.setData({ points });\n                this.updateUI(this.data);\n                prevDomain = domain;\n            }\n        });\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (isBang(data)) {\n                if (inlet === 0) {\n                    const { points } = this.data;\n                    this.outlet(0, points.map((p, i) => [p[1], p[0] - (i > 0 ? points[i - 1][0] : 0), p[2]]));\n                }\n            } else {\n                let points: TStrictBPF;\n                try {\n                    points = decodeBPF(data, 3) as TStrictBPF;\n                } catch (e) {\n                    this.error(\"Cannot decode inlet BPF\");\n                }\n                this.setData({ points });\n                this.updateUI(this.data);\n            }\n        });\n    }\n}\n","import comment from \"./comment\";\nimport message from \"./message\";\nimport code from \"./code\";\nimport menu from \"./menu\";\nimport view from \"./view\";\nimport keyboard from \"./keyboard\";\nimport bpf from \"./bpf\";\nimport waveform from \"./waveform\";\n\nexport default { message, comment, code, menu, view, keyboard, bpf, waveform };\n","import * as React from \"react\";\nimport UIObject from \"./Base\";\nimport { BaseUI, BaseUIState } from \"../BaseUI\";\nimport { TMIDIEvent, TMeta, TPropsMeta } from \"../../types\";\nimport { isMIDIEvent } from \"../../../utils/utils\";\n\ntype KeyMap = number[];\ninterface KeyboardState {\n    keys: KeyMap;\n    selected: number;\n}\ninterface KeyboardUIProps {\n    from: number;\n    to: number;\n    blackKeyColor: string;\n    whiteKeyColor: string;\n    selectedColor: string;\n    keyOnColor: string;\n    mode: \"mono\" | \"poly\" | \"touch\";\n}\ninterface KeyboardUIState extends KeyboardState, BaseUIState, KeyboardUIProps {}\n\nexport class KeyboardUI<T extends keyboard> extends BaseUI<T, {}, KeyboardUIState> {\n    static sizing = \"both\" as const;\n    static defaultSize: [number, number] = [450, 60];\n    static blacks = [1, 3, 6, 8, 10];\n    state: KeyboardUIState = { ...this.state, keys: this.object.state.keys, selected: undefined };\n    isBlack(key: number) {\n        return KeyboardUI.blacks.indexOf(key % 12) !== -1;\n    }\n    get from() {\n        if (this.isBlack(this.state.from)) return this.state.from - 1;\n        return this.state.from;\n    }\n    get to() {\n        if (this.isBlack(this.state.to)) return this.state.to + 1;\n        return this.state.to;\n    }\n    get whiteCount() {\n        const { to } = this;\n        let { from } = this;\n        if (from >= to) return 0;\n        let count = 0;\n        while (from <= to) {\n            if (!this.isBlack(from++)) count++;\n        }\n        return count;\n    }\n    mouseDown = false;\n    touches: number[] = [];\n    handleMouseDownKey = (e: React.MouseEvent<SVGRectElement>) => {\n        const key = +e.currentTarget.getAttribute(\"values\");\n        if (this.state.mode === \"touch\") {\n            if (this.state.keys[key]) return;\n            this.touches[-1] = key;\n        }\n        const rect = e.currentTarget.getBoundingClientRect();\n        const y = e.pageY - rect.top;\n        const height = rect.height;\n        const velocity = (Math.min(127, ~~(y / height * 128)) || 1);\n        this.object.keyTrigger(key, velocity);\n        this.mouseDown = true;\n        const handleMouseUp = () => {\n            this.mouseDown = false;\n            if (this.state.mode === \"touch\" && this.touches[-1]) {\n                this.object.keyTrigger(this.touches[-1], 0);\n                delete this.touches[-1];\n            }\n            this.setState({ selected: undefined });\n            document.removeEventListener(\"mouseup\", handleMouseUp);\n        };\n        document.addEventListener(\"mouseup\", handleMouseUp);\n    };\n    handleMouseEnterKey = (e: React.MouseEvent<SVGRectElement>) => {\n        if (!this.mouseDown) return;\n        const key = +e.currentTarget.getAttribute(\"values\");\n        if (this.state.mode === \"touch\") {\n            if (this.touches[-1] && this.touches[-1] !== key) {\n                this.object.keyTrigger(this.touches[-1], 0);\n                delete this.touches[-1];\n            }\n            if (this.state.keys[key]) return;\n        }\n        const rect = e.currentTarget.getBoundingClientRect();\n        const y = e.pageY - rect.top;\n        const height = rect.height;\n        const velocity = (Math.min(127, ~~(y / height * 128)) || 1);\n        this.object.keyTrigger(key, velocity);\n        if (this.state.mode === \"touch\") this.touches[-1] = key;\n    };\n    handleTouchStartKey = (e: React.TouchEvent<SVGRectElement>, keyIn?: number) => {\n        if (this.state.mode !== \"touch\") return;\n        e.stopPropagation();\n        const key = typeof keyIn === \"number\" ? keyIn : +e.currentTarget.getAttribute(\"values\");\n        Array.from(e.changedTouches).forEach((touch) => {\n            const { identifier: id } = touch;\n            if (this.touches[id]) this.object.keyTrigger(this.touches[id], 0);\n            this.touches[id] = key;\n            const rect = e.currentTarget.getBoundingClientRect();\n            const y = touch.pageY - rect.top;\n            const height = rect.height;\n            const velocity = (Math.min(127, ~~(y / height * 128)) || 1);\n            this.object.keyTrigger(key, velocity);\n        });\n    };\n    handleTouchMoveKey = (e: React.TouchEvent<SVGRectElement>) => {\n        if (this.state.mode !== \"touch\") return;\n        e.stopPropagation();\n        e.preventDefault();\n        Array.from(e.changedTouches).forEach((touch) => {\n            const target = document.elementFromPoint(touch.clientX, touch.clientY);\n            if (target.parentElement !== e.currentTarget.parentElement) return;\n            const key = +target.getAttribute(\"values\");\n            if (typeof key === \"undefined\") return;\n            if (this.state.keys[key]) return;\n            this.handleTouchStartKey(e, key);\n        });\n    };\n    handleTouchEndKey = (e: React.TouchEvent<SVGRectElement>) => {\n        if (this.state.mode !== \"touch\") return;\n        e.stopPropagation();\n        e.preventDefault();\n        Array.from(e.changedTouches).forEach((touch) => {\n            const { identifier: id } = touch;\n            if (this.touches[id]) this.object.keyTrigger(this.touches[id], 0);\n            delete this.touches[id];\n        });\n    };\n    render() {\n        const { from, to, whiteCount, state } = this;\n        const { blackKeyColor, whiteKeyColor, keyOnColor, selectedColor, selected } = state;\n        const whites: JSX.Element[] = [];\n        const blacks: JSX.Element[] = [];\n        const blackStyle: React.CSSProperties = { fill: blackKeyColor, strokeWidth: 1, stroke: \"black\" };\n        const whiteStyle: React.CSSProperties = { fill: whiteKeyColor, strokeWidth: 1, stroke: \"black\" };\n        const keyOnStyle: React.CSSProperties = { fill: keyOnColor, strokeWidth: 1, stroke: \"black\" };\n        const selectedStyle: React.CSSProperties = { fill: selectedColor, strokeWidth: 1, stroke: \"black\" };\n        const whiteWidthPercentage = 100 / whiteCount;\n        const blackWidthPercentage = 100 / whiteCount * 2 / 3;\n        const whiteWidth = `${whiteWidthPercentage}%`;\n        const blackWidth = `${blackWidthPercentage}%`;\n        let $white = 0;\n        let key = from;\n        while (key <= to) {\n            const $key = key;\n            const keyOn = +!!this.state.keys[$key];\n            const commonProps: React.SVGProps<SVGRectElement> = {\n                key: $key,\n                values: `${key}`,\n                onMouseDown: this.handleMouseDownKey,\n                onMouseEnter: this.handleMouseEnterKey,\n                onTouchStart: this.handleTouchStartKey,\n                onTouchMove: this.handleTouchMoveKey,\n                onTouchEnd: this.handleTouchEndKey\n            };\n            if (this.isBlack(key)) {\n                const style = key === selected ? selectedStyle : keyOn ? keyOnStyle : blackStyle;\n                const x = `${($white - 1 / 3) * whiteWidthPercentage}%`;\n                blacks.push(<rect x={x} y={0} width={blackWidth} height=\"70%\" style={style} {...commonProps} />);\n            } else {\n                const style = key === selected ? selectedStyle : keyOn ? keyOnStyle : whiteStyle;\n                const x = `${$white * whiteWidthPercentage}%`;\n                whites.push(<rect x={x} y={0} width={whiteWidth} height=\"100%\" style={style} {...commonProps} />);\n                $white++;\n            }\n            key++;\n        }\n        return (\n            <BaseUI {...this.props} containerProps={{ style: { height: \"100%\", width: \"100%\" } }}>\n                <svg width=\"100%\" height=\"100%\" style={{ touchAction: \"none\" }}>\n                    <rect x={0} y={0} width=\"100%\" height=\"100%\" style={{ fill: \"transparent\", strokeWidth: 2, stroke: \"black\" }} />\n                    {whites}\n                    {blacks}\n                </svg>\n            </BaseUI>\n        );\n    }\n}\nexport default class keyboard extends UIObject<{}, KeyboardState, [TMIDIEvent | \"flush\", TMIDIEvent], [Uint8Array & { length: 3 }], [], KeyboardUIProps, KeyboardUIProps & KeyboardState> {\n    static description = \"Keyboard\";\n    static inlets: TMeta[\"inlets\"] = [{\n        type: \"anything\",\n        isHot: true,\n        description: 'Display & output same MIDI event, \"flush\" to flush active notes'\n    }, {\n        type: \"object\",\n        isHot: true,\n        description: \"Display without output\"\n    }];\n    static outlets: TMeta[\"outlets\"] = [{\n        type: \"object\",\n        description: \"MIDI event triggered\"\n    }];\n    static props: TPropsMeta<KeyboardUIProps> = {\n        from: {\n            type: \"number\",\n            default: 24,\n            description: \"Lowest MIDI key to display\",\n            isUIState: true\n        },\n        to: {\n            type: \"number\",\n            default: 96,\n            description: \"Highest MIDI key to display\",\n            isUIState: true\n        },\n        blackKeyColor: {\n            type: \"color\",\n            default: \"black\",\n            description: \"Display color of black key\",\n            isUIState: true\n        },\n        whiteKeyColor: {\n            type: \"color\",\n            default: \"white\",\n            description: \"Display color of white key\",\n            isUIState: true\n        },\n        keyOnColor: {\n            type: \"color\",\n            default: \"grey\",\n            description: \"Display color of pressed key\",\n            isUIState: true\n        },\n        selectedColor: {\n            type: \"color\",\n            default: \"yellow\",\n            description: \"Display color of selected key\",\n            isUIState: true\n        },\n        mode: {\n            type: \"enum\",\n            enums: [\"mono\", \"poly\", \"touch\"],\n            default: \"poly\",\n            description: \"Triggering mode\",\n            isUIState: true\n        }\n    };\n    static UI = KeyboardUI;\n    state: KeyboardState = { keys: this.flushed, selected: undefined };\n    get flushed() {\n        const keys: KeyMap = [];\n        for (let i = 0; i < 128; i++) {\n            keys[i] = 0;\n        }\n        return keys;\n    }\n    flush() {\n        const { keys } = this.state;\n        for (let $key = 0; $key < 128; $key++) {\n            if (keys[$key]) {\n                this.outlet(0, new Uint8Array([9 << 4, $key, 0]) as Uint8Array & { length: 3 });\n                this.state.keys[$key] = 0;\n            }\n        }\n        this.state.selected = undefined;\n    }\n    keyTrigger(keyIn: number, velocityIn: number, noOutput?: boolean) {\n        const key = Math.max(0, Math.min(127, ~~+keyIn));\n        const velocity = Math.max(0, Math.min(127, ~~+velocityIn));\n        const mode = this.getProp(\"mode\");\n        if (mode === \"mono\") {\n            const keys = this.flushed;\n            keys[key] = velocity;\n            if (!noOutput) this.outlet(0, new Uint8Array([9 << 4, key, velocity]) as Uint8Array & { length: 3 });\n            this.setState({ keys, selected: key });\n        } else if (mode === \"poly\") {\n            const { keys } = this.state;\n            const v = +!keys[key] * (velocity || 1);\n            keys[key] = v;\n            if (!noOutput) this.outlet(0, new Uint8Array([9 << 4, key, v]) as Uint8Array & { length: 3 });\n            this.setState({ keys: { ...keys }, selected: v ? key : undefined });\n        } else {\n            const { keys } = this.state;\n            keys[key] = velocity;\n            if (!noOutput) this.outlet(0, new Uint8Array([9 << 4, key, velocity]) as Uint8Array & { length: 3 });\n            this.setState({ keys: { ...keys }, selected: velocity ? key : undefined });\n        }\n        this.updateUI(this.state);\n    }\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 2;\n            this.outlets = 1;\n        });\n        let prevMode: KeyboardUIProps[\"mode\"];\n        this.on(\"postInit\", () => prevMode = this.getProp(\"mode\"));\n        this.on(\"updateProps\", () => {\n            if (prevMode && prevMode !== this.getProp(\"mode\")) {\n                this.flush();\n                this.setState({ keys: { ...this.state.keys }, selected: undefined });\n                this.updateUI(this.state);\n            }\n        });\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0 && data === \"flush\") {\n                this.flush();\n                this.setState({ keys: { ...this.state.keys }, selected: undefined });\n                this.updateUI(this.state);\n            } else if (isMIDIEvent(data)) {\n                const cmd = data[0] >> 4;\n                const channel = data[0] & 0xf;\n                const data1 = data[1];\n                const data2 = data[2];\n                if (channel === 9) return;\n                if (cmd === 8 || (cmd === 9 && data2 === 0)) this.keyTrigger(data1, 0, inlet === 1);\n                else if (cmd === 9) this.keyTrigger(data1, data2, inlet === 1);\n            }\n        });\n    }\n}\n","import * as React from \"react\";\nimport { StrictDropdownProps, DropdownProps, Dropdown, StrictDropdownItemProps } from \"semantic-ui-react\";\nimport UIObject from \"./Base\";\nimport { BaseUI, BaseUIState } from \"../BaseUI\";\nimport { isNumberArray } from \"../../../utils/utils\";\nimport { TMeta, TPropsMeta } from \"../../types\";\n\n/* eslint-disable object-property-newline */\ntype MenuProps = Required<Pick<\n    StrictDropdownProps,\n    \"clearable\" | \"closeOnBlur\" | \"closeOnChange\" | \"closeOnEscape\" | \"deburr\"\n    | \"defaultOpen\" | \"defaultValue\" | \"direction\" | \"disabled\" | \"error\" | \"lazyLoad\"\n    | \"minCharacters\" | \"multiple\" | \"noResultsMessage\" | \"options\" | \"placeholder\"\n    | \"scrolling\" | \"search\" | \"selectOnBlur\" | \"selectOnNavigation\" | \"simple\"\n    | \"tabIndex\" | \"text\" | \"upward\" | \"wrapSelection\"\n>>;\ntype MenuUIState = { value: StrictDropdownProps[\"value\"] } & MenuProps;\nclass MenuUI extends BaseUI<menu, {}, MenuUIState> {\n    state: MenuUIState & BaseUIState = {\n        ...this.state,\n        value: this.object.getProp(\"defaultValue\")\n    };\n    handleChange = (event: React.SyntheticEvent<HTMLElement, Event>, data: DropdownProps) => {\n        const { value } = data;\n        this.setState({ value });\n        this.object.outlet(0, value);\n    };\n    handleQuery = (query: number | string | number[] | string[]) => {\n        const { options } = this.state;\n        let value;\n        if (typeof query === \"number\") {\n            if (options[query]) {\n                value = options[query].value;\n            }\n        } else if (typeof query === \"string\") {\n            const found = options.find(o => o.text === query);\n            if (found) {\n                value = found.value;\n            }\n        } else if (isNumberArray(query)) {\n            value = query.filter(i => !!options[i]).map(i => options[i].value);\n        } else {\n            value = options.filter(o => query.indexOf(o.text as string) !== -1).map(o => o.value);\n        }\n        if (value) {\n            this.setState({ value });\n            this.object.outlet(0, value);\n        }\n    };\n    componentDidMount() {\n        super.componentDidMount();\n        this.object.on(\"query\", this.handleQuery);\n    }\n    componentWillUnmount() {\n        super.componentWillUnmount();\n        this.object.off(\"query\", this.handleQuery);\n    }\n    render() {\n        const {\n            clearable, closeOnBlur, closeOnChange, closeOnEscape, deburr,\n            defaultOpen, defaultValue, direction, disabled, error, lazyLoad,\n            minCharacters, multiple, noResultsMessage, options, placeholder,\n            scrolling, search, selectOnBlur, selectOnNavigation, simple,\n            tabIndex, text, upward, wrapSelection, value\n        } = this.state;\n        const dropdownProps = {\n            clearable, closeOnBlur, closeOnChange, closeOnEscape, deburr,\n            defaultOpen, defaultValue, direction, disabled, error, lazyLoad,\n            minCharacters, multiple, noResultsMessage, options, placeholder,\n            scrolling, search, selectOnBlur, selectOnNavigation, simple,\n            tabIndex, text, upward, wrapSelection, value\n        };\n        return (\n            <BaseUI {...this.props}>\n                <Dropdown {...dropdownProps} selection fluid onChange={this.handleChange} />\n            </BaseUI>\n        );\n    }\n}\nexport default class menu extends UIObject<{}, {}, [number | string | number[] | string[], StrictDropdownItemProps[]], [any], [], MenuProps, MenuUIState, { query: number | string | number[] | string[] }> {\n    static description = \"Dropdown Menu\";\n    static inlets: TMeta[\"inlets\"] = [{\n        isHot: true,\n        type: \"anything\",\n        description: \"number or display text or array to select item(s)\"\n    }, {\n        isHot: false,\n        type: \"object\",\n        description: \"Array of DropdownItemProps: { key, icon, text, value, ... }\"\n    }];\n    static outlets: TMeta[\"outlets\"] = [{\n        type: \"anything\",\n        description: \"Selected value\"\n    }];\n    static args: TMeta[\"args\"] = [{\n        type: \"anything\",\n        varLength: true,\n        optional: true,\n        default: undefined,\n        description: \"Initial value(s)\"\n    }];\n    static props: TPropsMeta<MenuProps> = {\n        clearable: {\n            type: \"boolean\",\n            default: false,\n            description: \"Using the clearable setting will let users remove their selection\",\n            isUIState: true\n        },\n        closeOnBlur: {\n            type: \"boolean\",\n            default: true,\n            description: \"Whether or not the menu should close when the dropdown is blurred\",\n            isUIState: true\n        },\n        closeOnChange: {\n            type: \"boolean\",\n            default: undefined,\n            description: \"Whether or not the menu should close when a value is selected\",\n            isUIState: true\n        },\n        closeOnEscape: {\n            type: \"boolean\",\n            default: true,\n            description: \"Whether or not the dropdown should close when the escape key is pressed\",\n            isUIState: true\n        },\n        deburr: {\n            type: \"boolean\",\n            default: false,\n            description: \"Whether or not the dropdown should strip diacritics in options and input search\",\n            isUIState: true\n        },\n        defaultOpen: {\n            type: \"boolean\",\n            default: false,\n            description: \"Initial value of open\",\n            isUIState: true\n        },\n        defaultValue: {\n            type: \"anything\",\n            default: undefined,\n            description: \"Initial value or value array if multiple\",\n            isUIState: true\n        },\n        direction: {\n            type: \"enum\",\n            enums: [\"left\", \"right\"],\n            default: \"left\",\n            description: \"A dropdown menu can open to the left or to the right\",\n            isUIState: true\n        },\n        disabled: {\n            type: \"boolean\",\n            default: false,\n            description: \" A disabled dropdown menu or item does not allow user interaction\",\n            isUIState: true\n        },\n        error: {\n            type: \"boolean\",\n            default: false,\n            description: \"An errored dropdown can alert a user to a problem\",\n            isUIState: true\n        },\n        lazyLoad: {\n            type: \"boolean\",\n            default: false,\n            description: \"A dropdown can defer rendering its options until it is open\",\n            isUIState: true\n        },\n        minCharacters: {\n            type: \"number\",\n            default: 1,\n            description: \"The minimum characters for a search to begin showing results\",\n            isUIState: true\n        },\n        multiple: {\n            type: \"boolean\",\n            default: false,\n            description: \"A selection dropdown can allow multiple selections\",\n            isUIState: true\n        },\n        noResultsMessage: {\n            type: \"string\",\n            default: \"No results found\",\n            description: \"Message to display when there are no results\",\n            isUIState: true\n        },\n        options: {\n            type: \"anything\",\n            default: [],\n            description: \"Array of Dropdown.Item props\",\n            isUIState: true\n        },\n        placeholder: {\n            type: \"string\",\n            default: \"\",\n            description: \"Placeholder text\",\n            isUIState: true\n        },\n        scrolling: {\n            type: \"boolean\",\n            default: false,\n            description: \"A dropdown can have its menu scroll\",\n            isUIState: true\n        },\n        search: {\n            type: \"boolean\",\n            default: false,\n            description: \"A selection dropdown can allow a user to search through a large list of choices\",\n            isUIState: true\n        },\n        selectOnBlur: {\n            type: \"boolean\",\n            default: true,\n            description: \"Whether the highlighted item should be selected on blur\",\n            isUIState: true\n        },\n        selectOnNavigation: {\n            type: \"boolean\",\n            default: true,\n            description: \"Whether dropdown should select new option when using keyboard shortcuts.\",\n            isUIState: true\n        },\n        simple: {\n            type: \"boolean\",\n            default: false,\n            description: \"A dropdown menu can open to the left or to the right\",\n            isUIState: true\n        },\n        tabIndex: {\n            type: \"anything\",\n            default: undefined,\n            description: \"A dropdown can receive focus\",\n            isUIState: true\n        },\n        text: {\n            type: \"string\",\n            default: undefined,\n            description: \"The text displayed in the dropdown, usually for the active item\",\n            isUIState: true\n        },\n        upward: {\n            type: \"boolean\",\n            default: false,\n            description: \"Controls whether the dropdown will open upward\",\n            isUIState: true\n        },\n        wrapSelection: {\n            type: \"boolean\",\n            default: false,\n            description: \"Selection will wrap to end or start on press ArrowUp or ArrowDown\",\n            isUIState: true\n        }\n    };\n    static UI = MenuUI;\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 2;\n            this.outlets = 1;\n        });\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) {\n                this.emit(\"query\", data as number | string | number[] | string[]);\n            } else {\n                const options = data as StrictDropdownItemProps[];\n                this.update(undefined, { options });\n            }\n        });\n    }\n}\n","import * as Util from \"util\";\nimport UIObject from \"./Base\";\nimport ButtonUI from \"./ButtonUI\";\nimport { TMeta } from \"../../types\";\nimport { Bang } from \"../Base\";\nimport { BaseUI } from \"../BaseUI\";\n\nclass MessageUI extends ButtonUI<message> {\n    static editableOnUnlock = true;\n    handleChanged = (text: string) => this.object.handleUpdateArgs([text]);\n    handleClick = (e: React.MouseEvent) => {\n        if (this.editor.state.locked) this.object.outlet(0, this.object.state.buffer);\n    };\n}\nexport default class message extends UIObject<{ text: string }, { buffer: any; editing: boolean }, [any, any], [any], [any], {}, { text: string }> {\n    static description = \"Message\";\n    static inlets: TMeta[\"inlets\"] = [{\n        isHot: true,\n        type: \"anything\",\n        description: \"Trigger output the message\"\n    }, {\n        isHot: false,\n        type: \"anything\",\n        description: \"Set the message\"\n    }];\n    static outlets: TMeta[\"outlets\"] = [{\n        type: \"anything\",\n        description: \"Message to send\"\n    }];\n    state = { buffer: new Bang(), editing: false };\n    handleUpdateArgs = (args: any[]) => {\n        if (typeof args[0] !== \"undefined\") {\n            this.setData({ text: this.stringify(args[0]) });\n            this.state.buffer = this.parse(args[0]);\n        } else {\n            this.state.buffer = new Bang();\n        }\n        this.updateUI({ text: this.data.text });\n    };\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 2;\n            this.outlets = 1;\n        });\n        this.on(\"postInit\", () => {\n            const args = this.box.args;\n            if (typeof this.data.text === \"string\") this.state.buffer = this.parse(this.data.text);\n            else if (typeof args[0] !== \"undefined\") {\n                if (typeof this.data.text !== \"string\") {\n                    this.setData({ text: this.stringify(args[0]) });\n                    this.state.buffer = args[0];\n                }\n            } else {\n                this.setData({ text: \"\" });\n                this.state.buffer = new Bang();\n            }\n            this.on(\"updateArgs\", this.handleUpdateArgs);\n        });\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) this.outlet(0, this.state.buffer);\n            else if (inlet === 1) this.handleUpdateArgs([data]);\n        });\n    }\n    parse(o: any) {\n        if (typeof o === \"string\") {\n            if (o.length > 0) {\n                try {\n                    return JSON.parse(o);\n                } catch (e) {\n                    return o;\n                }\n            }\n            return new Bang();\n        }\n        return o;\n    }\n    stringify(o: any) {\n        if (typeof o === \"string\") return o;\n        try {\n            return JSON.stringify(o);\n        } catch (e) {\n            return Util.inspect(o);\n        }\n    }\n    static UI: typeof BaseUI = MessageUI;\n}\n","import UIObject from \"./Base\";\nimport { DOMUI, DOMUIState } from \"../BaseUI\";\nimport { TMeta, TPropsMeta } from \"../../types\";\nimport { isBang } from \"../Base\";\n\nexport class ViewUI extends DOMUI<view> {\n    state: DOMUIState = { ...this.state, children: this.object.state.children, containerProps: this.object.getProp(\"containerProps\") };\n}\nexport interface ViewProps {\n    shadow: boolean;\n    containerProps: JSX.IntrinsicAttributes & React.ClassAttributes<HTMLDivElement> & React.HTMLAttributes<HTMLDivElement>;\n}\nexport default class view extends UIObject<{}, { children: ChildNode[] }, [string | Element], [], [string], ViewProps, DOMUIState> {\n    static description = \"View HTML Element\";\n    static inlets: TMeta[\"inlets\"] = [{\n        isHot: true,\n        type: \"anything\",\n        description: \"HTML string or HTMLElement object to view\"\n    }];\n    static args: TMeta[\"args\"] = [{\n        type: \"string\",\n        optional: true,\n        description: \"initial innerHTML\"\n    }];\n    static props: TPropsMeta<ViewProps> = {\n        shadow: {\n            type: \"boolean\",\n            default: true,\n            description: \"Whether children should be attached to a Shadow DOM\",\n            isUIState: true\n        },\n        containerProps: {\n            type: \"object\",\n            default: {},\n            description: \"Available under non-shadow mode, the props for div container\",\n            isUIState: true\n        }\n    };\n    static UI = ViewUI;\n    state = { children: [] as ChildNode[] };\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 1;\n            this.outlets = 0;\n        });\n        this.on(\"updateArgs\", (args) => {\n            if (typeof this.box.args[0] === \"string\") {\n                const template = document.createElement(\"template\");\n                template.innerHTML = this.box.args[0];\n                this.state.children = Array.from(template.content.children);\n                this.updateUI({ children: this.state.children });\n            }\n        });\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) {\n                if (!isBang(data)) {\n                    if (typeof data === \"string\") {\n                        const template = document.createElement(\"template\");\n                        template.innerHTML = data;\n                        this.state.children = Array.from(template.content.children);\n                    } else if (data instanceof Element) {\n                        this.state.children = [data];\n                    }\n                    this.updateUI({ children: this.state.children });\n                }\n            }\n        });\n    }\n}\n","import * as Color from \"color-js\";\nimport UIObject from \"./Base\";\nimport PatcherAudio from \"../../audio/PatcherAudio\";\nimport { TAudioUnit, TMeta, TPropsMeta } from \"../../types\";\nimport { CanvasUI, CanvasUIState } from \"../BaseUI\";\nimport { getRuler } from \"../../../components/editors/audio/AudioEditorMainUI\";\nimport { dbtoa } from \"../../../utils/math\";\n\ninterface WaveformState {\n    audio: PatcherAudio;\n}\ninterface WaveformUIProps {\n    interleaved: boolean;\n    cursor: number;\n    viewRange: [number, number];\n    selRange: [number, number];\n    verticalRange: [number, number];\n    autoVerticalRange: boolean;\n    showStats: boolean;\n    bgColor: string;\n    cursorColor: string;\n    phosphorColor: string;\n    hueOffset: number;\n    textColor: string;\n    gridColor: string;\n    seperatorColor: string;\n    audioUnit: TAudioUnit;\n    bpm: number;\n}\ninterface WaveformUIState extends WaveformState, CanvasUIState, WaveformUIProps {}\ntype WaveformProps = WaveformUIProps;\nexport class WaveformUI extends CanvasUI<waveform, {}, WaveformUIState> {\n    static defaultSize = [120, 60] as [number, number];\n    state: WaveformUIState & WaveformState = { ...this.state, audio: this.object.state.audio };\n    async paint() {\n        const {\n            interleaved,\n            cursor,\n            autoVerticalRange,\n            verticalRange,\n            viewRange,\n            showStats,\n            bgColor,\n            cursorColor,\n            phosphorColor,\n            hueOffset,\n            textColor,\n            gridColor,\n            seperatorColor,\n            audioUnit,\n            bpm,\n            audio\n        } = this.state;\n        const { ctx } = this;\n        const [width, height] = this.fullSize();\n\n        ctx.clearRect(0, 0, width, height);\n        ctx.fillStyle = bgColor;\n        ctx.fillRect(0, 0, width, height);\n\n        if (!audio) return;\n\n        const { audioBuffer, waveform, numberOfChannels, length, sampleRate } = audio;\n        const t = audioBuffer.toArray();\n        if (!t.length || !t[0].length) return;\n\n        // View Range\n        let [$0, $1] = viewRange || [0, length];\n        if ($1 < $0) [$0, $1] = [$1, $0];\n        const pixelsPerSamp = width / ($1 - $0);\n        const sampsPerPixel = Math.max(1, Math.round(1 / pixelsPerSamp));\n        // Vertical Range\n        let [yMin, yMax] = autoVerticalRange ? [-1, 1] : verticalRange;\n        if (autoVerticalRange) {\n            // Fastest way to get min and max to have: 1. max abs value for y scaling, 2. mean value for zero-crossing\n            let i = numberOfChannels;\n            let s = 0;\n            while (i--) {\n                let j = viewRange[1];\n                while (j-- > viewRange[0]) {\n                    s = t[i][j];\n                    if (s < yMin) yMin = s;\n                    else if (s > yMax) yMax = s;\n                }\n            }\n            const yFactor = Math.max(1, Math.abs(yMin), Math.abs(yMax));\n            [yMin, yMax] = [-yFactor, yFactor];\n        } else {\n            if (yMax < yMin) [yMin, yMax] = [yMax, yMin];\n        }\n        const calcY = (v: number, i: number) => channelHeight * (+interleaved * i + 1 - (v - yMin) / (yMax - yMin));\n        // Grids\n        const { ruler } = getRuler(viewRange, audioUnit, { bpm, sampleRate });\n        const gridChannels = interleaved ? numberOfChannels : 1;\n        const channelHeight = height / gridChannels;\n        // Vertical\n        ctx.strokeStyle = gridColor;\n        ctx.beginPath();\n        for (const sampleIn in ruler) {\n            const sample = +sampleIn;\n            const x = (sample - $0 + 0.5) * pixelsPerSamp;\n            ctx.moveTo(x, 0);\n            ctx.lineTo(x, height);\n        }\n        ctx.stroke();\n\n        // Horizontal\n        ctx.beginPath();\n        const range = [18, 12, 6, 3, 0, -3, -6, -12, -18].filter(v => dbtoa(v) < Math.max(Math.abs(yMin), Math.abs(yMax)));\n        for (let i = 0; i < gridChannels; i++) {\n            let y = calcY(0, i);\n            ctx.moveTo(0, y);\n            ctx.lineTo(width, y);\n            for (let j = 0; j < range.length; j++) {\n                const a = dbtoa(range[j]);\n                if (a < yMax) {\n                    y = calcY(a, i);\n                    ctx.moveTo(0, y);\n                    ctx.lineTo(width, y);\n                }\n                if (a > yMin) {\n                    y = calcY(-a, i);\n                    ctx.moveTo(0, y);\n                    ctx.lineTo(width, y);\n                }\n            }\n        }\n        ctx.stroke();\n\n        // Seperator\n        ctx.beginPath();\n        ctx.setLineDash([4, 2]);\n        ctx.strokeStyle = seperatorColor;\n        for (let i = 1; i < gridChannels; i++) {\n            ctx.moveTo(0, i * channelHeight);\n            ctx.lineTo(width, i * channelHeight);\n        }\n        ctx.stroke();\n        ctx.setLineDash([]);\n        // Iteration\n        ctx.lineWidth = 1;\n        const channelColor: string[] = [];\n        const currentWaveform = waveform.findStep(sampsPerPixel);\n        for (let i = 0; i < numberOfChannels; i++) {\n            if (interleaved) {\n                ctx.save();\n                const clip = new Path2D();\n                clip.rect(0, i * channelHeight, width, channelHeight);\n                ctx.clip(clip);\n            }\n            ctx.beginPath();\n            channelColor[i] = Color(phosphorColor).shiftHue(i * hueOffset).toHSL();\n            ctx.strokeStyle = channelColor[i];\n            ctx.fillStyle = channelColor[i];\n            if (currentWaveform) {\n                const sampsPerPixel = 1 / pixelsPerSamp;\n                const { idx } = currentWaveform;\n                const { min, max } = currentWaveform[i];\n                let x = 0;\n                let maxInStep;\n                let minInStep;\n                for (let j = 0; j < idx.length - 1; j++) {\n                    const $ = idx[j];\n                    if ($ > $1) break;\n                    const $next = j === idx.length - 1 ? length : idx[j + 1];\n                    if ($next <= $0) continue;\n                    if (typeof maxInStep === \"undefined\") {\n                        maxInStep = max[j];\n                        minInStep = min[j];\n                    } else {\n                        if (min[j] < minInStep) minInStep = min[j];\n                        if (max[j] > maxInStep) maxInStep = max[j];\n                    }\n                    if ($next >= $0 + sampsPerPixel * (x + 1)) {\n                        let y = calcY(maxInStep, i);\n                        if (x === 0) ctx.moveTo(x, y);\n                        else ctx.lineTo(x, y);\n                        if (minInStep !== maxInStep) {\n                            y = calcY(minInStep, i);\n                            ctx.lineTo(x, y);\n                        }\n                        maxInStep = undefined;\n                        x++;\n                    }\n                }\n            } else {\n                let maxInStep;\n                let minInStep;\n                const prev = t[i][$0 - 1] || 0;\n                const prevX = -0.5 * pixelsPerSamp;\n                const prevY = calcY(prev, i);\n                ctx.moveTo(prevX, prevY);\n                for (let j = $0; j < $1; j++) {\n                    const samp = t[i][j];\n                    const $step = (j - $0) % sampsPerPixel;\n                    if ($step === 0) {\n                        maxInStep = samp;\n                        minInStep = samp;\n                    } else {\n                        if (samp > maxInStep) maxInStep = samp;\n                        if (samp < minInStep) minInStep = samp;\n                    }\n                    if ($step === sampsPerPixel - 1) {\n                        const x = (j - $step - $0 + 0.5) * pixelsPerSamp;\n                        let y = calcY(maxInStep, i);\n                        ctx.lineTo(x, y);\n                        if (minInStep !== maxInStep && pixelsPerSamp < 1) {\n                            y = calcY(minInStep, i);\n                            ctx.lineTo(x, y);\n                        }\n                        if (pixelsPerSamp > 10) ctx.fillRect(x - 2, y - 2, 4, 4);\n                    }\n                }\n                const next = t[i][$1] || 0;\n                const nextX = ($1 - $0 + 0.5) * pixelsPerSamp;\n                const nextY = calcY(next, i);\n                ctx.lineTo(nextX, nextY);\n            }\n            ctx.stroke();\n            if (interleaved) ctx.restore();\n        }\n        // cursor\n        if (cursor > $0 && cursor < $1) {\n            ctx.strokeStyle = cursorColor;\n            ctx.lineWidth = 1;\n            ctx.beginPath();\n            const cursorX = (cursor - $0) / ($1 - $0) * width;\n            ctx.moveTo(cursorX, 0);\n            ctx.lineTo(cursorX, height);\n            ctx.stroke();\n        }\n        // Stats\n        if (showStats) {\n            ctx.font = \"bold 12px Consolas, monospace\";\n            ctx.fillStyle = textColor;\n            ctx.textAlign = \"left\";\n            ctx.textBaseline = \"top\";\n            ctx.fillText(yMax.toFixed(2), 2, 2);\n            ctx.textBaseline = \"bottom\";\n            ctx.fillText((yMax).toFixed(2), 2, height - 2);\n        }\n    }\n    componentDidMount() {\n        const { bgColor } = this.state;\n        const ctx = this.ctx;\n        if (!ctx) return;\n        const [width, height] = this.fullSize();\n        // Background\n        ctx.fillStyle = bgColor;\n        ctx.fillRect(0, 0, width, height);\n        this.state.audio?.on(\"changed\", this.schedulePaint);\n        super.componentDidMount();\n    }\n    componentDidUpdate(prevProps: any, prevState: Readonly<WaveformUIState & CanvasUIState>) {\n        if (prevState.audio !== this.state.audio) {\n            prevState.audio?.off(\"changed\", this.schedulePaint);\n            this.state.audio?.on(\"changed\", this.schedulePaint);\n        }\n        super.componentDidUpdate(prevProps, prevState);\n    }\n    componentWillUnmount() {\n        this.state.audio?.off(\"changed\", this.schedulePaint);\n        super.componentWillUnmount();\n    }\n}\nexport default class waveform extends UIObject<{}, WaveformState, [PatcherAudio], [], [], WaveformProps, WaveformUIState> {\n    static description = \"Buffer waveform view\";\n    static inlets: TMeta[\"inlets\"] = [{\n        isHot: false,\n        type: \"object\",\n        description: \"Patcher Audio object (from buffer~)\"\n    }];\n    static props: TPropsMeta<WaveformProps> = {\n        interleaved: {\n            type: \"boolean\",\n            default: false,\n            description: \"Draw channels seperately\",\n            isUIState: true\n        },\n        cursor: {\n            type: \"number\",\n            default: 0,\n            description: \"Display a cursor\",\n            isUIState: true\n        },\n        viewRange: {\n            type: \"object\",\n            default: [0, 1],\n            description: \"Display only a part of the buffer\",\n            isUIState: true\n        },\n        selRange: {\n            type: \"object\",\n            default: null,\n            description: \"Nullable, display selection of a part of the buffer\",\n            isUIState: true\n        },\n        verticalRange: {\n            type: \"object\",\n            default: [-1, 1],\n            description: \"Vertical range\",\n            isUIState: true\n        },\n        autoVerticalRange: {\n            type: \"boolean\",\n            default: true,\n            description: \"Auto adjust vertical range if > 1\",\n            isUIState: true\n        },\n        showStats: {\n            type: \"boolean\",\n            default: true,\n            description: \"Show stats texts\",\n            isUIState: true\n        },\n        bgColor: {\n            type: \"color\",\n            default: \"rgb(40, 40, 40)\",\n            description: \"Background color\",\n            isUIState: true\n        },\n        cursorColor: {\n            type: \"color\",\n            default: \"white\",\n            description: \"Cursor color\",\n            isUIState: true\n        },\n        phosphorColor: {\n            type: \"color\",\n            default: \"hsl(0, 100%, 85%)\",\n            description: \"Phosphor color\",\n            isUIState: true\n        },\n        hueOffset: {\n            type: \"number\",\n            default: 60,\n            description: \"Channel Color Hue offset\",\n            isUIState: true\n        },\n        textColor: {\n            type: \"color\",\n            default: \"#DDDD99\",\n            description: \"Info text color\",\n            isUIState: true\n        },\n        gridColor: {\n            type: \"color\",\n            default: \"#404040\",\n            description: \"Grid color\",\n            isUIState: true\n        },\n        seperatorColor: {\n            type: \"color\",\n            default: \"white\",\n            description: \"Channel seperator color\",\n            isUIState: true\n        },\n        audioUnit: {\n            type: \"enum\",\n            default: \"time\",\n            enums: [\"time\", \"sample\", \"measure\"],\n            description: \"Vertical grid mode\",\n            isUIState: true\n        },\n        bpm: {\n            type: \"number\",\n            default: 60,\n            description: \"If audioUnit is measure, a BPM can be used\",\n            isUIState: true\n        }\n    };\n    static UI = WaveformUI;\n    state: WaveformState = { audio: undefined };\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 1;\n            this.outlets = 0;\n        });\n        this.on(\"inlet\", async ({ data, inlet }) => {\n            if (inlet === 0) {\n                if (data instanceof PatcherAudio) {\n                    this.setState({ audio: data });\n                    this.updateUI(this.state);\n                    this.update(null, { selRange: null, viewRange: [0, data.length], cursor: 0 });\n                } else {\n                    this.error(\"Input data is not PatcherAudio instance\");\n                }\n            }\n        });\n    }\n}\n"],"sourceRoot":""}