{"version":3,"sources":["webpack://JSPatcher/webpack/bootstrap","webpack://JSPatcher/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://JSPatcher/./src/core/objects/dsp/AudioWorklet/TemporalAnalyser.worklet.ts","webpack://JSPatcher/./src/utils/buffer.ts","webpack://JSPatcher/./src/utils/math.ts"],"names":["processorID","TemporalAnalyserProcessor","AudioWorkletProcessor","parameterDescriptors","defaultValue","maxValue","minValue","name","constructor","options","destroyed","window","$","$total","port","onmessage","e","id","data","destroy","message","rms","zcr","buffer","postMessage","map","startPointer","sampleIndex","length","process","inputs","outputs","parameters","input","windowSize","splice","bufferSize","i","channel","Float32Array","oldWindow","oldWindowSize","set","subarray","setBuffer","close","registerProcessor","sum","array","mean","median","Error","sortedArray","slice","sort","maxIndex","index","max","cur","energy","signal","sample","Math","sqrt","lastPositive","positive","centroid","weightedSum","weight","abs","conjugatedCentroid","factor","geometricMean","log","exp","flatness","flux","prev","norm","halfRectify","diff","kurtosis","c1","c2","c3","c4","numerator","denominator","skewness","rolloff","cutoff","threshold","n","element","slope","xSum","x2Sum","ySum","xySum","x","y","spread","to","from","offsetTo","offsetFrom","toLength","fromLength","spillLength","min","spilled","$to","mod","$from","$spillLength","$fromEnd","getSubBuffer","offset","sliceBuffer","fftw2Amp","windowEnergyFactor","amps","real","imag","estimateFreq","sampleRate","indexToFreq","fftBins","round","floor","ceil","toRad","degrees","PI","toMIDI","f","atodb","a","log10","dbtoa","db","iNormExp","normExp"],"mappings":"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","file":"js/ed54ec2e3fc254c8778d.worklet.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./node_modules/babel-loader/lib/index.js!./src/core/objects/dsp/AudioWorklet/TemporalAnalyser.worklet.ts\");\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","// import { RFFT } from \"fftw-js\";\nimport { DataToProcessor, DataFromProcessor, Parameters } from \"./TemporalAnalyser\";\nimport { rms, zcr, setBuffer } from \"../../../../utils/buffer\";\n\nconst processorID = \"__JSPatcher_TemporalAnalyser\";\n\nclass TemporalAnalyserProcessor extends AudioWorkletProcessor<DataToProcessor, DataFromProcessor, Parameters> {\n    static get parameterDescriptors(): AudioWorkletAudioParamDescriptor<Parameters>[] {\n        return [{\n            defaultValue: 1024,\n            maxValue: 2 ** 32,\n            minValue: 128,\n            name: \"windowSize\"\n        }];\n    }\n    destroyed = false;\n    window: Float32Array[] = [];\n    /**\n     * Starting point index of current buffer\n     *\n     * @memberof TemporalAnalyserProcessor\n     */\n    $ = 0;\n    /**\n     * Total samples received\n     *\n     * @memberof TemporalAnalyserProcessor\n     */\n    $total = 0;\n    constructor(options: AudioWorkletNodeOptions) {\n        super(options);\n        this.port.onmessage = (e) => {\n            const { id } = e.data;\n            if (e.data.destroy) this.destroy();\n            const message = {} as DataFromProcessor;\n            if (e.data.rms) message.rms = this.rms;\n            if (e.data.zcr) message.zcr = this.zcr;\n            if (e.data.buffer) message.buffer = this.buffer;\n            this.port.postMessage({ id, ...message });\n        };\n    }\n    get rms() {\n        return this.window.map(rms);\n    }\n    get zcr() {\n        return this.window.map(zcr);\n    }\n    get buffer() {\n        const data = this.window;\n        return { data, startPointer: this.$, sampleIndex: data.length ? this.$total - data[0].length : 0 };\n    }\n    process(inputs: Float32Array[][], outputs: Float32Array[][], parameters: { [key in Parameters]: Float32Array }) {\n        if (this.destroyed) return false;\n        const input = inputs[0];\n        const windowSize = ~~parameters.windowSize[0] || 1024;\n        this.$ %= windowSize;\n        if (this.window.length > input.length) this.window.splice(input.length);\n        if (input.length === 0) return true;\n        const bufferSize = input[0].length || 128;\n        this.$total += bufferSize;\n        for (let i = 0; i < input.length; i++) {\n            let channel = input[i];\n            if (!channel.length) channel = new Float32Array(bufferSize);\n            if (!this.window[i]) {\n                this.window[i] = new Float32Array(windowSize);\n            } else if (this.window[i].length !== windowSize) {\n                const oldWindow = this.window[i];\n                const oldWindowSize = oldWindow.length;\n                const window = new Float32Array(windowSize);\n                if (oldWindowSize > windowSize) {\n                    window.set(oldWindow.subarray(oldWindowSize - windowSize));\n                    this.$ = 0;\n                } else {\n                    window.set(oldWindow);\n                }\n                this.window[i] = window;\n            }\n            const window = this.window[i];\n            let $ = this.$;\n            if (bufferSize > windowSize) {\n                window.set(channel.subarray(bufferSize - windowSize));\n                $ = 0;\n            } else {\n                setBuffer(window, channel, $);\n                $ = ($ + bufferSize) % windowSize;\n            }\n            if (i === input.length - 1) this.$ = $;\n        }\n        return true;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.port.close();\n        this.window = [];\n    }\n}\nregisterProcessor(processorID, TemporalAnalyserProcessor);\n","import { mod } from \"./math\";\n\ntype TypedArray = Int8Array | Uint8Array | Int16Array | Uint16Array | Int32Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array;\ntype TypedArrayConstructor = typeof Int8Array | typeof Uint8Array | typeof Int16Array | typeof Uint16Array | typeof Int32Array | typeof Uint32Array | typeof Uint8ClampedArray | typeof Float32Array | typeof Float64Array;\nexport const sum = (array: TypedArray | number[]) => {\n    let sum = 0;\n    for (let i = 0; i < array.length; i++) {\n        sum += array[i];\n    }\n    return sum;\n};\nexport const mean = (array: TypedArray | number[]) => sum(array) / array.length;\nexport const median = (array: TypedArray | number[]) => {\n    const length = array.length;\n    if (length === 0) throw new Error(\"trying to calculate median of empty array\");\n    const sortedArray = array.slice().sort();\n    if (length % 2 === 0) return (sortedArray[length / 2 - 1] + sortedArray[length / 2]) / 2;\n    return sortedArray[~~(length / 2)];\n};\nexport const maxIndex = (array: TypedArray | number[]) => {\n    if (!array.length) return 0;\n    let index = 0;\n    let max = array[0];\n    let i = array.length;\n    while (i-- > 1) {\n        const cur = array[i];\n        if (cur <= max) continue;\n        max = cur;\n        index = i;\n    }\n    return index;\n};\nexport const energy = (signal: TypedArray | number[]) => {\n    let sum = 0;\n    let sample = 0;\n    for (let i = 0; i < signal.length; i++) {\n        sample = signal[i];\n        sum += sample * sample;\n    }\n    return sum;\n};\nexport const rms = (signal: TypedArray | number[]) => Math.sqrt(energy(signal) / signal.length);\nexport const zcr = (signal: TypedArray | number[]) => {\n    let zcr = 0;\n    let lastPositive = true;\n    let positive = true;\n    for (let i = 0; i < signal.length; i++) {\n        positive = signal[i] >= 0;\n        if (positive !== lastPositive) zcr++;\n        lastPositive = positive;\n    }\n    return zcr;\n};\nexport const centroid = (array: TypedArray | number[]) => {\n    let weightedSum = 0;\n    let weight = 0;\n    for (let i = 0; i < array.length; i++) {\n        weightedSum += i * Math.abs(array[i]);\n        weight += array[i];\n    }\n    return weight === 0 ? 0 : weightedSum / weight;\n};\nexport const conjugatedCentroid = (array: TypedArray | number[], factor: number) => {\n    let weightedSum = 0;\n    let weight = 0;\n    for (let i = 0; i < array.length; i++) {\n        weightedSum += (i ** factor) * Math.abs(array[i]);\n        weight += array[i];\n    }\n    return weight === 0 ? 0 : weightedSum / weight;\n};\nexport const geometricMean = (array: TypedArray | number[]) => {\n    const length = array.length;\n    let sum = 0;\n    let sample = 0;\n    for (let i = 0; i < length; i++) {\n        sample = array[i];\n        if (sample <= 0) return 0;\n        sum += Math.log(array[i]);\n    }\n    return Math.exp(sum / length);\n};\nexport const flatness = (array: TypedArray | number[]) => geometricMean(array) / mean(array);\n/**\n * https://essentia.upf.edu/reference/std_Flux.html\n *\n * @param {TypedArray} cur\n * @param {TypedArray} prev\n * @param {(\"L1\" | \"L2\")} [norm]\n * @param {boolean} [halfRectify]\n * @returns\n */\nexport const flux = (cur: TypedArray | number[], prev: TypedArray | number[], norm?: \"L1\" | \"L2\", halfRectify?: boolean) => {\n    let flux = 0;\n    if (norm === \"L2\") {\n        if (halfRectify === true) { // L2 + halfRectify\n            for (let i = 0; i < cur.length; i++) {\n                const diff = cur[i] - prev[i];\n                if (diff < 0) continue;\n                flux += diff * diff;\n            }\n            return Math.sqrt(flux);\n        }\n        for (let i = 0; i < cur.length; i++) { // L2 not halfRectify\n            const diff = cur[i] - prev[i];\n            flux += diff * diff;\n        }\n        return Math.sqrt(flux);\n    }\n    if (halfRectify === true) { // L1 + halfRectify\n        for (let i = 0; i < cur.length; i++) {\n            const diff = cur[i] - prev[i];\n            if (diff < 0) continue;\n            flux += diff;\n        }\n        return flux;\n    }\n    for (let i = 0; i < cur.length; i++) { // L1 not halfRectify\n        const diff = cur[i] - prev[i];\n        flux += Math.abs(diff);\n    }\n    return flux;\n};\n/**\n * https://github.com/meyda/meyda/blob/master/src/extractors/spectralKurtosis.js\n *\n * @param {TypedArray} array\n */\nexport const kurtosis = (array: TypedArray | number[]) => {\n    const c1 = centroid(array);\n    const c2 = conjugatedCentroid(array, 2);\n    const c3 = conjugatedCentroid(array, 3);\n    const c4 = conjugatedCentroid(array, 4);\n    const numerator = -3 * c1 ** 4 + 6 * c1 * c2 - 4 * c1 * c3 + c4;\n    const denominator = (c2 - c1 ** 2) ** 2;\n    return numerator / denominator;\n};\n/**\n * https://github.com/meyda/meyda/blob/master/src/extractors/spectralSkewness.js\n *\n * @param {TypedArray} array\n */\nexport const skewness = (array: TypedArray | number[]) => {\n    const c1 = centroid(array);\n    const c2 = conjugatedCentroid(array, 2);\n    const c3 = conjugatedCentroid(array, 3);\n    const numerator = 2 * c1 ** 3 - 3 * c1 * c2 + c3;\n    const denominator = (c2 - c1 ** 2) ** 1.5;\n    return numerator / denominator;\n};\n/**\n * https://essentia.upf.edu/reference/std_RollOff.html\n *\n * @param {TypedArray} array\n * @param {number} [cutoff] Between 0 - 1\n * @returns\n */\nexport const rolloff = (array: TypedArray | number[], cutoff?: number) => {\n    const length = array.length;\n    let e = energy(array);\n    const threshold = (cutoff || 0.99) * e;\n    let n = length - 1;\n    while (e > threshold && n >= 0) {\n        const element = array[n];\n        e -= element * element;\n        --n;\n    }\n    return n + 1;\n};\nexport const slope = (array: TypedArray | number[]) => {\n    const n = array.length;\n    const xSum = n * n / 2;\n    const x2Sum = (n - 1) * n * (2 * n - 1) / 6;\n    let ySum = 0;\n    let xySum = 0;\n    for (let x = 0; x < n; x++) {\n        const y = array[x];\n        ySum += y;\n        xySum += x * y;\n    }\n    return (n * xySum - xSum * ySum) / (n * x2Sum - xSum * xSum);\n};\nexport const spread = (array: TypedArray | number[]) => Math.sqrt(conjugatedCentroid(array, 2)) - centroid(array) ** 2;\n// eslint-disable-next-line arrow-parens\nexport const setBuffer = <T extends TypedArray = TypedArray>(to: T, from: T, offsetTo?: number, offsetFrom?: number) => {\n    const toLength = to.length;\n    const fromLength = from.length;\n    const spillLength = Math.min(toLength, fromLength);\n    let spilled = 0;\n    let $to = mod(offsetTo, toLength) || 0;\n    let $from = mod(offsetFrom, fromLength) || 0;\n    while (spilled < spillLength) {\n        const $spillLength = Math.min(spillLength - spilled, toLength - $to, fromLength - $from);\n        const $fromEnd = $from + $spillLength;\n        if ($from === 0 && $fromEnd === fromLength) to.set(from, $to);\n        to.set(from.subarray($from, $fromEnd), $to);\n        $to %= $to + $spillLength;\n        $from %= $fromEnd;\n        spilled += $spillLength;\n    }\n    return to;\n};\n// eslint-disable-next-line arrow-parens\nexport const getSubBuffer = <T extends TypedArray = TypedArray>(from: T, length: number, offset?: number) => {\n    const fromLength = from.length;\n    const $ = mod(offset, fromLength) || 0;\n    if ($ === 0 && length === fromLength) return from;\n    if ($ + length < fromLength) return from.subarray($, $ + length) as T;\n    const to = new (from.constructor as TypedArrayConstructor)(length);\n    return setBuffer(to, from, 0, $) as T;\n};\n// eslint-disable-next-line arrow-parens\nexport const sliceBuffer = <T extends TypedArray = TypedArray>(from: T, length: number, offset?: number) => {\n    const fromLength = from.length;\n    const $ = mod(offset, fromLength) || 0;\n    if ($ === 0 && length === fromLength) return from.slice();\n    if ($ + length < fromLength) return from.slice($, $ + length) as T;\n    const to = new (from.constructor as TypedArrayConstructor)(length);\n    return setBuffer(to, from, 0, $) as T;\n};\n/**\n * http://www.fftw.org/fftw3_doc/The-Halfcomplex_002dformat-DFT.html\n *\n * @param {Float32Array} from\n */\nexport const fftw2Amp = (from: Float32Array, windowEnergyFactor: number) => {\n    const { length } = from;\n    const amps = new Float32Array(length / 2);\n    for (let i = 0; i < length / 2; i++) {\n        const real = from[i];\n        const imag = (i === 0 || i === length / 2 - 1) ? 0 : from[length - i];\n        amps[i] = (real * real + imag * imag) ** 0.5 / length * windowEnergyFactor;\n    }\n    return amps;\n};\nexport const estimateFreq = (amps: Float32Array, sampleRate: number) => indexToFreq(maxIndex(amps), amps.length, sampleRate);\nexport const indexToFreq = (i: number, fftBins: number, sampleRate: number) => (i % fftBins) / fftBins * sampleRate / 2;\n","/**\n * Mod support wrapping with negative numbers\n *\n * @param {number} x\n * @param {number} y\n */\nexport const mod = (x: number, y: number) => (x % y + y) % y;\n/**\n * Round a number to multiple of another\n *\n * @param {number} x\n * @param {number} to\n * @returns\n */\nexport const round = (x: number, to: number) => Math.round(x / to) * to;\n/**\n * Floor a number to multiple of another\n *\n * @param {number} x\n * @param {number} to\n * @returns\n */\nexport const floor = (x: number, to: number) => Math.floor(x / to) * to;\n/**\n * Ceil a number to multiple of another\n *\n * @param {number} x\n * @param {number} to\n * @returns\n */\nexport const ceil = (x: number, to: number) => Math.ceil(x / to) * to;\nexport const toRad = (degrees: number) => degrees * Math.PI / 180;\nexport const toMIDI = (f: number) => [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"][(f % 12 + 12) % 12] + Math.round(f / 12 - 2);\nexport const atodb = (a: number) => 20 * Math.log10(a);\nexport const dbtoa = (db: number) => 10 ** (db / 20);\nexport const iNormExp = (x: number, e: number) => Math.max(0, x) ** (1.5 ** -e);\nexport const normExp = (x: number, e: number) => Math.max(0, x) ** (1.5 ** e);\n"],"sourceRoot":""}