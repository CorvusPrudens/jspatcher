{"version":3,"sources":["webpack://JSPatcher/./src/core/worklets/AudioWorkletProxyProcessor.ts","webpack://JSPatcher/./src/core/worklets/Transmitter.worklet.ts","webpack://JSPatcher/./src/utils/buffer.ts","webpack://JSPatcher/./src/utils/math.ts","webpack://JSPatcher/./src/utils/utils.ts","webpack://JSPatcher/webpack/bootstrap","webpack://JSPatcher/webpack/runtime/define property getters","webpack://JSPatcher/webpack/runtime/hasOwnProperty shorthand","webpack://JSPatcher/webpack/runtime/make namespace object","webpack://JSPatcher/webpack/startup"],"names":["AudioWorkletProcessor","globalThis","Processor","fnNames","constructor","options","resolves","rejects","messagePortRequestId","handleDisposed","port","removeEventListener","handleMessage","close","e","id","call","args","value","error","data","r","postMessage","_disposed","Promise","resolve","reject","Ctor","forEach","name","start","addEventListener","processorID","registerProcessor","TransmitterProcessor","AudioWorkletProxyProcessor","enabled","stop","reset","$","$total","destroy","destroyed","windowSize","_windowSize","sizeIn","Math","min","max","process","inputs","outputs","input","window","length","splice","bufferSize","map","c","i","Float32Array","channel","setTypedArray","setBuffer","buffer","console","warn","sum","array","from","l","mean","median","Error","sortedArray","Array","isArray","slice","concat","sliceBuffer","sort","maxIndex","index","cur","energy","signal","sample","rms","sqrt","absMax","abs","zcr","lastPositive","positive","centroid","weightedSum","weight","conjugatedCentroid","factor","geometricMean","log","exp","flatness","flux","prev","norm","halfRectify","diff","kurtosis","c1","c2","c3","c4","numerator","denominator","skewness","rolloff","cutoff","threshold","n","element","slope","xSum","x2Sum","ySum","xySum","y","x","spread","to","offsetTo","offsetFrom","toLength","fromLength","spillLength","spilled","$to","mod","$from","$spillLength","$fromEnd","set","subarray","getSubTypedArray","offset","fftw2Amp","windowEnergyFactor","amps","real","imag","estimateFreq","sampleRate","indexToFreq","fftBins","round","floor","ceil","toRad","degrees","PI","toMIDI","f","atodb","a","log10","dbtoa","db","iNormExp","normExp","scale","l1","h1","l2","h2","r1","r2","scaleClip","isIdentityMatrix","every","row","isNumberArray","j","identityMatrix","dim","fill","undefined","isStringArray","isTRect","isTPresentationRect","v","isRectMovable","isRectResizable","isMIDIEvent","Uint8Array","stringifyError","message","JSON","stringify","parseToPrimitive","parse","toString","rgbaMax2Css","maxColor","cssColor","join","css2RgbaMax","color","matched","match","split","s","decodeBPF","sIn","tupleLength","numbers","filter","find","isFinite","tuples","$tuple","decodeCurve","decodeLine","detectOS","appVersion","navigator","indexOf","detectBrowserCore","chrome","InstallTrigger","roundedRect","ctx","width","height","radius","radii","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","stroke","fillRoundedRect","selectElementRange","elementIsEditable","nodeName","selection","getSelection","focus","select","setBaseAndExtent","hasChildNodes","addRange","removeAllRanges","document","createRange","range","selectNodeContents","selectElementPos","pos","setStart","childNodes","collapse","findFromAscendants","predict","ascendants","parent","parentElement","body","push","getPropertyDescriptor","obj","key","Object","getOwnPropertyDescriptor","getPrototypeOf","getPropertyDescriptors","getOwnPropertyDescriptors","proto","prototype","assign","extToType","ext","max2js","patcherIn","mode","patcher","boxes","lines","maxPatcher","props","bgColor","bgcolor","editingBgColor","editing_bgcolor","dependencies","grid","gridsize","openInPresentation","openinpresentation","maxBoxes","maxLines","maxBox","box","numID","parseInt","inlets","numinlets","outlets","numoutlets","rect","patching_rect","presentationRect","presentation_rect","background","presentation","text","maxclass","lineArgs","patchline","src","source","replace","dest","destination","js2max","line","convertSampleToUnit","unit","bpm","beatsPerMeasure","division","str","values","milliseconds","roundedMs","dpms","totalDivisions","roundedTotalDivisions","divisions","beats","measure","padStart","ms","h","MEASURE_UNIT_REGEX","TIME_UNIT_REGEX","convertUnitToSample","measureIn","beatsIn","divisionsIn","bps","samplesPerBeat","measures","hIn","minIn","msIn"],"mappings":"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","file":"js/ef79077262b42c8459ac.worklet.js","sourcesContent":["import { AudioWorkletGlobalScope, MessagePortRequest, MessagePortResponse, TypedMessageEvent } from \"./TypedAudioWorklet\";\nimport { AudioWorkletProxyProcessor } from \"./AudioWorkletProxyProcessor.types\";\n\ndeclare const globalThis: AudioWorkletGlobalScope;\nconst { AudioWorkletProcessor } = globalThis;\n\nconst Processor = class extends AudioWorkletProcessor {\n    static get fnNames(): string[] {\n        return [];\n    }\n    _disposed = false;\n    constructor(options: AudioWorkletNodeOptions) {\n        super(options);\n        const resolves: Record<number, ((...args: any[]) => any)> = {};\n        const rejects: Record<number, ((...args: any[]) => any)> = {};\n        let messagePortRequestId = -1;\n        const handleDisposed = () => {\n            this.port.removeEventListener(\"message\", handleMessage);\n            this.port.close();\n        };\n        const handleMessage = async (e: TypedMessageEvent<MessagePortResponse & MessagePortRequest>) => {\n            const { id, call, args, value, error } = e.data;\n            if (call) {\n                const r: MessagePortResponse = { id };\n                try {\n                    r.value = await (this as any)[call](...args);\n                } catch (e) {\n                    r.error = e;\n                }\n                this.port.postMessage(r as any);\n                if (this._disposed) handleDisposed();\n            } else {\n                if (error) {\n                    if (rejects[id]) rejects[id](error);\n                    delete rejects[id];\n                    return;\n                }\n                if (resolves[id]) {\n                    resolves[id](value);\n                    delete resolves[id];\n                }\n            }\n        };\n        const call = (call: string, ...args: any[]) => new Promise<any>((resolve, reject) => {\n            const id = messagePortRequestId--;\n            resolves[id] = resolve;\n            rejects[id] = reject;\n            this.port.postMessage({ id, call, args });\n        });\n        const Ctor = (this.constructor as typeof AudioWorkletProxyProcessor);\n        Ctor.fnNames.forEach(name => (this as any)[name] = (...args: any[]) => call(name, ...args));\n        this.port.start();\n        this.port.addEventListener(\"message\", handleMessage);\n    }\n} as typeof AudioWorkletProxyProcessor;\n\nexport default Processor;\n","import { setTypedArray } from \"../../utils/buffer\";\nimport { AudioWorkletGlobalScope } from \"./TypedAudioWorklet\";\nimport { ITransmitterProcessor, ITransmitterNode, TransmitterParameters } from \"./TransmitterWorklet.types\";\nimport AudioWorkletProxyProcessor from \"./AudioWorkletProxyProcessor\";\n\nconst processorID = \"__JSPatcher_Transmitter\";\ndeclare const globalThis: AudioWorkletGlobalScope;\nconst { registerProcessor } = globalThis;\n\nclass TransmitterProcessor extends AudioWorkletProxyProcessor<ITransmitterProcessor, ITransmitterNode, TransmitterParameters> implements ITransmitterProcessor {\n    static fnNames: (keyof ITransmitterNode)[] = [\"setBuffer\"];\n    private destroyed = false;\n    private readonly window: Float32Array[] = [];\n    enabled = false;\n    $ = 0;\n    $total = 0;\n    private _windowSize = 1024;\n\n    start() {\n        this.enabled = true;\n    }\n    stop() {\n        this.enabled = false;\n    }\n    reset() {\n        this.$ = 0;\n        this.$total = 0;\n    }\n    destroy() {\n        this.destroyed = true;\n        this._disposed = true;\n    }\n    get windowSize() {\n        return this._windowSize;\n    }\n    set windowSize(sizeIn: number) {\n        this._windowSize = ~~Math.min(2 ** 32, Math.max(128, sizeIn || 1024));\n    }\n    process(inputs: Float32Array[][], outputs: Float32Array[][]) {\n        if (this.destroyed) return false;\n        if (!this.enabled) return true;\n        const input = inputs[0];\n        const { windowSize } = this;\n\n        if (this.window.length > input.length) { // Too much channels ?\n            this.window.splice(input.length);\n        }\n        if (input.length === 0) return true;\n\n        const bufferSize = Math.max(...input.map(c => c.length)) || 128;\n        this.$total += bufferSize;\n        // Init windows\n        for (let i = 0; i < input.length; i++) {\n            if (!this.window[i]) { // Initialise channel if not exist\n                this.window[i] = new Float32Array(windowSize);\n            }\n        }\n        let { $ } = this;\n        // Write\n        for (let i = 0; i < input.length; i++) {\n            const window = this.window[i];\n            const channel = input[i].length ? input[i] : new Float32Array(bufferSize);\n            $ = setTypedArray(window, channel, this.$);\n        }\n        this.$ = $;\n        if ($ === 0) {\n            this.setBuffer({ buffer: this.window, $total: this.$total });\n        }\n        return true;\n    }\n}\ntry {\n    registerProcessor(processorID, TransmitterProcessor);\n} catch (error) {\n    // eslint-disable-next-line no-console\n    console.warn(error);\n}\n","import { mod } from \"./math\";\n\ntype TypedArray = Int8Array | Uint8Array | Int16Array | Uint16Array | Int32Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array;\ntype TypedArrayConstructor = typeof Int8Array | typeof Uint8Array | typeof Int16Array | typeof Uint16Array | typeof Int32Array | typeof Uint32Array | typeof Uint8ClampedArray | typeof Float32Array | typeof Float64Array;\nexport const sum = (array: TypedArray | number[], from = 0, length = array.length) => {\n    let sum = 0;\n    const l = array.length;\n    for (let i = 0; i < length; i++) {\n        sum += array[(from + i) % l];\n    }\n    return sum;\n};\nexport const mean = (array: TypedArray | number[], from = 0, length = array.length) => sum(array, from, length) / length;\nexport const median = (array: TypedArray | number[], from = 0, length = array.length) => {\n    if (length === 0) throw new Error(\"trying to calculate median of empty array\");\n    const sortedArray = (from + length > array.length ? Array.isArray(array) ? array.slice(from).concat(array.slice(0, from + length - array.length)) : sliceBuffer(array, length, from) : array.slice(from, from + length)).sort();\n    if (length % 2 === 0) return (sortedArray[length / 2 - 1] + sortedArray[length / 2]) / 2;\n    return sortedArray[~~(length / 2)];\n};\nexport const maxIndex = (array: TypedArray | number[], from = 0, length = array.length) => {\n    const l = array.length;\n    if (!l) return 0;\n    let index = 0;\n    let max = array[0];\n    let i = length;\n    while (i-- > 1) {\n        const cur = array[(from + i) % l];\n        if (cur <= max) continue;\n        max = cur;\n        index = i;\n    }\n    return index;\n};\nexport const energy = (signal: TypedArray | number[], from = 0, length = signal.length) => {\n    let sum = 0;\n    let sample = 0;\n    const l = signal.length;\n    for (let i = 0; i < length; i++) {\n        sample = signal[(from + i) % l];\n        sum += sample * sample;\n    }\n    return sum;\n};\nexport const rms = (signal: TypedArray | number[], from = 0, length = signal.length) => Math.sqrt(energy(signal, from, length) / signal.length);\nexport const absMax = (signal: TypedArray | number[], from = 0, length = signal.length) => {\n    let max = 0;\n    let sample = 0;\n    const l = signal.length;\n    for (let i = 0; i < length; i++) {\n        sample = Math.abs(signal[(from + i) % l]);\n        if (sample > max) max = sample;\n    }\n    return max;\n};\nexport const zcr = (signal: TypedArray | number[], from = 0, length = signal.length) => {\n    let zcr = 0;\n    let lastPositive = true;\n    let positive = true;\n    const l = signal.length;\n    for (let i = 0; i < length; i++) {\n        positive = signal[(from + i) % l] >= 0;\n        if (positive !== lastPositive) zcr++;\n        lastPositive = positive;\n    }\n    return zcr;\n};\nexport const centroid = (array: TypedArray | number[], from = 0, length = array.length) => {\n    let weightedSum = 0;\n    let weight = 0;\n    let sample = 0;\n    const l = array.length;\n    for (let i = 0; i < length; i++) {\n        sample = array[(from + i) % l];\n        weightedSum += i * Math.abs(sample);\n        weight += sample;\n    }\n    return weight === 0 ? 0 : weightedSum / weight;\n};\nexport const conjugatedCentroid = (array: TypedArray | number[], factor: number, from = 0, length = array.length) => {\n    let weightedSum = 0;\n    let weight = 0;\n    let sample = 0;\n    const l = array.length;\n    for (let i = 0; i < length; i++) {\n        sample = array[(from + i) % l];\n        weightedSum += (i ** factor) * Math.abs(sample);\n        weight += sample;\n    }\n    return weight === 0 ? 0 : weightedSum / weight;\n};\nexport const geometricMean = (array: TypedArray | number[], from = 0, length = array.length) => {\n    let sum = 0;\n    let sample = 0;\n    const l = array.length;\n    for (let i = 0; i < length; i++) {\n        sample = array[(from + i) % l];\n        if (sample <= 0) return 0;\n        sum += Math.log(sample);\n    }\n    return Math.exp(sum / length);\n};\nexport const flatness = (array: TypedArray | number[], from = 0, length = array.length) => geometricMean(array, from, length) / mean(array, from, length);\n/**\n * https://essentia.upf.edu/reference/std_Flux.html\n */\nexport const flux = (cur: TypedArray | number[], prev: TypedArray | number[], norm?: \"L1\" | \"L2\", halfRectify?: boolean) => {\n    let flux = 0;\n    if (norm === \"L2\") {\n        if (halfRectify === true) { // L2 + halfRectify\n            for (let i = 0; i < cur.length; i++) {\n                const diff = cur[i] - prev[i];\n                if (diff < 0) continue;\n                flux += diff * diff;\n            }\n            return Math.sqrt(flux);\n        }\n        for (let i = 0; i < cur.length; i++) { // L2 not halfRectify\n            const diff = cur[i] - prev[i];\n            flux += diff * diff;\n        }\n        return Math.sqrt(flux);\n    }\n    if (halfRectify === true) { // L1 + halfRectify\n        for (let i = 0; i < cur.length; i++) {\n            const diff = cur[i] - prev[i];\n            if (diff < 0) continue;\n            flux += diff;\n        }\n        return flux;\n    }\n    for (let i = 0; i < cur.length; i++) { // L1 not halfRectify\n        const diff = cur[i] - prev[i];\n        flux += Math.abs(diff);\n    }\n    return flux;\n};\n/**\n * https://github.com/meyda/meyda/blob/master/src/extractors/spectralKurtosis.js=\n */\nexport const kurtosis = (array: TypedArray | number[], from = 0, length = array.length) => {\n    const c1 = centroid(array, from, length);\n    const c2 = conjugatedCentroid(array, 2, from, length);\n    const c3 = conjugatedCentroid(array, 3, from, length);\n    const c4 = conjugatedCentroid(array, 4, from, length);\n    const numerator = -3 * c1 ** 4 + 6 * c1 * c2 - 4 * c1 * c3 + c4;\n    const denominator = (c2 - c1 ** 2) ** 2;\n    return numerator / denominator;\n};\n/**\n * https://github.com/meyda/meyda/blob/master/src/extractors/spectralSkewness.js\n */\nexport const skewness = (array: TypedArray | number[], from = 0, length = array.length) => {\n    const c1 = centroid(array, from, length);\n    const c2 = conjugatedCentroid(array, 2, from, length);\n    const c3 = conjugatedCentroid(array, 3, from, length);\n    const numerator = 2 * c1 ** 3 - 3 * c1 * c2 + c3;\n    const denominator = (c2 - c1 ** 2) ** 1.5;\n    return numerator / denominator;\n};\n/**\n * https://essentia.upf.edu/reference/std_RollOff.html\n *\n * @param {TypedArray} array\n * @param {number} [cutoff] Between 0 - 1\n * @returns\n */\nexport const rolloff = (array: TypedArray | number[], from = 0, length = array.length, cutoff?: number) => {\n    let e = energy(array, from, length);\n    const threshold = (cutoff || 0.99) * e;\n    let n = length - 1;\n    let element;\n    while (e > threshold && n >= 0) {\n        element = array[(n + from) % length];\n        e -= element * element;\n        --n;\n    }\n    return n + 1;\n};\nexport const slope = (array: TypedArray | number[], from = 0, n = array.length) => {\n    const xSum = n * n / 2;\n    const x2Sum = (n - 1) * n * (2 * n - 1) / 6;\n    let ySum = 0;\n    let xySum = 0;\n    let y;\n    for (let x = 0; x < n; x++) {\n        y = array[(x + from) % n];\n        ySum += y;\n        xySum += x * y;\n    }\n    return (n * xySum - xSum * ySum) / (n * x2Sum - xSum * xSum);\n};\nexport const spread = (array: TypedArray | number[], from = 0, length = array.length) => Math.sqrt(conjugatedCentroid(array, 2, from, length)) - centroid(array, from, length) ** 2;\n/**\n * Copy buffer to another, support negative offset index\n */\nexport const setTypedArray = <T extends TypedArray = TypedArray>(to: T, from: T, offsetTo?: number, offsetFrom?: number) => {\n    const toLength = to.length;\n    const fromLength = from.length;\n    const spillLength = Math.min(toLength, fromLength);\n    let spilled = 0;\n    let $to = mod(offsetTo, toLength) || 0;\n    let $from = mod(offsetFrom, fromLength) || 0;\n    while (spilled < spillLength) {\n        const $spillLength = Math.min(spillLength - spilled, toLength - $to, fromLength - $from);\n        const $fromEnd = $from + $spillLength;\n        if ($from === 0 && $fromEnd === fromLength) to.set(from, $to);\n        else to.set(from.subarray($from, $fromEnd), $to);\n        $to = ($to + $spillLength) % toLength;\n        $from = $fromEnd % fromLength;\n        spilled += $spillLength;\n    }\n    return $to;\n};\n\nexport const getSubTypedArray = <T extends TypedArray = TypedArray>(from: T, length: number, offset = 0) => {\n    const fromLength = from.length;\n    const $ = mod(offset, fromLength) || 0;\n    if ($ === 0 && length === fromLength) return from;\n    if ($ + length < fromLength) return from.subarray($, $ + length) as T;\n    const to = new (from.constructor as TypedArrayConstructor)(length) as T;\n    setTypedArray(to, from, 0, $);\n    return to;\n};\n\nexport const sliceBuffer = <T extends TypedArray = TypedArray>(from: T, length: number, offset?: number) => {\n    const fromLength = from.length;\n    const $ = mod(offset, fromLength) || 0;\n    if ($ === 0 && length === fromLength) return from.slice();\n    if ($ + length < fromLength) return from.slice($, $ + length) as T;\n    const to = new (from.constructor as TypedArrayConstructor)(length) as T;\n    setTypedArray(to, from, 0, $);\n    return to;\n};\n/**\n * http://www.fftw.org/fftw3_doc/The-Halfcomplex_002dformat-DFT.html\n */\nexport const fftw2Amp = (from: Float32Array, windowEnergyFactor: number) => {\n    const { length } = from;\n    const amps = new Float32Array(length / 2);\n    for (let i = 0; i < length / 2; i++) {\n        const real = from[i];\n        const imag = (i === 0 || i === length / 2 - 1) ? 0 : from[length - i];\n        amps[i] = (real * real + imag * imag) ** 0.5 / length * windowEnergyFactor;\n    }\n    return amps;\n};\nexport const estimateFreq = (amps: Float32Array, sampleRate: number) => indexToFreq(maxIndex(amps), amps.length, sampleRate);\nexport const indexToFreq = (i: number, fftBins: number, sampleRate: number) => (i % fftBins) / fftBins * sampleRate / 2;\n","import { isNumberArray } from \"./utils\";\n\n/**\n * Mod support wrapping with negative numbers\n */\nexport const mod = (x: number, y: number): number => (x % y + y) % y;\n/**\n * Round a number to multiple of another\n */\nexport const round = (x: number, to: number): number => (Math.abs(to) < 1 ? Math.round(x * (1 / to)) / (1 / to) : Math.round(x / to) * to);\n/**\n * Floor a number to multiple of another\n */\nexport const floor = (x: number, to: number): number => (Math.abs(to) < 1 ? Math.floor(x * (1 / to)) / (1 / to) : Math.floor(x / to) * to);\n/**\n * Ceil a number to multiple of another\n */\nexport const ceil = (x: number, to: number): number => (Math.abs(to) < 1 ? Math.ceil(x * (1 / to)) / (1 / to) : Math.ceil(x / to) * to);\n/**\n * Degree to radian\n */\nexport const toRad = (degrees: number): number => degrees * Math.PI / 180;\n/**\n * MIDI note number to string\n */\nexport const toMIDI = (f: number): string => [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"][(f % 12 + 12) % 12] + Math.round(f / 12 - 2);\n/**\n * Linear amplitude ([0, 1]) to dB ([-Inf, 0])\n *\n * @param {number} a linear amplitude value\n * @returns {number} dB value\n */\nexport const atodb = (a: number): number => 20 * Math.log10(a);\n/**\n * dB ([-Inf, 0]) to Linear mplitude ([0, 1])\n *\n * @param {number} db dB value\n * @returns {number} linear amplitude value\n */\nexport const dbtoa = (db: number): number => 10 ** (db / 20);\n/**\n * De-scale a exponently scaled value\n *\n * @param {number} x normalized value to scale between ([0, 1])\n * @param {number} e exponent factor used to scale, 0 means linear, 1 does ** 1.5 curve\n * @returns {number} de-scaled value\n */\nexport const iNormExp = (x: number, e: number): number => Math.max(0, x) ** (1.5 ** -e);\n/**\n * Scale exponently a normalized value\n *\n * @param {number} x normalized value to scale between ([0, 1])\n * @param {number} e exponent factor, 0 means linear, 1 does ** 1.5 curve\n * @returns {number} scaled value\n */\nexport const normExp = (x: number, e: number): number => Math.max(0, x) ** (1.5 ** e);\n\nexport const scale = (x: number, l1: number, h1: number, l2: number, h2: number) => {\n    const r1 = h1 - l1;\n    const r2 = h2 - l2;\n    return (x - l1) / r1 * r2 + l2;\n};\n\nexport const scaleClip = (x: number, l1: number, h1: number, l2: number, h2: number) => Math.max(l2, Math.min(h2, scale(x, l1, h1, l2, h2)));\n\n// eslint-disable-next-line arrow-body-style\nexport const isIdentityMatrix = (x: number[][]) => {\n    return Array.isArray(x)\n    && x.every((row, i) => isNumberArray(row)\n    && row.length === x.length\n    && row.every((e, j) => e === (j === i ? 1 : 0)));\n};\n\nexport const identityMatrix = (dim: number) => new Array(dim).fill(undefined).map((x, i) => new Array(dim).fill(undefined).map((y, j) => +(i === j)));\n","/* eslint-disable arrow-body-style */\nimport { TMIDIEvent, TBPF, TRect, TPresentationRect, FileExtension, ProjectItemType, RawPatcher, TMaxPatcher, TAudioUnit, TPatcherProps } from \"../core/types\";\n\nexport const isStringArray = (x: any): x is string[] => Array.isArray(x) && x.every(e => typeof e === \"string\");\nexport const isNumberArray = (x: any): x is number[] => Array.isArray(x) && x.every(e => typeof e === \"number\");\nexport const isTRect = (x: any): x is TRect => {\n    return isNumberArray(x)\n        && x.length === 4\n        && x[0] >= 0\n        && x[1] >= 0\n        && x[2] >= 15\n        && x[3] >= 15;\n};\nexport const isTPresentationRect = (x: any): x is TPresentationRect => {\n    return Array.isArray(x)\n        && x.length === 4\n        && x.every(v => typeof v === \"number\" || typeof v === \"string\");\n};\nexport const isRectMovable = (x: any): x is [number, number, number | string, number | string] => {\n    return isTPresentationRect(x) && typeof x[0] === \"number\" && typeof x[1] === \"number\";\n};\nexport const isRectResizable = (x: any): x is TRect => isTRect(x);\nexport const isMIDIEvent = (x: any): x is TMIDIEvent => (isNumberArray(x) || x instanceof Uint8Array) && x.length === 3;\nexport const stringifyError = (data: any) => {\n    if (typeof data === \"string\") return data;\n    if (data instanceof Error) return data.message;\n    if (typeof data === \"object\") return JSON.stringify(data);\n    return `${data}`;\n};\nexport const parseToPrimitive = (value: any) => {\n    try {\n        return JSON.parse(value);\n    } catch (e) {\n        return value.toString();\n    }\n};\nexport const rgbaMax2Css = (maxColor: number[]) => {\n    const cssColor = [255, 255, 255, 1] as TRect;\n    if (Array.isArray(maxColor)) {\n        for (let i = 0; i < 3; i++) {\n            if (typeof maxColor[i] === \"number\") cssColor[i] = Math.floor(maxColor[i] * 255);\n        }\n        if (typeof maxColor[3] === \"number\") cssColor[3] = maxColor[3];\n    }\n    return `rgba(${cssColor.join(\",\")})`;\n};\nexport const css2RgbaMax = (color: string) => {\n    const maxColor = [0.2, 0.2, 0.2, 1] as TRect;\n    const matched = color.match(/rgba\\((.+)\\)/);\n    if (!matched) return maxColor;\n    const cssColor = matched[1].split(\",\").map(s => +s);\n    for (let i = 0; i < 3; i++) {\n        if (typeof cssColor[i] === \"number\") maxColor[i] = cssColor[i] / 255;\n        if (typeof cssColor[3] === \"number\") maxColor[3] = cssColor[3];\n    }\n    return maxColor;\n};\n/**\n * A BPF can be described as a succesion of three number tuples.\n * i.e. `1 1 0.5 2 1 1` curve mode means go to 0 immediately then go to 1 in 1s with a curve of e^0.5, then go to 2 in 1s linear.\n * The function transform the string to number[][], i.e. `[[1, 1, 0.5], [2, 1, 1]]`\n *\n * @param {TBPF} sIn\n * @returns {number[][]}\n */\nexport const decodeBPF = (sIn: TBPF, tupleLength: number): number[][] => {\n    if (typeof sIn === \"number\") return [[sIn]];\n    if (isNumberArray(sIn)) return [sIn];\n    if (Array.isArray(sIn) && sIn.every(a => isNumberArray(a))) return sIn;\n    if (typeof sIn !== \"string\") throw new Error(\"Failed to decode curve.\");\n    const numbers = sIn.split(\" \").filter(s => !!s).map(s => +s);\n    if (numbers.find(v => !isFinite(v))) throw new Error(\"BPF contains invalid number.\");\n    const tuples: number[][] = [];\n    for (let i = 0; i < numbers.length; i++) {\n        const $tuple = ~~(i / tupleLength);\n        const $ = i % tupleLength;\n        if (!tuples[$tuple]) tuples[$tuple] = [];\n        tuples[$tuple][$] = numbers[i];\n    }\n    return tuples;\n};\nexport const decodeCurve = (sIn: TBPF) => decodeBPF(sIn, 3);\nexport const decodeLine = (sIn: TBPF) => decodeBPF(sIn, 2);\n\n/**\n * Gives OS name as follows:\n * \"Windows\"    for all versions of Windows,\n * \"MacOS\"      for all versions of Macintosh OS,\n * \"Linux\"      for all versions of Linux,\n * \"UNIX\"       for all other UNIX flavors,\n * \"Unknown\" indicates failure to detect the OS\n *\n * @returns {\"Windows\" | \"MacOS\" | \"UNIX\" | \"Linux\" | \"Unknown\"} OS name\n */\nexport const detectOS = (): \"Windows\" | \"MacOS\" | \"UNIX\" | \"Linux\" | \"Unknown\" => {\n    const { appVersion } = navigator;\n    if (appVersion.indexOf(\"Win\") !== -1) return \"Windows\";\n    if (appVersion.indexOf(\"Mac\") !== -1) return \"MacOS\";\n    if (appVersion.indexOf(\"X11\") !== -1) return \"UNIX\";\n    if (appVersion.indexOf(\"Linux\") !== -1) return \"Linux\";\n    return \"Unknown\";\n};\nexport const detectBrowserCore = () => {\n    if ((window as any).chrome) return \"Chromium\";\n    if ((window as any).InstallTrigger) return \"Gecko\";\n    return \"Unknown\";\n};\nexport const roundedRect = (ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number | number[]) => {\n    const radii = [0, 0, 0, 0];\n    if (typeof radius === \"number\") radii.fill(radius);\n    else radius.forEach((v, i) => radii[i] = v);\n    ctx.beginPath();\n    ctx.moveTo(x + radii[0], y);\n    ctx.lineTo(x + width - radii[1], y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radii[1]);\n    ctx.lineTo(x + width, y + height - radii[2]);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radii[2], y + height);\n    ctx.lineTo(x + radii[3], y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radii[3]);\n    ctx.lineTo(x, y + radii[0]);\n    ctx.quadraticCurveTo(x, y, x + radii[0], y);\n    ctx.closePath();\n    ctx.stroke();\n};\nexport const fillRoundedRect = (ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number | number[]) => {\n    const radii = [0, 0, 0, 0];\n    if (typeof radius === \"number\") radii.fill(radius);\n    else radius.forEach((v, i) => radii[i] = v);\n    ctx.beginPath();\n    ctx.moveTo(x + radii[0], y);\n    ctx.lineTo(x + width - radii[1], y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radii[1]);\n    ctx.lineTo(x + width, y + height - radii[2]);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radii[2], y + height);\n    ctx.lineTo(x + radii[3], y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radii[3]);\n    ctx.lineTo(x, y + radii[0]);\n    ctx.quadraticCurveTo(x, y, x + radii[0], y);\n    ctx.closePath();\n    ctx.fill();\n};\nexport const selectElementRange = (e: HTMLElement) => {\n    const elementIsEditable = (e: HTMLElement): e is HTMLInputElement | HTMLTextAreaElement => !!e.nodeName.match(/^(INPUT|TEXTAREA)$/i);\n    const selection = window.getSelection();\n    if (elementIsEditable(e)) {\n        e.focus();\n        e.select();\n        return;\n    }\n    if (selection.setBaseAndExtent) {\n        // Safari\n        selection.setBaseAndExtent(e, 0, e, e.hasChildNodes() ? 1 : 0);\n        return;\n    }\n    if (selection.addRange && selection.removeAllRanges && document.createRange) {\n        // Mozilla or Opera 10.5+\n        const range = document.createRange();\n        range.selectNodeContents(e);\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n};\nexport const selectElementPos = (e: HTMLElement, pos: number) => {\n    const range = document.createRange();\n    const selection = window.getSelection();\n    range.setStart(e.childNodes[0], pos);\n    range.collapse(true);\n    selection.removeAllRanges();\n    selection.addRange(range);\n};\nexport const findFromAscendants = (e: HTMLElement, predict: (e: HTMLElement) => boolean) => {\n    const ascendants = [];\n    let parent = e.parentElement;\n    while (parent !== document.body) {\n        ascendants.push(parent);\n        parent = parent.parentElement;\n    }\n    return ascendants.find(predict);\n};\n// eslint-disable-next-line arrow-body-style\nexport const getPropertyDescriptor = (obj: Record<string, any>, key: string): PropertyDescriptor => {\n    return Object.getOwnPropertyDescriptor(obj, key) || getPropertyDescriptor(Object.getPrototypeOf(obj), key);\n};\nexport const getPropertyDescriptors = (obj: Function | Record<string, any>): PropertyDescriptorMap => {\n    if (typeof obj === \"function\") return Object.getOwnPropertyDescriptors(obj);\n    const proto = Object.getPrototypeOf(obj);\n    if (obj !== Object.prototype && proto === Object.prototype) return Object.getOwnPropertyDescriptors(obj);\n    return Object.assign(proto ? getPropertyDescriptors(proto) : {}, Object.getOwnPropertyDescriptors(obj));\n};\n\nexport const extToType = (ext: FileExtension): Exclude<ProjectItemType, \"folder\"> => {\n    if ([\"jspat\", \"maxpat\", \"gendsp\", \"dsppat\"].indexOf(ext) !== -1) return \"patcher\";\n    if ([\"wav\", \"aif\", \"aiff\", \"mp3\", \"aac\", \"flac\", \"ogg\"].indexOf(ext) !== -1) return \"audio\";\n    if ([\"text\", \"json\"].indexOf(ext) !== -1) return \"text\";\n    return \"unknown\";\n};\n\nexport const max2js = (patcherIn: TMaxPatcher, mode = \"max\" as TPatcherProps[\"mode\"]): RawPatcher => {\n    const patcher: RawPatcher = { boxes: {}, lines: {} };\n    const maxPatcher = (patcherIn as TMaxPatcher).patcher;\n    patcher.props = {\n        bgColor: rgbaMax2Css(maxPatcher.bgcolor),\n        editingBgColor: rgbaMax2Css(maxPatcher.editing_bgcolor),\n        dependencies: [],\n        grid: maxPatcher.gridsize,\n        openInPresentation: !!maxPatcher.openinpresentation,\n        mode\n    };\n    const maxBoxes = maxPatcher.boxes;\n    const maxLines = maxPatcher.lines;\n    for (let i = 0; i < maxBoxes.length; i++) {\n        const maxBox = maxBoxes[i].box;\n        const numID = parseInt(maxBox.id.match(/\\d+/)[0]);\n        const id = \"box-\" + numID;\n        patcher.boxes[id] = {\n            id,\n            inlets: maxBox.numinlets,\n            outlets: maxBox.numoutlets,\n            rect: maxBox.patching_rect,\n            presentationRect: maxBox.presentation_rect,\n            background: !!maxBox.background,\n            presentation: !!maxBox.presentation,\n            text: (maxBox.maxclass === \"newobj\" ? \"\" : maxBox.maxclass + \" \") + (maxBox.text ? maxBox.text : \"\")\n        };\n    }\n    for (let i = 0; i < maxLines.length; i++) {\n        const lineArgs = maxLines[i].patchline;\n        const id = \"line-\" + i;\n        patcher.lines[id] = {\n            id,\n            src: [lineArgs.source[0].replace(/obj/, \"box\"), lineArgs.source[1]],\n            dest: [lineArgs.destination[0].replace(/obj/, \"box\"), lineArgs.destination[1]]\n        };\n    }\n    return patcher;\n};\n\nexport const js2max = (patcherIn: RawPatcher): TMaxPatcher => {\n    const maxPatcher: TMaxPatcher[\"patcher\"] = {\n        boxes: [],\n        lines: [],\n        rect: undefined,\n        bgcolor: css2RgbaMax(patcherIn.props.bgColor),\n        editing_bgcolor: css2RgbaMax(patcherIn.props.editingBgColor),\n        gridsize: patcherIn.props.grid,\n        openinpresentation: +patcherIn.props.openInPresentation\n    };\n    for (const id in patcherIn.boxes) {\n        const box = patcherIn.boxes[id];\n        const numID = parseInt(id.match(/\\d+/)[0]);\n        maxPatcher.boxes.push({\n            box: {\n                id: `obj-${numID}`,\n                maxclass: \"newobj\",\n                numinlets: box.inlets,\n                numoutlets: box.outlets,\n                patching_rect: box.rect,\n                presentation: +box.presentation,\n                background: +box.background,\n                text: box.text\n            }\n        });\n    }\n    for (const id in patcherIn.lines) {\n        const line = patcherIn.lines[id];\n        maxPatcher.lines.push({\n            patchline: {\n                source: [line.src[0].replace(/box/, \"obj\"), line.src[1]],\n                destination: [line.dest[0].replace(/box/, \"obj\"), line.dest[1]]\n            }\n        });\n    }\n    return { patcher: maxPatcher };\n};\n\nexport const convertSampleToUnit = (sample: number, unit: TAudioUnit, { sampleRate = 48000, bpm = 60, beatsPerMeasure = 4, division = 16 }) => {\n    if (unit === \"sample\") return { unit, str: sample.toString(), value: sample, values: [sample] };\n    const milliseconds = sample * 1000 / sampleRate;\n    const roundedMs = Math.round(milliseconds);\n    if (unit === \"measure\") {\n        const dpms = bpm * division / 60000;\n        const totalDivisions = dpms * milliseconds;\n        const roundedTotalDivisions = dpms * milliseconds;\n        const divisions = ~~(roundedTotalDivisions % division);\n        const beats = ~~(roundedTotalDivisions / division) % beatsPerMeasure + 1;\n        const measure = ~~(roundedTotalDivisions / beatsPerMeasure / division) + 1;\n        const str = `${measure}:${beats}.${divisions.toString().padStart(2, \"0\")}`;\n        return { unit, str, value: totalDivisions / division, values: [measure, beats, divisions] };\n    }\n    // if (unit === \"time\")\n    const ms = roundedMs % 1000;\n    const s = ~~(roundedMs / 1000) % 60;\n    const min = ~~(roundedMs / 60000) % 60;\n    const h = ~~(roundedMs / 3600000);\n    const str = !min ? `${s}.${ms.toString().padStart(3, \"0\")}`\n        : !h ? `${min}:${s.toString().padStart(2, \"0\")}.${ms.toString().padStart(3, \"0\")}`\n            : `${h}:${min.toString().padStart(2, \"0\")}:${s.toString().padStart(2, \"0\")}.${ms.toString().padStart(3, \"0\")}`;\n    return { unit, str, value: milliseconds / 1000, values: [h, min, s, ms] };\n};\nexport const MEASURE_UNIT_REGEX = /^((\\d+):)?(\\d+)\\.?(\\d+)?$/;\nexport const TIME_UNIT_REGEX = /^((\\d+):)??((\\d+):)?(\\d+)\\.?(\\d+)?$/;\nexport const convertUnitToSample = (str: string, unit: TAudioUnit, { sampleRate = 48000, bpm = 60, beatsPerMeasure = 4, division = 16 }) => {\n    if (unit === \"sample\") return +str || 0;\n    if (unit === \"measure\") {\n        const matched = str.match(MEASURE_UNIT_REGEX);\n        if (!matched) throw new Error(`String ${str} cannot be parsed to ${unit}`);\n        const [, , measureIn, beatsIn, divisionsIn] = matched;\n        const bps = bpm / 60;\n        const samplesPerBeat = sampleRate / bps;\n        let measures = +measureIn || 0;\n        let beats = +beatsIn || 0;\n        let divisions = +divisionsIn || 0;\n        beats += ~~(divisions / division);\n        divisions %= division;\n        measures += ~~(beats / beatsPerMeasure);\n        beats %= beatsPerMeasure;\n        return (measures * beatsPerMeasure + beats + divisions / division) * samplesPerBeat;\n    }\n    const matched = str.match(TIME_UNIT_REGEX);\n    if (!matched) throw new Error(`String ${str} cannot be parsed to ${unit}`);\n    const [, , hIn, , minIn, sIn, msIn] = matched;\n    let h = +hIn || 0;\n    let min = +minIn || 0;\n    let s = +sIn || 0;\n    let ms = +msIn || 0;\n    s += ~~(ms / 1000);\n    ms %= 1000;\n    min += ~~(s / 60);\n    s %= 60;\n    h += ~~(min / 60);\n    min %= 60;\n    return (h * 3600 + min * 60 + s + ms / 1000) * sampleRate;\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(\"./node_modules/babel-loader/lib/index.js!./src/core/worklets/Transmitter.worklet.ts\");\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}