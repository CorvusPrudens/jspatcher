{"version":3,"file":"js/d7c431b73aee550d8d90.worklet.js","mappings":"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","sources":["webpack://JSPatcher/./src/core/worklets/AudioWorkletProxyProcessor.ts","webpack://JSPatcher/webpack/bootstrap","webpack://JSPatcher/webpack/runtime/define property getters","webpack://JSPatcher/webpack/runtime/hasOwnProperty shorthand","webpack://JSPatcher/webpack/runtime/make namespace object","webpack://JSPatcher/./src/core/worklets/Patcher.worklet.ts"],"sourcesContent":["import { AudioWorkletGlobalScope, MessagePortRequest, MessagePortResponse, TypedMessageEvent } from \"./TypedAudioWorklet\";\nimport { AudioWorkletProxyProcessor } from \"./AudioWorkletProxyProcessor.types\";\n\ndeclare const globalThis: AudioWorkletGlobalScope;\nconst { AudioWorkletProcessor } = globalThis;\n\nconst Processor = class extends AudioWorkletProcessor {\n    static get fnNames(): string[] {\n        return [];\n    }\n    _disposed = false;\n    constructor(options: AudioWorkletNodeOptions) {\n        super(options);\n        const resolves: Record<number, ((...args: any[]) => any)> = {};\n        const rejects: Record<number, ((...args: any[]) => any)> = {};\n        let messagePortRequestId = -1;\n        const handleDisposed = () => {\n            this.port.removeEventListener(\"message\", handleMessage);\n            this.port.close();\n        };\n        const handleMessage = async (e: TypedMessageEvent<MessagePortResponse & MessagePortRequest>) => {\n            const { id, call, args, value, error } = e.data;\n            if (call) {\n                const r: MessagePortResponse = { id };\n                try {\n                    r.value = await (this as any)[call](...args);\n                } catch (e) {\n                    r.error = e;\n                }\n                this.port.postMessage(r as any);\n                if (this._disposed) handleDisposed();\n            } else {\n                if (error) {\n                    if (rejects[id]) rejects[id](error);\n                    delete rejects[id];\n                    return;\n                }\n                if (resolves[id]) {\n                    resolves[id](value);\n                    delete resolves[id];\n                }\n            }\n        };\n        const call = (call: string, ...args: any[]) => new Promise<any>((resolve, reject) => {\n            const id = messagePortRequestId--;\n            resolves[id] = resolve;\n            rejects[id] = reject;\n            this.port.postMessage({ id, call, args });\n        });\n        const Ctor = (this.constructor as typeof AudioWorkletProxyProcessor);\n        Ctor.fnNames.forEach(name => (this as any)[name] = (...args: any[]) => call(name, ...args));\n        this.port.start();\n        this.port.addEventListener(\"message\", handleMessage);\n    }\n} as typeof AudioWorkletProxyProcessor;\n\nexport default Processor;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import AudioWorkletProxyProcessor from \"./AudioWorkletProxyProcessor\";\nimport type PatcherEditor from \"../patcher/PatcherEditor\";\nimport type Patcher from \"../patcher/Patcher\";\nimport type PersistentProjectFile from \"../file/PersistentProjectFile\";\nimport type { IPatcherNode, PatcherParameters, IPatcherProcessor, PatcherOptions } from \"./PatcherWorklet.types\";\nimport type { AudioWorkletGlobalScope, TypedAudioParamDescriptor, TypedAudioWorkletNodeOptions } from \"./TypedAudioWorklet\";\nimport type { IHistoryData } from \"../file/History\";\nimport type { PatcherEditorEventMap } from \"../patcher/PatcherEditor\";\nimport type { PatcherEventMap } from \"../patcher/Patcher\";\nimport type { RawPatcher } from \"../types\";\n\nconst processorId = \"__JSPatcher_Patcher\";\ndeclare const globalThis: AudioWorkletGlobalScope;\nconst { registerProcessor, jspatcherEnv } = globalThis;\n\nexport default class PatcherProcessor extends AudioWorkletProxyProcessor<IPatcherProcessor, IPatcherNode, PatcherParameters, PatcherOptions> implements IPatcherProcessor {\n    static fnNames: (keyof IPatcherNode)[] = [\"outlet\", \"objectEmitFromWorklet\"];\n    static get parameterDescriptors(): TypedAudioParamDescriptor<PatcherParameters>[] {\n        return new Array(128).fill(null).map((v, i) => ({\n            defaultValue: 0,\n            // maxValue: Number.MAX_VALUE,\n            // minValue: -Number.MAX_VALUE,\n            name: `00${i}`.slice(-3)\n        }));\n    }\n    readonly env = jspatcherEnv;\n    readonly instanceId: string;\n    readonly file: PersistentProjectFile;\n    readonly initData: RawPatcher;\n    patcher: Patcher;\n    editor: PatcherEditor;\n    constructor(options?: TypedAudioWorkletNodeOptions<PatcherOptions>) {\n        super(options);\n        const { instanceId, fileId, data } = options.processorOptions;\n        this.instanceId = instanceId;\n        this.file = this.env.fileMgr.getProjectItemFromId(fileId) as PersistentProjectFile;\n        this.initData = data;\n    }\n    async init() {\n        const Patcher = this.env.sdk.Patcher;\n        this.patcher = new Patcher({ env: this.env, file: this.file, project: this.env.currentProject, instanceId: this.instanceId });\n        this.patcher.state.patcherProcessor = this;\n        await this.patcher.init(this.initData);\n        this.patcher.on(\"dataOutput\", this.handleOutlet);\n        this.editor = await this.patcher.getEditor();\n    }\n    handleOutlet = (e: PatcherEventMap[\"dataOutput\"]) => this.outlet(e.outlet, e.data);\n    fn(data: any, port: number) {\n        this.patcher.fn(data, port);\n    }\n    sync(data: IHistoryData<PatcherEditorEventMap>) {\n        this.patcher.history.syncData(data);\n    }\n    process(inputs: Float32Array[][], outputs: Float32Array[][], parameters: Record<PatcherParameters, Float32Array>) {\n        if (this._disposed) return false;\n        if (!inputs?.[0]?.[0]?.length) return true;\n        const { parametersBoxes } = this.patcher.inspectAudioIO();\n        const handleOutput = ({ output, buffer }: PatcherEventMap[\"audioOutput\"]) => {\n            if (outputs[output]?.[0]) outputs[output][0].set(buffer);\n        };\n        this.patcher.on(\"audioOutput\", handleOutput);\n        for (let i = 0; i < inputs.length; i++) {\n            if (inputs[i]?.[0]) this.patcher.inputAudio(i, inputs[i][0]);\n        }\n        for (const key in parameters) {\n            const boxInfo = parametersBoxes[+key];\n            if (!boxInfo) continue;\n            const param = boxInfo[0];\n            this.patcher.inputParam(param, parameters[param]);\n        }\n        this.patcher.off(\"audioOutput\", handleOutput);\n        return true;\n    }\n    destroy() {\n        this.patcher.destroy();\n        this._disposed = true;\n    }\n    objectEmit(boxId: string, eventName: string, eventData: any) {\n        return this.patcher.boxes[boxId]?.object.emit(eventName as any, eventData);\n    }\n}\n\ntry {\n    registerProcessor(processorId, PatcherProcessor);\n} catch (error) {\n    // eslint-disable-next-line no-console\n    console.warn(error);\n}\n"],"names":["AudioWorkletProcessor","globalThis","Processor","fnNames","constructor","options","resolves","rejects","messagePortRequestId","handleDisposed","port","removeEventListener","handleMessage","close","e","id","call","args","value","error","data","r","postMessage","_disposed","Promise","resolve","reject","Ctor","forEach","name","start","addEventListener","AudioWorkletProxyProcessor","processorId","registerProcessor","jspatcherEnv","PatcherProcessor","parameterDescriptors","Array","fill","map","v","i","defaultValue","slice","outlet","instanceId","fileId","processorOptions","file","env","fileMgr","getProjectItemFromId","initData","init","Patcher","sdk","patcher","project","currentProject","state","patcherProcessor","on","handleOutlet","editor","getEditor","fn","sync","history","syncData","process","inputs","outputs","parameters","length","parametersBoxes","inspectAudioIO","handleOutput","output","buffer","set","inputAudio","key","boxInfo","param","inputParam","off","destroy","objectEmit","boxId","eventName","eventData","boxes","object","emit","console","warn"],"sourceRoot":""}