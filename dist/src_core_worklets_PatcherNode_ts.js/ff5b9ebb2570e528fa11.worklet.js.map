{"version":3,"sources":["webpack://JSPatcher/JSPatcher/JSPatcher/JSPatcher/JSPatcher/./src/core/worklets/AudioWorkletProxyNode.ts","webpack://JSPatcher/JSPatcher/JSPatcher/JSPatcher/JSPatcher/./src/core/worklets/AudioWorkletRegister.ts","webpack://JSPatcher/JSPatcher/JSPatcher/JSPatcher/JSPatcher/./src/core/worklets/PatcherNode.ts","webpack://JSPatcher/JSPatcher/JSPatcher/JSPatcher/JSPatcher/./src/core/worklets/Patcher.worklet.ts"],"names":["Node","AudioWorkletNode","fnNames","constructor","context","name","options","resolves","rejects","messagePortRequestId","handleDisposed","port","removeEventListener","handleMessage","close","e","id","call","args","value","error","data","r","postMessage","_disposed","Promise","resolve","reject","Ctor","forEach","start","addEventListener","registeredProcessors","window","jspatcherEnv","AudioWorkletRegister","WeakMap","registeringProcessors","registerProcessor","audioWorklet","processorId","processor","get","add","injection","url","URL","createObjectURL","Blob","toString","map","JSON","stringify","join","type","addModule","f","delete","register","promise","push","has","set","Set","registered","registering","PatcherNode","AudioWorkletProxyNode","numberOfInputs","numberOfOutputs","channelCount","channelCountMode","channelInterpretation","processorOptions","instanceId","fileId","syncData","patcher","history","getSyncData","sync","fn","inlet","destroy","env","getInstanceById","on","handleChanged","handleInput","handleDestroy","_destroy","outlet","objectEmitFromWorklet","boxId","eventName","eventData","boxes","object","emit","processorURL"],"mappings":"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","file":"src_core_worklets_PatcherNode_ts.js/ff5b9ebb2570e528fa11.worklet.js","sourcesContent":["import { TypedMessageEvent, MessagePortResponse, MessagePortRequest } from \"./TypedAudioWorklet\";\nimport { AudioWorkletProxyNode } from \"./AudioWorkletProxyNode.types\";\n\nconst Node = class extends AudioWorkletNode {\n    static get fnNames(): string[] {\n        return [];\n    }\n    _disposed = false;\n    constructor(context: AudioContext, name: string, options?: AudioWorkletNodeOptions) {\n        super(context, name, options);\n        const resolves: Record<number, ((...args: any[]) => any)> = {};\n        const rejects: Record<number, ((...args: any[]) => any)> = {};\n        let messagePortRequestId = 1;\n        const handleDisposed = () => {\n            this.port.removeEventListener(\"message\", handleMessage);\n            this.port.close();\n        };\n        const handleMessage = async (e: TypedMessageEvent<MessagePortResponse & MessagePortRequest>) => {\n            const { id, call, args, value, error } = e.data;\n            if (call) {\n                const r: MessagePortResponse = { id };\n                try {\n                    r.value = await (this as any)[call](...args);\n                } catch (e) {\n                    r.error = e;\n                }\n                this.port.postMessage(r);\n                if (this._disposed) handleDisposed();\n            } else {\n                if (error) {\n                    if (rejects[id]) rejects[id](error);\n                    delete rejects[id];\n                    return;\n                }\n                if (resolves[id]) {\n                    resolves[id](value);\n                    delete resolves[id];\n                }\n            }\n        };\n        // eslint-disable-next-line\n        const call = (call: string, ...args: any[]) => {\n            return new Promise<any>((resolve, reject) => {\n                const id = messagePortRequestId++;\n                resolves[id] = resolve;\n                rejects[id] = reject;\n                this.port.postMessage({ id, call, args });\n            });\n        };\n        const Ctor = (this.constructor as typeof AudioWorkletProxyNode);\n        Ctor.fnNames.forEach(name => (this as any)[name] = (...args: any[]) => call(name, ...args));\n        this.port.start();\n        this.port.addEventListener(\"message\", handleMessage);\n    }\n} as typeof AudioWorkletProxyNode;\n\nexport default Node;\n","export const registeredProcessors: WeakMap<AudioWorklet, Set<string>> = window.jspatcherEnv?.AudioWorkletRegister?.registeredProcessors || new WeakMap();\nexport const registeringProcessors: WeakMap<AudioWorklet, Set<string>> = window.jspatcherEnv?.AudioWorkletRegister?.registeringProcessors || new WeakMap();\nexport const resolves: Record<string, ((value?: void | PromiseLike<void>) => void)[]> = window.jspatcherEnv?.AudioWorkletRegister?.resolves || {};\nexport const rejects: Record<string, ((reason?: any) => void)[]> = window.jspatcherEnv?.AudioWorkletRegister?.rejects || {};\n\nexport default class AudioWorkletRegister {\n    static registeredProcessors = registeredProcessors;\n\n    static registeringProcessors = registeringProcessors;\n\n    static resolves = resolves;\n\n    static rejects = rejects;\n\n    private static async registerProcessor(audioWorklet: AudioWorklet, processorId: string, processor: string | ((id: string, ...injections: any[]) => void), ...injection: any[]) {\n        this.registeringProcessors.get(audioWorklet).add(processorId);\n        try {\n            const url = typeof processor === \"string\" ? processor : URL.createObjectURL(new Blob([`(${processor.toString()})(${[processorId, ...injection].map(JSON.stringify as (arg: any) => string).join(\", \")});`], { type: \"text/javascript\" }));\n            await audioWorklet.addModule(url);\n            this.resolves[processorId].forEach(f => f());\n            this.registeringProcessors.get(audioWorklet).delete(processorId);\n            this.registeredProcessors.get(audioWorklet).add(processorId);\n        } catch (e) {\n            this.rejects[processorId].forEach(f => f(e));\n        }\n        this.rejects[processorId] = [];\n        this.resolves[processorId] = [];\n    }\n\n    static async register(audioWorklet: AudioWorklet, processorId: string, processor: string | ((id: string, ...injections: any[]) => void), ...injection: any[]) {\n        if (!this.resolves[processorId]) this.resolves[processorId] = [];\n        if (!this.rejects[processorId]) this.rejects[processorId] = [];\n        const promise = new Promise<void>((resolve, reject) => {\n            this.resolves[processorId].push(resolve);\n            this.rejects[processorId].push(reject);\n        });\n        if (!this.registeringProcessors.has(audioWorklet)) {\n            this.registeringProcessors.set(audioWorklet, new Set());\n        }\n        if (!this.registeredProcessors.has(audioWorklet)) {\n            this.registeredProcessors.set(audioWorklet, new Set());\n        }\n        const registered = this.registeredProcessors.get(audioWorklet).has(processorId);\n        const registering = this.registeringProcessors.get(audioWorklet).has(processorId);\n        if (registered) return Promise.resolve();\n        if (registering) return promise;\n        if (!registered && audioWorklet) {\n            this.registerProcessor(audioWorklet, processorId, processor, ...injection);\n        }\n        return promise;\n    }\n}\n","import processorURL from \"./Patcher.worklet.ts\"; // eslint-disable-line import/extensions\nimport AudioWorkletProxyNode from \"./AudioWorkletProxyNode\";\nimport AudioWorkletRegister from \"./AudioWorkletRegister\";\nimport type Patcher from \"../patcher/Patcher\";\nimport type { PatcherEventMap } from \"../patcher/Patcher\";\nimport type { IPatcherNode, IPatcherProcessor, PatcherOptions, PatcherParameters } from \"./PatcherWorklet.types\";\nimport type { IJSPatcherEnv } from \"../Env\";\nimport type { RawPatcher } from \"../types\";\n\nconst processorId = \"__JSPatcher_Patcher\";\n\nexport default class PatcherNode extends AudioWorkletProxyNode<IPatcherNode, IPatcherProcessor, PatcherParameters, PatcherOptions> implements IPatcherNode {\n    static processorId = processorId;\n    static register = (audioWorklet: AudioWorklet) => AudioWorkletRegister.register(audioWorklet, processorId, processorURL);\n    static fnNames: (keyof IPatcherProcessor)[] = [\"init\", \"fn\", \"sync\", \"objectEmit\", \"destroy\"];\n    readonly patcher: Patcher;\n    constructor(context: BaseAudioContext, options: { env: IJSPatcherEnv; instanceId: string; fileId?: string; data?: RawPatcher }) {\n        super(context, processorId, {\n            numberOfInputs: 1,\n            numberOfOutputs: 1,\n            channelCount: 16,\n            channelCountMode: \"explicit\",\n            channelInterpretation: \"discrete\",\n            processorOptions: { instanceId: options.instanceId, fileId: options.fileId, data: options.data }\n        });\n        this.patcher = options.env.getInstanceById(options.instanceId) as Patcher;\n        this.patcher.on(\"changed\", this.handleChanged);\n        this.patcher.on(\"dataInput\", this.handleInput);\n        this.patcher.on(\"destroy\", this.handleDestroy);\n        const _destroy = this.destroy;\n        this.destroy = async () => {\n            await _destroy.call(this);\n            this._disposed = true;\n        };\n    }\n    handleChanged = () => {\n        const syncData = this.patcher.history.getSyncData();\n        this.sync(syncData);\n    };\n    handleInput = (e: PatcherEventMap[\"dataInput\"]) => this.fn(e.data, e.inlet);\n    handleDestroy = () => this.destroy();\n    outlet(port: number, data: any) {\n        this.patcher.outlet(port, data);\n    }\n    objectEmitFromWorklet(boxId: string, eventName: string, eventData: any) {\n        return this.patcher.boxes[boxId]?.object.emit(eventName as any, eventData);\n    }\n}\n","module.exports = __webpack_public_path__ + \"js/b862f93c77ff2d6bfe33.worklet.js\";"],"sourceRoot":""}