{"version":3,"file":"js/e1405958844422f3e03c.worker.js","mappings":"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","sources":["webpack://JSPatcher/./src/core/workers/ProxyWorker.ts","webpack://JSPatcher/./src/utils/WavEncoder.ts","webpack://JSPatcher/webpack/bootstrap","webpack://JSPatcher/webpack/runtime/define property getters","webpack://JSPatcher/webpack/runtime/hasOwnProperty shorthand","webpack://JSPatcher/webpack/runtime/make namespace object","webpack://JSPatcher/./src/core/workers/WavEncoder.worker.ts"],"sourcesContent":["import { ProxyWorker } from \"./ProxyWorker.types\";\nimport { TypedMessageEvent, MessagePortResponse, MessagePortRequest } from \"./Worker\";\n\nconst Worker = class {\n    static fnNames: string[] = [];\n    _disposed = false;\n    constructor() {\n        const resolves: Record<number, ((...args: any[]) => any)> = {};\n        const rejects: Record<number, ((...args: any[]) => any)> = {};\n        let messagePortRequestId = -1;\n        const handleDisposed = () => {\n            removeEventListener(\"message\", handleMessage);\n            close();\n        };\n        const handleMessage = async (e: TypedMessageEvent<MessagePortResponse & MessagePortRequest>) => {\n            const { id, call, args, value, error } = e.data;\n            if (call) {\n                const r: MessagePortResponse = { id };\n                try {\n                    r.value = await (this as any)[call](...args);\n                } catch (e) {\n                    r.error = e;\n                }\n                postMessage(r as any);\n                if (this._disposed) handleDisposed();\n            } else {\n                if (error) {\n                    if (rejects[id]) rejects[id](error);\n                    delete rejects[id];\n                    return;\n                }\n                if (resolves[id]) {\n                    resolves[id](value);\n                    delete resolves[id];\n                }\n            }\n        };\n        const call = (call: string, ...args: any[]) => new Promise<any>((resolve, reject) => {\n            const id = messagePortRequestId--;\n            resolves[id] = resolve;\n            rejects[id] = reject;\n            postMessage({ id, call, args });\n        });\n        const Ctor = (this.constructor as typeof ProxyWorker);\n        Ctor.fnNames.forEach(name => (this as any)[name] = (...args: any[]) => call(name, ...args));\n        addEventListener(\"message\", handleMessage);\n    }\n} as typeof ProxyWorker;\n\nexport default Worker;\n","export interface Options {\n    bitDepth: number;\n    float?: boolean;\n    symmetric?: boolean;\n    shared?: boolean;\n    sampleRate: number;\n}\ninterface Format {\n    formatId: number;\n    float: boolean;\n    symmetric: boolean;\n    numberOfChannels: number;\n    sampleRate: number;\n    length: number;\n    bitDepth: number;\n    byteDepth: number;\n}\n\nexport default class WavEncoder {\n    static encode(audioBuffer: Float32Array[], options: Options) {\n        const numberOfChannels = audioBuffer.length;\n        const length = audioBuffer[0].length;\n        const { shared, float } = options;\n        const bitDepth = float ? 32 : ((options.bitDepth | 0) || 16);\n        const byteDepth = bitDepth >> 3;\n        const byteLength = length * numberOfChannels * byteDepth;\n        // eslint-disable-next-line no-undef\n        const AB = shared ? (globalThis.SharedArrayBuffer || globalThis.ArrayBuffer) : globalThis.ArrayBuffer;\n        const ab = new AB((44 + byteLength) * Uint8Array.BYTES_PER_ELEMENT);\n        const dataView = new DataView(ab);\n        const writer = new Writer(dataView);\n        const format: Format = {\n            formatId: float ? 0x0003 : 0x0001,\n            float,\n            numberOfChannels,\n            sampleRate: options.sampleRate,\n            symmetric: !!options.symmetric,\n            length,\n            bitDepth,\n            byteDepth\n        };\n        this.writeHeader(writer, format);\n        this.writeData(writer, audioBuffer, format);\n        return ab;\n    }\n    private static writeHeader(writer: Writer, format: Format) {\n        const { formatId, sampleRate, bitDepth, numberOfChannels, length, byteDepth } = format;\n        writer.string(\"RIFF\");\n        writer.uint32(writer.dataView.byteLength - 8);\n        writer.string(\"WAVE\");\n        writer.string(\"fmt \");\n        writer.uint32(16);\n        writer.uint16(formatId);\n        writer.uint16(numberOfChannels);\n        writer.uint32(sampleRate);\n        writer.uint32(sampleRate * numberOfChannels * byteDepth);\n        writer.uint16(numberOfChannels * byteDepth);\n        writer.uint16(bitDepth);\n        writer.string(\"data\");\n        writer.uint32(length * numberOfChannels * byteDepth);\n        return writer.pos;\n    }\n    private static writeData(writer: Writer, audioBuffer: Float32Array[], format: Format) {\n        const { bitDepth, float, length, numberOfChannels, symmetric } = format;\n        if (bitDepth === 32 && float) {\n            const { dataView, pos } = writer;\n            const ab = dataView.buffer;\n            const f32View = new Float32Array(ab, pos);\n            if (numberOfChannels === 1) {\n                f32View.set(audioBuffer[0]);\n                return;\n            }\n            for (let ch = 0; ch < numberOfChannels; ch++) {\n                const channel = audioBuffer[ch];\n                for (let i = 0; i < length; i++) {\n                    f32View[i * numberOfChannels + ch] = channel[i];\n                }\n            }\n            return;\n        }\n        const encoderOption = float ? \"f\" : symmetric ? \"s\" : \"\";\n        const methodName = \"pcm\" + bitDepth + encoderOption;\n\n        if (!(writer as any)[methodName]) {\n            throw new TypeError(\"Not supported bit depth: \" + bitDepth);\n        }\n\n        const write = (writer as any)[methodName].bind(writer);\n\n        writer.string(\"data\");\n        writer.uint32(length);\n\n        for (let i = 0; i < length; i++) {\n            for (let j = 0; j < numberOfChannels; j++) {\n                write(audioBuffer[j][i]);\n            }\n        }\n    }\n}\n\nclass Writer {\n    pos = 0;\n    dataView: DataView;\n    constructor(dataView: DataView) {\n        this.dataView = dataView;\n    }\n    int16(value: number) {\n        this.dataView.setInt16(this.pos, value, true);\n        this.pos += 2;\n    }\n    uint16(value: number) {\n        this.dataView.setUint16(this.pos, value, true);\n        this.pos += 2;\n    }\n    uint32(value: number) {\n        this.dataView.setUint32(this.pos, value, true);\n        this.pos += 4;\n    }\n    string(value: string) {\n        for (let i = 0, imax = value.length; i < imax; i++) {\n            this.dataView.setUint8(this.pos++, value.charCodeAt(i));\n        }\n    }\n    pcm8(valueIn: number) {\n        let value = valueIn;\n        value = Math.max(-1, Math.min(value, +1));\n        value = (value * 0.5 + 0.5) * 255;\n        value = Math.round(value) | 0;\n        this.dataView.setUint8(this.pos, value/* , true*/);\n        this.pos += 1;\n    }\n    pcm8s(valueIn: number) {\n        let value = valueIn;\n        value = Math.round(value * 128) + 128;\n        value = Math.max(0, Math.min(value, 255));\n        this.dataView.setUint8(this.pos, value/* , true*/);\n        this.pos += 1;\n    }\n    pcm16(valueIn: number) {\n        let value = valueIn;\n        value = Math.max(-1, Math.min(value, +1));\n        value = value < 0 ? value * 32768 : value * 32767;\n        value = Math.round(value) | 0;\n        this.dataView.setInt16(this.pos, value, true);\n        this.pos += 2;\n    }\n    pcm16s(valueIn: number) {\n        let value = valueIn;\n        value = Math.round(value * 32768);\n        value = Math.max(-32768, Math.min(value, 32767));\n        this.dataView.setInt16(this.pos, value, true);\n        this.pos += 2;\n    }\n    pcm24(valueIn: number) {\n        let value = valueIn;\n        value = Math.max(-1, Math.min(value, +1));\n        value = value < 0 ? 0x1000000 + value * 8388608 : value * 8388607;\n        value = Math.round(value) | 0;\n\n        const x0 = (value >> 0) & 0xFF;\n        const x1 = (value >> 8) & 0xFF;\n        const x2 = (value >> 16) & 0xFF;\n\n        this.dataView.setUint8(this.pos + 0, x0);\n        this.dataView.setUint8(this.pos + 1, x1);\n        this.dataView.setUint8(this.pos + 2, x2);\n        this.pos += 3;\n    }\n    pcm24s(valueIn: number) {\n        let value = valueIn;\n        value = Math.round(value * 8388608);\n        value = Math.max(-8388608, Math.min(value, 8388607));\n\n        const x0 = (value >> 0) & 0xFF;\n        const x1 = (value >> 8) & 0xFF;\n        const x2 = (value >> 16) & 0xFF;\n\n        this.dataView.setUint8(this.pos + 0, x0);\n        this.dataView.setUint8(this.pos + 1, x1);\n        this.dataView.setUint8(this.pos + 2, x2);\n        this.pos += 3;\n    }\n    pcm32(valueIn: number) {\n        let value = valueIn;\n        value = Math.max(-1, Math.min(value, +1));\n        value = value < 0 ? value * 2147483648 : value * 2147483647;\n        value = Math.round(value) | 0;\n        this.dataView.setInt32(this.pos, value, true);\n        this.pos += 4;\n    }\n    pcm32s(valueIn: number) {\n        let value = valueIn;\n        value = Math.round(value * 2147483648);\n        value = Math.max(-2147483648, Math.min(value, +2147483647));\n        this.dataView.setInt32(this.pos, value, true);\n        this.pos += 4;\n    }\n    pcm32f(value: number) {\n        this.dataView.setFloat32(this.pos, value, true);\n        this.pos += 4;\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import WavEncoder, { Options } from \"../../utils/WavEncoder\";\nimport { IWavEncoderWorker } from \"./WavEncoderWorker.types\";\nimport ProxyWorker from \"./ProxyWorker\";\n\nclass WavEncoderWorker extends ProxyWorker<IWavEncoderWorker> implements IWavEncoderWorker {\n    encode(audioBuffer: Float32Array[], options: Options) {\n        return WavEncoder.encode(audioBuffer, options);\n    }\n}\n// eslint-disable-next-line no-new\nnew WavEncoderWorker();\n"],"names":[],"sourceRoot":""}