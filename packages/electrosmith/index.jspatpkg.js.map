{"version":3,"file":"index.jspatpkg.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAyC;AAGlC,MAAM,OAAO,gEAAsB,CAAC,GAAG,EAAE,IAAI,EAAE,QAAQ,aAAa,EAAE;AAEtE,MAAM,EAAE,QAAQ,SAAS,UAAU,SAAS,aAAa,cAAc,qDAAW;AAEzF,iEAAe,iBAAE,MAAM,QAAQ,SAAS,UAAU,SAAS,eAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACP3E;AAC6C;AAa7C,MAAqB,WAArB,cAAqC,sDAAc,CAAkJ;AAAA,EAArM;AAAA;AAwDI,aAAI,EAAE,MAAM,QAAyC,QAAQ,QAA0B,QAAQ,OAAoB;AACnH,8BAAqB,YAAY;AAC7B,YAAM,UAAU,MAAM,UAAU,aAAa,iBAAiB;AAC9D,YAAM,QAAQ,QAAQ,OAAO,OAAK,EAAE,SAAS,YAAY,EAAE,IAAI,OAAK,EAAE,SAAS,EAAE,QAAQ;AACzF,YAAM,EAAE,SAAS;AACjB,WAAK,KAAK,KAAK,iCAAK,SAAQ,KAAK,KAAlB,EAAsB,MAAM,QAAQ,MAAM;AACzD,WAAK,QAAQ,IAAI;AAAA,IACrB;AACA,qBAAY,OAAO,WAAoB;AACnC,WAAK,EAAE,SAAS;AAChB,UAAI;AACJ,UAAI,QAAQ;AACR,cAAM,UAAU,MAAM,UAAU,aAAa,iBAAiB;AAC9D,cAAM,SAAS,QAAQ,KAAK,OAAK,EAAE,SAAS,gBAAiB,GAAE,aAAa,UAAU,EAAE,UAAU,OAAO;AACzG,YAAI;AAAQ,qBAAW,OAAO;AAAA,MAClC;AACA,WAAK,EAAE,SAAS,MAAM,UAAU,aAAa,aAAa,EAAE,OAAO,KAAK,eAAe,QAAQ,EAAE,CAAC;AAClG,UAAI,KAAK,EAAE;AAAQ,aAAK,UAAU;AAAA,IACtC;AAAA;AAAA,EACA,YAAY;AACR,UAAM,UAAU;AAChB,SAAK,GAAG,WAAW,MAAM;AACrB,WAAK,SAAS;AACd,WAAK,UAAU;AAAA,IACnB,CAAC;AACD,SAAK,GAAG,YAAY,MAAM;AACtB,YAAM,SAAS,KAAK,IAAI,KAAK;AAC7B,gBAAU,aAAa,iBAAiB,gBAAgB,KAAK,kBAAkB;AAC/E,WAAK,mBAAmB;AACxB,WAAK,UAAU,MAAM;AAAA,IACzB,CAAC;AACD,SAAK,GAAG,cAAc,CAAC,SAAoB;AACvC,WAAK,UAAU,KAAK,EAAE;AAAA,IAC1B,CAAC;AACD,SAAK,GAAG,eAAe,MAAM;AACzB,WAAK,UAAU,KAAK,EAAE,MAAM;AAAA,IAChC,CAAC;AACD,SAAK,GAAG,SAAS,OAAO,EAAE,MAAM,YAAY;AACxC,UAAI,UAAU,GAAG;AACb,YAAI,CAAC,4CAAM,CAAC,IAAI,GAAG;AACf,gBAAM,KAAK,UAAU,IAAI;AAAA,QAC7B;AACA,YAAI,KAAK;AAAM,eAAK,OAAO,GAAG,KAAK,IAAI;AAAA,MAC3C;AAAA,IACJ,CAAC;AACD,SAAK,GAAG,WAAW,MAAM;AACrB,gBAAU,aAAa,oBAAoB,gBAAgB,KAAK,kBAAkB;AAAA,IACtF,CAAC;AAAA,EACL;AAAA,EACA,eAAe,UAAgC;AAC3C,WAAO;AAAA,MACH;AAAA,MACA,iBAAiB,KAAK,QAAQ,iBAAiB;AAAA,MAC/C,cAAc,KAAK,QAAQ,cAAc;AAAA,MACzC,kBAAkB,KAAK,QAAQ,kBAAkB;AAAA,MACjD,SAAS,KAAK,QAAQ,SAAS;AAAA,MAC/B,kBAAkB,KAAK,QAAQ,kBAAkB;AAAA,MACjD,YAAY,KAAK,QAAQ,YAAY;AAAA,MACrC,YAAY,KAAK,QAAQ,YAAY;AAAA,IACzC;AAAA,EACJ;AAAA,EACA,YAAY;AACR,SAAK,gBAAgB;AACrB,QAAI,KAAK,EAAE,QAAQ;AACf,WAAK,OAAO,KAAK,SAAS,wBAAwB,KAAK,EAAE,MAAM;AAC/D,WAAK,KAAK,wBAAwB;AAAA,IACtC;AACA,SAAK,uBAAuB,KAAK,EAAE,MAAM,KAAK,MAAM,OAAO,EAAE;AAC7D,SAAK,aAAa;AAAA,EACtB;AACJ;AA9HA,IAAqB,UAArB;AACI,QAAO,cAAc;AACrB,QAAO,SAAsB,CAAC;AAAA,EAC1B,OAAO;AAAA,EACP,MAAM;AAAA,EACN,aAAa;AACjB,CAAC;AACD,QAAO,UAAwB,CAAC;AAAA,EAC5B,MAAM;AAAA,EACN,aAAa;AACjB,GAAG;AAAA,EACC,MAAM;AAAA,EACN,aAAa;AACjB,CAAC;AACD,QAAO,OAAkB,CAAC;AAAA,EACtB,MAAM;AAAA,EACN,UAAU;AAAA,EACV,aAAa;AACjB,CAAC;AACD,QAAO,QAAmD;AAAA,EACtD,iBAAiB;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA,IACT,aAAa;AAAA,EACjB;AAAA,EACA,cAAc;AAAA,IACV,MAAM;AAAA,IACN,SAAS;AAAA,IACT,aAAa;AAAA,EACjB;AAAA,EACA,kBAAkB;AAAA,IACd,MAAM;AAAA,IACN,SAAS;AAAA,IACT,aAAa;AAAA,EACjB;AAAA,EACA,SAAS;AAAA,IACL,MAAM;AAAA,IACN,SAAS;AAAA,IACT,aAAa;AAAA,EACjB;AAAA,EACA,kBAAkB;AAAA,IACd,MAAM;AAAA,IACN,SAAS;AAAA,IACT,aAAa;AAAA,EACjB;AAAA,EACA,YAAY;AAAA,IACR,MAAM;AAAA,IACN,SAAS;AAAA,IACT,aAAa;AAAA,EACjB;AAAA,EACA,YAAY;AAAA,IACR,MAAM;AAAA,IACN,SAAS;AAAA,IACT,aAAa;AAAA,EACjB;AACJ;AAvDJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdA;AAC6C;AAC7C;AAGA,MAAM,mBAAmB,OAAO,mCAAmC,iBAAiB,UAAU;AAC9F,MAAqB,YAArB,cAAsC,sDAAc,CAAyP;AAAA,EAA7S;AAAA;AA+BI,aAAI,mBAAmB,EAAE,MAAM,KAAK,SAAS,aAAa,OAAO,KAAK,SAAS,6BAA6B,GAAG,OAAO,IAAI,MAAM,GAAG,QAAQ,OAAoB,IAAI,EAAE,MAAM,KAAK,SAAS,YAAY;AACrM,iCAAwB,CAAC,EAAE,MAAM,KAAK,MAAM,OAAO,EAAE,CAAC;AACtD,8BAAqB,YAAY;AAC7B,YAAM,UAAU,MAAM,UAAU,aAAa,iBAAiB;AAC9D,YAAM,QAAQ,QAAQ,OAAO,OAAK,EAAE,SAAS,aAAa,EAAE,IAAI,OAAK,EAAE,SAAS,EAAE,QAAQ;AAC1F,YAAM,EAAE,SAAS;AACjB,WAAK,KAAK,KAAK,iCAAK,UAAS,KAAK,KAAnB,EAAuB,MAAM,QAAQ,MAAM;AAC1D,WAAK,QAAQ,IAAI;AAAA,IACrB;AACA,qBAAY,OAAO,WAAoB;AACnC,UAAI,CAAC;AAAkB;AACvB,WAAK,EAAE,SAAS;AAChB,UAAI,CAAC,UAAU,WAAW,WAAW;AACjC,aAAK,UAAU;AACf;AAAA,MACJ;AACA,YAAM,EAAE,UAAU,KAAK;AACvB,UAAI,WAAW,MAAM,UAAU;AAC/B,YAAM,UAAU,MAAM,UAAU,aAAa,iBAAiB;AAC9D,YAAM,SAAS,QAAQ,KAAK,OAAK,EAAE,SAAS,iBAAkB,GAAE,aAAa,UAAU,EAAE,UAAU,OAAO;AAC1G,UAAI;AAAQ,mBAAW,OAAO;AAC9B,UAAI,MAAM,WAAW,UAAU;AAC3B,YAAI,MAAM;AAAQ,gBAAM,MAAM;AAC9B,cAAM,UAAU,QAAQ;AACxB,cAAM,KAAK;AAAA,MACf;AACA,WAAK,UAAU,IAAI;AAAA,IACvB;AAAA;AAAA,EACA,YAAY;AACR,UAAM,UAAU;AAChB,SAAK,GAAG,WAAW,MAAM;AACrB,WAAK,SAAS;AACd,WAAK,UAAU;AAAA,IACnB,CAAC;AACD,SAAK,GAAG,YAAY,MAAM;AACtB,WAAK,KAAK,wBAAwB;AAClC,UAAI,kBAAkB;AAClB,aAAK,EAAE,MAAM,wBAAwB;AACrC,cAAM,EAAE,OAAO,UAAU,KAAK;AAC9B,cAAM,EAAE,WAAW;AACnB,YAAI,eAAe;AAAO,gBAAM,YAAY;AAAA;AACvC,UAAC,MAA2B,MAAM,IAAI,gBAAgB,MAAM;AACjE,cAAM,SAAS,KAAK,IAAI,KAAK;AAC7B,kBAAU,aAAa,iBAAiB,gBAAgB,KAAK,kBAAkB;AAC/E,aAAK,GAAG,WAAW,MAAM;AACrB,oBAAU,aAAa,oBAAoB,gBAAgB,KAAK,kBAAkB;AAAA,QACtF,CAAC;AACD,aAAK,mBAAmB;AACxB,aAAK,UAAU,MAAM;AAAA,MACzB;AAAA,IACJ,CAAC;AACD,SAAK,GAAG,cAAc,CAAC,SAAmB;AACtC,WAAK,UAAU,KAAK,EAAE;AAAA,IAC1B,CAAC;AACD,SAAK,GAAG,eAAe,MAAM;AACzB,WAAK,UAAU,KAAK,EAAE,MAAM;AAAA,IAChC,CAAC;AACD,SAAK,GAAG,SAAS,OAAO,EAAE,MAAM,YAAY;AACxC,UAAI,UAAU,GAAG;AACb,YAAI,CAAC,4CAAM,CAAC,IAAI,GAAG;AACf,gBAAM,KAAK,UAAU,IAAI;AAAA,QAC7B;AACA,YAAI,KAAK;AAAM,eAAK,OAAO,GAAG,KAAK,IAAI;AAAA,MAC3C;AAAA,IACJ,CAAC;AAAA,EACL;AAAA,EACA,eAAe,UAAgC;AAC3C,WAAO;AAAA,MACH;AAAA,MACA,iBAAiB,KAAK,QAAQ,iBAAiB;AAAA,MAC/C,cAAc,KAAK,QAAQ,cAAc;AAAA,MACzC,kBAAkB,KAAK,QAAQ,kBAAkB;AAAA,MACjD,SAAS,KAAK,QAAQ,SAAS;AAAA,MAC/B,kBAAkB,KAAK,QAAQ,kBAAkB;AAAA,MACjD,YAAY,KAAK,QAAQ,YAAY;AAAA,MACrC,YAAY,KAAK,QAAQ,YAAY;AAAA,IACzC;AAAA,EACJ;AAAA,EACA,UAAU,OAAiB;AACvB,QAAI,OAAO;AACP,UAAI,KAAK,SAAS,KAAK,EAAE,OAAO;AAC5B,aAAK,gBAAgB;AACrB,aAAK,OAAO,KAAK,EAAE;AACnB,aAAK,sBAAsB,KAAK,EAAE,MAAM,KAAK,MAAM,OAAO,EAAE;AAC5D,aAAK,aAAa;AAAA,MACtB;AAAA,IACJ,OAAO;AACH,UAAI,KAAK,SAAS,KAAK,SAAS,aAAa;AACzC,aAAK,gBAAgB;AACrB,aAAK,OAAO,KAAK,SAAS;AAC1B,aAAK,sBAAsB,KAAK,EAAE,MAAM,KAAK,MAAM,OAAO,EAAE;AAC5D,aAAK,aAAa;AAAA,MACtB;AAAA,IACJ;AAAA,EACJ;AACJ;AA9HA,IAAqB,WAArB;AACI,SAAO,cAAc;AACrB,SAAO,SAAsB,CAAC;AAAA,EAC1B,OAAO;AAAA,EACP,MAAM;AAAA,EACN,aAAa;AACjB,CAAC;AACD,SAAO,UAAwB,CAAC;AAAA,EAC5B,MAAM;AAAA,EACN,aAAa,aAAa,mBAAmB,uCAAuC;AACxF,CAAC;AACD,SAAO,OAAO,mBAAmB,qDAAY,GAAG,CAAC;AACjD,SAAO,QAAQ,mBAAmB,sDAAa,GAAG,CAAC;AACnD,SAAO,KAAK,mBAAmB,MAAM,mBAAmB,2CAAS,CAAW;AAAA,EAA7C;AAAA;AAC3B,wBAAe,iDAAe,CAAiB;AAAA;AAAA,EAC/C,oBAAoB;AAChB,UAAM,kBAAkB;AACxB,UAAM,MAAM,KAAK,aAAa;AAC9B,UAAM,EAAE,UAAU,KAAK,OAAO;AAC9B,QAAI,OAAO,OAAO;AACd,YAAM,MAAM,UAAU;AACtB,UAAI,YAAY,KAAK;AAAA,IACzB;AAAA,EACJ;AAAA,EACA,SAAS;AACL,UAAM,qBAAqB,iCAAK,KAAK,MAAM,qBAAhB,EAAoC,KAAK,KAAK,aAAa;AACtF,WACI,sEAAC,2CAAS;AAAT,MAAU;AAAA,OAA4C,KAAK,MAAO;AAAA,EAE3E;AACJ,IAAI,2CAAS;AA9BjB;;;;;;;;;;;;;;;;;ACN8D;AAC1B;AAErB,MAAM,WAA8F,4CAAU,CAAqB;AAKlJ;AAJI,GAAO,UAAU,wCAAI;AACrB,GAAO,SAAS,0CAAM;AACtB,GAAO,UAAU,2CAAO;AACxB,GAAO,cAAc,+CAAW;;;;;;;;;;;;;;;;;ACPJ;AACR;AAGT,MAAM,eAAe,6CAAE,CAA2B;AAAA,EAAjE;AAAA;AAsBI,aAAI,EAAE,KAAK,KAAK,KAAK,IAAI,QAAQ,OAAiB;AAAA;AAAA,EAClD,YAAY;AACR,UAAM,UAAU;AAChB,SAAK,GAAG,WAAW,MAAM;AACrB,WAAK,SAAS;AACd,WAAK,UAAU;AAAA,IACnB,CAAC;AACD,SAAK,GAAG,cAAc,CAAC,SAAS;AAC5B,WAAK,EAAE,MAAM;AACb,WAAK,EAAE,SAAS;AAChB,UAAI,CAAC,QAAQ,KAAK,WAAW;AAAG;AAChC,WAAK,EAAE,MAAM,KAAK;AAAA,IACtB,CAAC;AACD,SAAK,GAAG,SAAS,CAAC,EAAE,MAAM,YAAY;AAClC,UAAI,UAAU,GAAG;AACb,YAAI,CAAC,4CAAM,CAAC,IAAI,GAAG;AACf,cAAI;AACA,iBAAK,EAAE,SAAS,KAAK,QAAQ,MAAM,KAAK,EAAE,GAAG;AAAA,UACjD,SAAS,GAAP;AACE,iBAAK,MAAM,CAAC;AACZ;AAAA,UACJ;AAAA,QACJ;AACA,aAAK,OAAO,GAAG,KAAK,EAAE,MAAM;AAAA,MAChC,WAAW,UAAU,GAAG;AACpB,aAAK,EAAE,MAAM;AAAA,MACjB;AAAA,IACJ,CAAC;AAAA,EACL;AACJ;AAlDI,OAAO,cAAc;AACrB,OAAO,SAAsB,CAAC;AAAA,EAC1B,OAAO;AAAA,EACP,MAAM;AAAA,EACN,aAAa;AACjB,GAAG;AAAA,EACC,OAAO;AAAA,EACP,MAAM;AAAA,EACN,aAAa;AACjB,CAAC;AACD,OAAO,UAAwB,CAAC;AAAA,EAC5B,MAAM;AAAA,EACN,aAAa;AACjB,CAAC;AACD,OAAO,OAAkB,CAAC;AAAA,EACtB,MAAM;AAAA,EACN,UAAU;AAAA,EACV,SAAS;AAAA,EACT,aAAa;AACjB,CAAC;;;;;;;;;;;;;;;;;ACxByD;AAC9D;AAEe,MAAM,uBAOX,+CAAa,CAAoB;AAAA,EAOvC,IAAI,KAAK,QAAW;AAChB,SAAK,EAAE,OAAO;AAAA,EAClB;AAAA,EACA,IAAI,OAAO;AACP,WAAO,KAAK,EAAE;AAAA,EAClB;AACJ;AAZI,eAAO,UAAU,wCAAI;AACrB,eAAO,OAAO;AACd,eAAO,SAAS,0CAAM;AACtB,eAAO,UAAU,2CAAO;AACxB,eAAO,cAAc,+CAAW;;;;;;;;;;;;;;;;;ACfI;AAExC,iEAAe,iNAAI,EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACApB,MAAM,MAAO,WAAmB,aAAa;AACtC,MAAM;AAAA,EACT;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,IACA;;;;;;;;;;;;;;;;;UCjBJ;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,sDAAsD;WACtD,sCAAsC,iEAAiE;WACvG;WACA;WACA;WACA;WACA;WACA;;;;;WCzBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACNuC;AACC;AACE;AAC1C;AAEA,MAAM,SAAS,2DAAqB,CAAC,uDAA4B;AAEjE,MAAM,UAAyC,CAAE;AAEjD,MAAM,YAAqD;AAAA,EACvD,KAAM,CAAC,GAAQ,MAAW,IAAI;AAAA,EAC9B,KAAM,CAAC,GAAQ,MAAW,IAAI;AAAA,EAC9B,KAAM,CAAC,GAAQ,MAAW,IAAI;AAClC;AAEA,MAAM,gBAAwC;AAAA,EAC1C,KAAM;AAAA,EACN,KAAM;AAAA,EACN,KAAM;AACV;AAEA,WAAW,OAAO,WAAW;AACzB,UAAQ,OAAO,cAAc,OAAO;AAAA,IAArB;AAAA;AAEX,qBAAU,UAAU;AAAA;AAAA,IADpB,WAAW,QAAQ;AAAE,aAAO,cAAc;AAAA,IAAM;AAAA,EAEpD;AACJ;AAEA,QAAQ,cAAc,wDAAO;AAC7B,QAAQ,eAAe,yDAAQ;AAE/B,iEAAe,YAAY;AACvB,SAAO;AACX,CAAC,EAAC","sources":["webpack://@jspatcher/package-electrosmith/./src/index.ts","webpack://@jspatcher/package-electrosmith/./src/objects/AudioIn.ts","webpack://@jspatcher/package-electrosmith/./src/objects/AudioOut.tsx","webpack://@jspatcher/package-electrosmith/./src/objects/base.ts","webpack://@jspatcher/package-electrosmith/./src/objects/binary.ts","webpack://@jspatcher/package-electrosmith/./src/objects/webaudio_base.ts","webpack://@jspatcher/package-electrosmith/./src/package-info.ts","webpack://@jspatcher/package-electrosmith/./src/sdk.ts","webpack://@jspatcher/package-electrosmith/webpack/bootstrap","webpack://@jspatcher/package-electrosmith/webpack/runtime/create fake namespace object","webpack://@jspatcher/package-electrosmith/webpack/runtime/define property getters","webpack://@jspatcher/package-electrosmith/webpack/runtime/hasOwnProperty shorthand","webpack://@jspatcher/package-electrosmith/webpack/runtime/make namespace object","webpack://@jspatcher/package-electrosmith/./src/index.jspatpkg.ts"],"sourcesContent":["import packageInfo from \"./package-info\";\r\nimport type { IExternalPackage } from \"@jspatcher/jspatcher/src/core/GlobalPackageManager\";\r\n\r\nexport const name = packageInfo.name.split(\"/\").pop().replace(/^package-/, '');\r\n\r\nexport const { author, license, keywords, version, description, jspatcher } = packageInfo;\r\n\r\nexport default { name, author, license, keywords, version, description, ...jspatcher } as IExternalPackage;","import { Bang, isBang } from \"../sdk\";\nimport WebAudioObject from \"./webaudio_base\";\nimport type { IArgsMeta, IInletsMeta, IOutletsMeta, IPropsMeta } from \"@jspatcher/jspatcher/src/core/objects/base/AbstractObject\";\n\nexport interface Constraints extends MediaTrackConstraintSet {\n    deviceId: string;\n    autoGainControl: boolean;\n    channelCount: number;\n    echoCancellation: boolean;\n    latency: number;\n    noiseSuppression: boolean;\n    sampleRate: number;\n    sampleSize: number;\n}\nexport default class AudioIn extends WebAudioObject<MediaStreamAudioSourceNode, { search: string; stream: MediaStream }, [string | Bang], [null, MediaStreamAudioSourceNode], [string], Constraints> {\n    static description = \"Get Audio input from device name or ID\";\n    static inlets: IInletsMeta = [{\n        isHot: true,\n        type: \"anything\",\n        description: \"string to fetch device name or ID, bang to output Node\"\n    }];\n    static outlets: IOutletsMeta = [{\n        type: \"signal\",\n        description: \"Node connection\"\n    }, {\n        type: \"object\",\n        description: \"Instance: MediaStreamAudioSourceNode\"\n    }];\n    static args: IArgsMeta = [{\n        type: \"string\",\n        optional: false,\n        description: \"Device name or ID\"\n    }];\n    static props: IPropsMeta<Omit<Constraints, \"deviceId\">> = {\n        autoGainControl: {\n            type: \"boolean\",\n            default: false,\n            description: \"Automatic gain control\"\n        },\n        channelCount: {\n            type: \"number\",\n            default: undefined,\n            description: \"The number of independent channels of sound\"\n        },\n        echoCancellation: {\n            type: \"boolean\",\n            default: false,\n            description: \"Remove all the sound being played from the input signals recorded by the microphones\"\n        },\n        latency: {\n            type: \"number\",\n            default: undefined,\n            description: \"The latency or latency range, in seconds\"\n        },\n        noiseSuppression: {\n            type: \"boolean\",\n            default: false,\n            description: \"Noise suppression\"\n        },\n        sampleRate: {\n            type: \"number\",\n            default: undefined,\n            description: \"The sample rate in samples per second for the audio data\"\n        },\n        sampleSize: {\n            type: \"number\",\n            default: undefined,\n            description: \"The linear sample size in bits\"\n        }\n    };\n    _ = { node: undefined as MediaStreamAudioSourceNode, stream: undefined as MediaStream, search: undefined as string };\n    handleDeviceChange = async () => {\n        const devices = await navigator.mediaDevices.enumerateDevices();\n        const enums = devices.filter(d => d.kind === \"audioinput\").map(d => d.label || d.deviceId);\n        const { meta } = this;\n        meta.args[0] = { ...AudioIn.args[0], type: \"enum\", enums };\n        this.setMeta(meta);\n    };\n    newSearch = async (search?: string) => {\n        this._.search = search;\n        let deviceId: string;\n        if (search) {\n            const devices = await navigator.mediaDevices.enumerateDevices();\n            const device = devices.find(d => d.kind === \"audioinput\" && (d.deviceId === search || d.label === search));\n            if (device) deviceId = device.deviceId;\n        }\n        this._.stream = await navigator.mediaDevices.getUserMedia({ audio: this.getConstraints(deviceId) });\n        if (this._.stream) this.resetNode();\n    };\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 1;\n            this.outlets = 2;\n        });\n        this.on(\"postInit\", () => {\n            const search = this.box.args[0];\n            navigator.mediaDevices.addEventListener(\"devicechange\", this.handleDeviceChange);\n            this.handleDeviceChange();\n            this.newSearch(search);\n        });\n        this.on(\"updateArgs\", (args: [string?]) => {\n            this.newSearch(args[0]);\n        });\n        this.on(\"updateProps\", () => {\n            this.newSearch(this._.search);\n        });\n        this.on(\"inlet\", async ({ data, inlet }) => {\n            if (inlet === 0) {\n                if (!isBang(data)) {\n                    await this.newSearch(data);\n                }\n                if (this.node) this.outlet(1, this.node);\n            }\n        });\n        this.on(\"destroy\", () => {\n            navigator.mediaDevices.removeEventListener(\"devicechange\", this.handleDeviceChange);\n        });\n    }\n    getConstraints(deviceId?: string): Constraints {\n        return {\n            deviceId,\n            autoGainControl: this.getProp(\"autoGainControl\"),\n            channelCount: this.getProp(\"channelCount\"),\n            echoCancellation: this.getProp(\"echoCancellation\"),\n            latency: this.getProp(\"latency\"),\n            noiseSuppression: this.getProp(\"noiseSuppression\"),\n            sampleRate: this.getProp(\"sampleRate\"),\n            sampleSize: this.getProp(\"sampleSize\")\n        };\n    }\n    resetNode() {\n        this.disconnectAudio();\n        if (this._.stream) {\n            this.node = this.audioCtx.createMediaStreamSource(this._.stream);\n            this.node.channelInterpretation = \"discrete\";\n        }\n        this.outletAudioConnections[0] = { node: this.node, index: 0 };\n        this.connectAudio();\n    }\n}\n","import { React, Bang, DefaultUI, isBang } from \"../sdk\";\nimport WebAudioObject from \"./webaudio_base\";\nimport AudioIn, { Constraints } from \"./AudioIn\";\nimport type { IInletsMeta, IOutletsMeta } from \"@jspatcher/jspatcher/src/core/objects/base/AbstractObject\";\n\nconst supportSetSinkId = window.MediaStreamAudioDestinationNode && HTMLMediaElement.prototype.setSinkId;\nexport default class AudioOut extends WebAudioObject<MediaStreamAudioDestinationNode | AudioDestinationNode, { search?: string; audio?: HTMLAudioElement; msadn?: MediaStreamAudioDestinationNode }, [string | Bang], [null, MediaStreamAudioDestinationNode | AudioDestinationNode], [string], Constraints> {\n    static description = \"Get Audio output from device name or ID (if supported)\";\n    static inlets: IInletsMeta = [{\n        isHot: true,\n        type: \"signal\",\n        description: \"Node connection, string to fetch device name or ID, bang to output Node\"\n    }];\n    static outlets: IOutletsMeta = [{\n        type: \"object\",\n        description: `Instance: ${supportSetSinkId ? \"MediaStreamAudioDestinationNode | \" : \"\"}AudioDestinationNode`\n    }];\n    static args = supportSetSinkId ? AudioIn.args : [];\n    static props = supportSetSinkId ? AudioIn.props : {};\n    static UI = supportSetSinkId ? class AudioOutUI extends DefaultUI<AudioOut> {\n        refContainer = React.createRef<HTMLDivElement>();\n        componentDidMount() {\n            super.componentDidMount();\n            const div = this.refContainer.current;\n            const { audio } = this.object._;\n            if (div && audio) {\n                audio.style.display = \"none\";\n                div.appendChild(audio);\n            }\n        }\n        render() {\n            const textContainerProps = { ...this.props.textContainerProps, ref: this.refContainer };\n            return (\n                <DefaultUI textContainerProps={textContainerProps} {...this.props} />\n            );\n        }\n    } : DefaultUI;\n    _ = supportSetSinkId ? { node: this.audioCtx.destination, msadn: this.audioCtx.createMediaStreamDestination(), audio: new Audio(), search: undefined as string } : { node: this.audioCtx.destination };\n    inletAudioConnections = [{ node: this.node, index: 0 }];\n    handleDeviceChange = async () => {\n        const devices = await navigator.mediaDevices.enumerateDevices();\n        const enums = devices.filter(d => d.kind === \"audiooutput\").map(d => d.label || d.deviceId);\n        const { meta } = this;\n        meta.args[0] = { ...AudioOut.args[0], type: \"enum\", enums };\n        this.setMeta(meta);\n    };\n    newSearch = async (search?: string) => {\n        if (!supportSetSinkId) return;\n        this._.search = search;\n        if (!search || search === \"default\") {\n            this.resetNode();\n            return;\n        }\n        const { audio } = this._;\n        let deviceId = audio.sinkId || \"default\";\n        const devices = await navigator.mediaDevices.enumerateDevices();\n        const device = devices.find(d => d.kind === \"audiooutput\" && (d.deviceId === search || d.label === search));\n        if (device) deviceId = device.deviceId;\n        if (audio.sinkId !== deviceId) {\n            if (audio.played) audio.pause();\n            audio.setSinkId(deviceId);\n            audio.play();\n        }\n        this.resetNode(true);\n    };\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 1;\n            this.outlets = 1;\n        });\n        this.on(\"postInit\", () => {\n            this.node.channelInterpretation = \"discrete\";\n            if (supportSetSinkId) {\n                this._.msadn.channelInterpretation = \"discrete\";\n                const { audio, msadn } = this._;\n                const { stream } = msadn;\n                if (\"srcObject\" in audio) audio.srcObject = stream;\n                else (audio as HTMLAudioElement).src = URL.createObjectURL(stream);\n                const search = this.box.args[0];\n                navigator.mediaDevices.addEventListener(\"devicechange\", this.handleDeviceChange);\n                this.on(\"destroy\", () => {\n                    navigator.mediaDevices.removeEventListener(\"devicechange\", this.handleDeviceChange);\n                });\n                this.handleDeviceChange();\n                this.newSearch(search);\n            }\n        });\n        this.on(\"updateArgs\", (args: [string]) => {\n            this.newSearch(args[0]);\n        });\n        this.on(\"updateProps\", () => {\n            this.newSearch(this._.search);\n        });\n        this.on(\"inlet\", async ({ data, inlet }) => {\n            if (inlet === 0) {\n                if (!isBang(data)) {\n                    await this.newSearch(data);\n                }\n                if (this.node) this.outlet(1, this.node);\n            }\n        });\n    }\n    getConstraints(deviceId?: string): Constraints {\n        return {\n            deviceId,\n            autoGainControl: this.getProp(\"autoGainControl\"),\n            channelCount: this.getProp(\"channelCount\"),\n            echoCancellation: this.getProp(\"echoCancellation\"),\n            latency: this.getProp(\"latency\"),\n            noiseSuppression: this.getProp(\"noiseSuppression\"),\n            sampleRate: this.getProp(\"sampleRate\"),\n            sampleSize: this.getProp(\"sampleSize\")\n        };\n    }\n    resetNode(msadn?: boolean) {\n        if (msadn) {\n            if (this.node !== this._.msadn) {\n                this.disconnectAudio();\n                this.node = this._.msadn;\n                this.inletAudioConnections[0] = { node: this.node, index: 0 };\n                this.connectAudio();\n            }\n        } else {\n            if (this.node !== this.audioCtx.destination) {\n                this.disconnectAudio();\n                this.node = this.audioCtx.destination;\n                this.inletAudioConnections[0] = { node: this.node, index: 0 };\n                this.connectAudio();\n            }\n        }\n    }\n}","import { author, name, version, description } from \"../index\";\r\nimport { BaseObject } from \"../sdk\";\r\n\r\nexport default class Op<I extends any[] = any[], O extends any[] = [any], A extends any[] = any[], P = {}> extends BaseObject<{}, {}, I, O, A, P> {\r\n    static package = name;\r\n    static author = author;\r\n    static version = version;\r\n    static description = description;\r\n}\r\n","import { isBang } from \"../sdk\";\nimport Op from \"./base\";\nimport type { IInletsMeta, IOutletsMeta, IArgsMeta } from \"@jspatcher/jspatcher/src/core/objects/base/AbstractObject\";\n\nexport default class Binary extends Op<[any, any], [any], [any]> {\n    static description = \"Binary Operation\";\n    static inlets: IInletsMeta = [{\n        isHot: true,\n        type: \"anything\",\n        description: \"First element\"\n    }, {\n        isHot: false,\n        type: \"anything\",\n        description: \"Second element\"\n    }];\n    static outlets: IOutletsMeta = [{\n        type: \"anything\",\n        description: \"Result\"\n    }];\n    static args: IArgsMeta = [{\n        type: \"anything\",\n        optional: true,\n        default: 0,\n        description: \"Initial second element\"\n    }];\n    execute: (a: any, b: any) => any;\n    _ = { arg: this.args[0], result: undefined as any };\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 2;\n            this.outlets = 1;\n        });\n        this.on(\"updateArgs\", (args) => {\n            this._.arg = undefined;\n            this._.result = undefined;\n            if (!args || args.length === 0) return;\n            this._.arg = args[0];\n        });\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) {\n                if (!isBang(data)) {\n                    try {\n                        this._.result = this.execute(data, this._.arg);\n                    } catch (e) {\n                        this.error(e);\n                        return;\n                    }\n                }\n                this.outlet(0, this._.result);\n            } else if (inlet === 1) {\n                this._.arg = data;\n            }\n        });\n    }\n}\n","import { author, name, version, description } from \"../index\";\nimport { Bang, DefaultObject } from \"../sdk\";\n\nexport default class WebAudioObject<\n    T extends AudioNode = AudioNode,\n    S = {},\n    I extends [Bang | any, ...any[]] = [Bang],\n    O extends (null | any | T)[] = [],\n    A extends any[] = any[],\n    P = {}\n> extends DefaultObject<{}, S, I, O, A, P> {\n    static package = name;\n    static icon = \"volume up\";\n    static author = author;\n    static version = version;\n    static description = description;\n    _: Partial<{ node: T }> & Record<string, any>;\n    set node(nodeIn: T) {\n        this._.node = nodeIn;\n    }\n    get node() {\n        return this._.node;\n    }\n}\n","import * as JSON from \"../package.json\";\n\nexport default JSON;\n","import type { IJSPatcherSDK } from \"@jspatcher/jspatcher/src/core/SDK\";\r\n\r\nconst sdk = (globalThis as any).jspatcherEnv.sdk as IJSPatcherSDK;\r\nexport const {\r\n    React,\r\n    Patcher,\r\n    Box,\r\n    Line,\r\n    BaseObject,\r\n    BaseUI,\r\n    DefaultObject,\r\n    DefaultUI,\r\n    generateRemotedObject,\r\n    generateDefaultObject,\r\n    generateRemoteObject,\r\n    Bang,\r\n    isBang\r\n} = sdk;\r\n\r\nexport interface Bang extends InstanceType<typeof Bang> {}\r\nexport interface Patcher extends InstanceType<typeof Patcher> {}\r\nexport interface Box extends InstanceType<typeof Box> {}\r\nexport interface Line extends InstanceType<typeof Line> {}\r\nexport interface BaseObject extends InstanceType<typeof BaseObject> {}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import _Binary from \"./objects/binary\";\nimport AudioIn from \"./objects/AudioIn\";\nimport AudioOut from \"./objects/AudioOut\";\nimport { BaseObject, generateDefaultObject } from \"./sdk\";\n\nconst Binary = generateDefaultObject(_Binary as typeof BaseObject);\n\nconst Objects: Record<string, typeof Binary> = { };\n\nconst functions: Record<string, (...args: any[]) => any> = {\n    \"+\" : (a: any, b: any) => a + b,\n    \"*\" : (a: any, b: any) => a * b,\n    \"/\" : (a: any, b: any) => a / b,\n}\n\nconst functionNames: Record<string, string> = {\n    \"+\" : \"Add\",\n    \"*\" : \"Mul\",\n    \"/\" : \"Div\",\n};\n\nfor (const key in functions) {\n    Objects[key] = class extends Binary {\n        static get _name() { return functionNames[key]; }\n        execute = functions[key];\n    }\n}\n\nObjects['audioIn~'] = AudioIn;\nObjects['audioOut~'] = AudioOut;\n\nexport default async () => {\n    return Objects;\n};\n"],"names":[],"sourceRoot":""}