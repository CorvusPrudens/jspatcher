{"version":3,"file":"js/e420ff6929ac4dee4f98.worker.js","mappings":"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","sources":["webpack://JSPatcher/./src/core/workers/ProxyWorker.ts","webpack://JSPatcher/webpack/bootstrap","webpack://JSPatcher/webpack/runtime/create fake namespace object","webpack://JSPatcher/webpack/runtime/define property getters","webpack://JSPatcher/webpack/runtime/ensure chunk","webpack://JSPatcher/webpack/runtime/get javascript chunk filename","webpack://JSPatcher/webpack/runtime/global","webpack://JSPatcher/webpack/runtime/hasOwnProperty shorthand","webpack://JSPatcher/webpack/runtime/make namespace object","webpack://JSPatcher/webpack/runtime/node module decorator","webpack://JSPatcher/webpack/runtime/publicPath","webpack://JSPatcher/webpack/runtime/importScripts chunk loading","webpack://JSPatcher/./src/core/workers/LibMusicXML.worker.ts"],"sourcesContent":["import { ProxyWorker } from \"./ProxyWorker.types\";\nimport { TypedMessageEvent, MessagePortResponse, MessagePortRequest } from \"./Worker\";\n\nconst Worker = class ProxyWorker {\n    static fnNames: string[] = [];\n    _disposed = false;\n    constructor() {\n        const resolves: Record<number, ((...args: any[]) => any)> = {};\n        const rejects: Record<number, ((...args: any[]) => any)> = {};\n        let messagePortRequestId = -1;\n        const handleDisposed = () => {\n            removeEventListener(\"message\", handleMessage);\n            close();\n        };\n        const handleMessage = async (e: TypedMessageEvent<MessagePortResponse & MessagePortRequest>) => {\n            const { id, call, args, value, error } = e.data;\n            if (call) {\n                const r: MessagePortResponse = { id };\n                try {\n                    r.value = await (this as any)[call](...args);\n                } catch (e) {\n                    r.error = e;\n                }\n                postMessage(r as any);\n                if (this._disposed) handleDisposed();\n            } else {\n                if (error) rejects[id]?.(error);\n                else if (resolves[id]) resolves[id]?.(value);\n                delete resolves[id];\n                delete rejects[id];\n            }\n        };\n        const call = (call: string, ...args: any[]) => new Promise<any>((resolve, reject) => {\n            const id = messagePortRequestId--;\n            resolves[id] = resolve;\n            rejects[id] = reject;\n            postMessage({ id, call, args });\n        });\n        const Ctor = (this.constructor as typeof ProxyWorker);\n        Ctor.fnNames.forEach(name => (this as any)[name] = (...args: any[]) => call(name, ...args));\n        addEventListener(\"message\", handleMessage);\n    }\n} as typeof ProxyWorker;\n\nexport default Worker;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"js/\" + \"e05b5ec401b9493def27\" + \".worker.js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"../\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t\"LibMusicXML.worker\": 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkJSPatcher\"] = self[\"webpackChunkJSPatcher\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","import type * as MusicXMLModule from \"@grame/libmusicxml\";\nimport { ILibMusicXMLWorker } from \"./LibMusicXMLWorker.types\";\nimport ProxyWorker from \"./ProxyWorker\";\n\nclass LibMusicXML extends ProxyWorker<ILibMusicXMLWorker> implements ILibMusicXMLWorker {\n    private module: MusicXMLModule;\n    private adapter: InstanceType<MusicXMLModule[\"libMusicXMLAdapter\"]>;\n    resolves: (() => void)[] = [];\n    rejects: ((reason?: any) => void)[] = [];\n    isBusy = false;\n    isReady = false;\n\n    async init() {\n        if (this.isReady) return Promise.resolve();\n        if (this.isBusy) {\n            return new Promise<void>((resolve, reject) => {\n                this.resolves.push(resolve);\n                this.rejects.push(reject);\n            });\n        }\n        try {\n            this.isBusy = true;\n            const locateFile = (url: string, dir: string) => \"../deps/\" + url;\n            const Module = (await import(\"@grame/libmusicxml\") as any).default as typeof MusicXMLModule;\n            return new Promise<void>((resolve, reject) => {\n                this.resolves.push(resolve);\n                this.rejects.push(reject);\n                const module = new Module({ locateFile });\n                module.onRuntimeInitialized = () => {\n                    this.module = module;\n                    const Adapter = this.module.libMusicXMLAdapter;\n                    try {\n                        this.adapter = new Adapter();\n                        this.isReady = true;\n                        this.isBusy = false;\n                        this.resolves.forEach(r => r());\n                    } catch (error) {\n                        this.rejects.forEach(r => r(error));\n                    }\n                };\n            });\n        } catch (error) {\n            this.rejects.forEach(r => r(error));\n        }\n        return Promise.resolve();\n    }\n\n    libVersion() { return this.adapter.libVersion(); }\n    libVersionStr() { return this.adapter.libVersionStr(); }\n\n    musicxml2guidoVersion() { return this.adapter.musicxml2guidoVersion(); }\n    musicxml2guidoVersionStr() { return this.adapter.musicxml2guidoVersionStr(); }\n\n    string2guido(xml: string, genBars: boolean) { return this.adapter.string2guido(xml, genBars); }\n    xmlStringTranspose(xml: string, interval: number) { return this.adapter.xmlStringTranspose(xml, interval); }\n}\n// eslint-disable-next-line no-new\nnew LibMusicXML();\n"],"names":[],"sourceRoot":""}