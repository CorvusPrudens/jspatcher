{"version":3,"file":"js/57e4115a5ff45fae0108.js","mappings":";;;;;;;;;;;;;;;AAAgD;AACR;AAOzB,2BAA2B,uDAAY,CAA8C;AAAA,eACnF,gBAAgB,SAAuG;AAChI,WAAO,IAAI,KAAK,SAAS,KAAK,QAAQ,KAAK;AAAA;AAAA,QAGzC,YAAY;AACd,UAAM,SAAS,IAAI,iDAAW,CAAC;AAC/B,WAAO,OAAO;AAAA;AAAA,QAEZ,KAAK,MAAoB;AAC3B,QAAI;AAAM,WAAK,YAAY,IAAI,gBAAgB,MAAM,IAAI,SAAS,MAAM;AAAA;AACnE,WAAK,YAAY;AACtB,SAAK,WAAW;AAChB,SAAK,KAAK;AACV,WAAO;AAAA;AAAA,QAEL,YAAY;AACd,WAAQ,OAAM,MAAM,KAAK,YAAY;AAAA;AAAA,EAEzC,QAAQ;AACJ,UAAM,eAAe,IAAI,aAAa,EAAE,KAAK,KAAK,KAAK,SAAS,KAAK,SAAS,MAAM,KAAK;AACzF,iBAAa,YAAY,KAAK;AAC9B,WAAO;AAAA;AAAA","sources":["webpack://JSPatcher/./src/core/image/PatcherImage.ts"],"sourcesContent":["import FileInstance from \"../file/FileInstance\";\nimport ImageEditor from \"./ImageEditor\";\nimport type PersistentProjectFile from \"../file/PersistentProjectFile\";\nimport type { IJSPatcherEnv } from \"../Env\";\nimport type { IProject } from \"../Project\";\n\nexport interface PatcherImageEventMap {}\n\nexport default class PatcherImage extends FileInstance<PatcherImageEventMap, PersistentProjectFile> {\n    static async fromProjectItem(options: { file: PersistentProjectFile; env: IJSPatcherEnv; project?: IProject; instanceId?: string }) {\n        return new this(options).init(options.file.data);\n    }\n    objectURL: string;\n    async getEditor() {\n        const editor = new ImageEditor(this);\n        return editor.init();\n    }\n    async init(data?: ArrayBuffer) {\n        if (data) this.objectURL = URL.createObjectURL(await new Response(data).blob());\n        else this.objectURL = \"\";\n        this._isReady = true;\n        this.emit(\"ready\");\n        return this;\n    }\n    async serialize() {\n        return (await fetch(this.objectURL)).arrayBuffer();\n    }\n    clone() {\n        const patcherImage = new PatcherImage({ env: this.env, project: this.project, file: this.file });\n        patcherImage.objectURL = this.objectURL;\n        return patcherImage;\n    }\n}\n"],"names":[],"sourceRoot":""}