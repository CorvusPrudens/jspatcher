{"version":3,"file":"index.jspatpkg.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,+BAA+B;AAChE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB;;;AAGtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,2DAA2D,OAAO;AAClE;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;;AAEzB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,cAAc;;AAEd;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,+CAA+C,OAAO;AACtD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,MAAM;;AAEN;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0DAA0D,OAAO;AACjE;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA,4BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;;AAEA,+CAA+C,EAAE,aAAa,EAAE;AAChE;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,4DAA4D,OAAO;AACnE;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA,6BAA6B;;AAE7B;;AAEA,8BAA8B;AAC9B;AACA,cAAc,OAAO;AACrB;;AAEA;AACA,gEAAgE;AAChE,kBAAkB;AAClB,kEAAkE;AAClE,kBAAkB;AAClB,mEAAmE;AACnE;;AAEA,wDAAwD;AACxD;;AAEA;;AAEA;AACA,SAAS;AACT;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mCAAmC;AACnC;AACA,uBAAuB;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AA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A;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,4BAA4B;AAChD;AACA;AACA;AACA;;AAEA;;AAEA,qBAAqB,6BAA6B;AAClD;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;ACvGa;;AAEb;AACA;;AAEA;AACA;AACA,sDAAsD;;AAEtD;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;ACtCa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACVa;;AAEb;AACA;AACA,cAAc,KAAwC,GAAG,sBAAiB,GAAG,CAAI;;AAEjF;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACXa;;AAEb;AACA;AACA;;AAEA;AACA,kDAAkD;AAClD;;AAEA;AACA,0CAA0C;AAC1C;;AAEA;;AAEA;AACA,iFAAiF;AACjF;;AAEA;;AAEA;AACA,aAAa;AACb;;AAEA;AACA,aAAa;AACb;;AAEA;AACA,aAAa;AACb;;AAEA;;AAEA;AACA,yDAAyD;AACzD,IAAI;;AAEJ;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACrEa;;AAEb;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;UCfA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,sDAAsD;WACtD,sCAAsC,iEAAiE;WACvG;WACA;WACA;WACA;WACA;WACA;;;;;WCzBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;;;ACNwC;AACJ;AACY;AACE;AACP;AACL;AACA;AAetC;AAEA,iEAAe,YAAa;AAAA,EACxB,OAAO;AAAP,EACA,MAAM;AAAN,EACA,UAAU,sDAAK;AAAL,EACV,gBAAgB,4DAAW;AAAX,EAChB,iBAAiB,6DAAY;AAAZ,EACjB,UAAU,4DAAM;AAAN,EACV,UAAU,uDAAM;AAAN","sources":["webpack://@electrosmith/package-ui/./node_modules/color-js/color.js","webpack://@electrosmith/package-ui/./src/ui/ui.scss","webpack://@electrosmith/package-ui/./node_modules/css-loader/dist/runtime/api.js","webpack://@electrosmith/package-ui/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://@electrosmith/package-ui/../../../frontend/src/core/message.ts","webpack://@electrosmith/package-ui/./src/index.ts","webpack://@electrosmith/package-ui/./src/objects/base-live.ts","webpack://@electrosmith/package-ui/./src/objects/base.ts","webpack://@electrosmith/package-ui/./src/objects/button-live.ts","webpack://@electrosmith/package-ui/./src/objects/message.ts","webpack://@electrosmith/package-ui/./src/objects/number.ts","webpack://@electrosmith/package-ui/./src/objects/scope.ts","webpack://@electrosmith/package-ui/./src/objects/spectrogram.ts","webpack://@electrosmith/package-ui/./src/objects/spectroscope.ts","webpack://@electrosmith/package-ui/./src/objects/toggle.ts","webpack://@electrosmith/package-ui/./src/package-info.ts","webpack://@electrosmith/package-ui/./src/sdk.ts","webpack://@electrosmith/package-ui/./src/ui/base-live.tsx","webpack://@electrosmith/package-ui/./src/ui/button-live.tsx","webpack://@electrosmith/package-ui/./src/ui/button.tsx","webpack://@electrosmith/package-ui/./src/ui/message.tsx","webpack://@electrosmith/package-ui/./src/ui/number.tsx","webpack://@electrosmith/package-ui/./src/ui/scope.tsx","webpack://@electrosmith/package-ui/./src/ui/spectrogram.tsx","webpack://@electrosmith/package-ui/./src/ui/spectroscope.tsx","webpack://@electrosmith/package-ui/./src/ui/toggle.tsx","webpack://@electrosmith/package-ui/./src/utils.ts","webpack://@electrosmith/package-ui/./src/ui/ui.scss?29bd","webpack://@electrosmith/package-ui/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://@electrosmith/package-ui/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://@electrosmith/package-ui/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://@electrosmith/package-ui/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://@electrosmith/package-ui/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://@electrosmith/package-ui/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://@electrosmith/package-ui/webpack/bootstrap","webpack://@electrosmith/package-ui/webpack/runtime/compat get default export","webpack://@electrosmith/package-ui/webpack/runtime/create fake namespace object","webpack://@electrosmith/package-ui/webpack/runtime/define property getters","webpack://@electrosmith/package-ui/webpack/runtime/hasOwnProperty shorthand","webpack://@electrosmith/package-ui/webpack/runtime/make namespace object","webpack://@electrosmith/package-ui/./src/index.jspatpkg.ts"],"sourcesContent":["// Copyright (c) 2008-2013, Andrew Brehaut, Tim Baumann, Matt Wilson, \n//                          Simon Heimler, Michel Vielmetter \n//\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n// * Redistributions of source code must retain the above copyright notice,\n//   this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above copyright notice,\n//   this list of conditions and the following disclaimer in the documentation\n//   and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\n// color.js - version 1.0.1\n//\n// HSV <-> RGB code based on code from http://www.cs.rit.edu/~ncs/color/t_convert.html\n// object function created by Douglas Crockford.\n// Color scheme degrees taken from the colorjack.com colorpicker\n//\n// HSL support kindly provided by Tim Baumann - http://github.com/timjb\n\n// create namespaces\n/*global net */\nif (\"undefined\" == typeof net) {\n    var net = {};\n}\nif (!net.brehaut) {\n    net.brehaut = {};\n}\n\n// this module function is called with net.brehaut as 'this'\n(function() {\n    \"use strict\";\n    // Constants\n\n    // css_colors maps color names onto their hex values\n    // these names are defined by W3C\n    \n    var css_colors = {aliceblue:'#F0F8FF',antiquewhite:'#FAEBD7',aqua:'#00FFFF',aquamarine:'#7FFFD4',azure:'#F0FFFF',beige:'#F5F5DC',bisque:'#FFE4C4',black:'#000000',blanchedalmond:'#FFEBCD',blue:'#0000FF',blueviolet:'#8A2BE2',brown:'#A52A2A',burlywood:'#DEB887',cadetblue:'#5F9EA0',chartreuse:'#7FFF00',chocolate:'#D2691E',coral:'#FF7F50',cornflowerblue:'#6495ED',cornsilk:'#FFF8DC',crimson:'#DC143C',cyan:'#00FFFF',darkblue:'#00008B',darkcyan:'#008B8B',darkgoldenrod:'#B8860B',darkgray:'#A9A9A9',darkgrey:'#A9A9A9',darkgreen:'#006400',darkkhaki:'#BDB76B',darkmagenta:'#8B008B',darkolivegreen:'#556B2F',darkorange:'#FF8C00',darkorchid:'#9932CC',darkred:'#8B0000',darksalmon:'#E9967A',darkseagreen:'#8FBC8F',darkslateblue:'#483D8B',darkslategray:'#2F4F4F',darkslategrey:'#2F4F4F',darkturquoise:'#00CED1',darkviolet:'#9400D3',deeppink:'#FF1493',deepskyblue:'#00BFFF',dimgray:'#696969',dimgrey:'#696969',dodgerblue:'#1E90FF',firebrick:'#B22222',floralwhite:'#FFFAF0',forestgreen:'#228B22',fuchsia:'#FF00FF',gainsboro:'#DCDCDC',ghostwhite:'#F8F8FF',gold:'#FFD700',goldenrod:'#DAA520',gray:'#808080',grey:'#808080',green:'#008000',greenyellow:'#ADFF2F',honeydew:'#F0FFF0',hotpink:'#FF69B4',indianred:'#CD5C5C',indigo:'#4B0082',ivory:'#FFFFF0',khaki:'#F0E68C',lavender:'#E6E6FA',lavenderblush:'#FFF0F5',lawngreen:'#7CFC00',lemonchiffon:'#FFFACD',lightblue:'#ADD8E6',lightcoral:'#F08080',lightcyan:'#E0FFFF',lightgoldenrodyellow:'#FAFAD2',lightgray:'#D3D3D3',lightgrey:'#D3D3D3',lightgreen:'#90EE90',lightpink:'#FFB6C1',lightsalmon:'#FFA07A',lightseagreen:'#20B2AA',lightskyblue:'#87CEFA',lightslategray:'#778899',lightslategrey:'#778899',lightsteelblue:'#B0C4DE',lightyellow:'#FFFFE0',lime:'#00FF00',limegreen:'#32CD32',linen:'#FAF0E6',magenta:'#FF00FF',maroon:'#800000',mediumaquamarine:'#66CDAA',mediumblue:'#0000CD',mediumorchid:'#BA55D3',mediumpurple:'#9370D8',mediumseagreen:'#3CB371',mediumslateblue:'#7B68EE',mediumspringgreen:'#00FA9A',mediumturquoise:'#48D1CC',mediumvioletred:'#C71585',midnightblue:'#191970',mintcream:'#F5FFFA',mistyrose:'#FFE4E1',moccasin:'#FFE4B5',navajowhite:'#FFDEAD',navy:'#000080',oldlace:'#FDF5E6',olive:'#808000',olivedrab:'#6B8E23',orange:'#FFA500',orangered:'#FF4500',orchid:'#DA70D6',palegoldenrod:'#EEE8AA',palegreen:'#98FB98',paleturquoise:'#AFEEEE',palevioletred:'#D87093',papayawhip:'#FFEFD5',peachpuff:'#FFDAB9',peru:'#CD853F',pink:'#FFC0CB',plum:'#DDA0DD',powderblue:'#B0E0E6',purple:'#800080',rebeccapurple:'#663399',red:'#FF0000',rosybrown:'#BC8F8F',royalblue:'#4169E1',saddlebrown:'#8B4513',salmon:'#FA8072',sandybrown:'#F4A460',seagreen:'#2E8B57',seashell:'#FFF5EE',sienna:'#A0522D',silver:'#C0C0C0',skyblue:'#87CEEB',slateblue:'#6A5ACD',slategray:'#708090',slategrey:'#708090',snow:'#FFFAFA',springgreen:'#00FF7F',steelblue:'#4682B4',tan:'#D2B48C',teal:'#008080',thistle:'#D8BFD8',tomato:'#FF6347',turquoise:'#40E0D0',violet:'#EE82EE',wheat:'#F5DEB3',white:'#FFFFFF',whitesmoke:'#F5F5F5',yellow:'#FFFF00',yellowgreen:'#9ACD32'};\n\n\n    // CSS value regexes, according to http://www.w3.org/TR/css3-values/\n    var css_integer = '(?:\\\\+|-)?\\\\d+';\n    var css_float = '(?:\\\\+|-)?\\\\d*\\\\.\\\\d+';\n    var css_number = '(?:' + css_integer + ')|(?:' + css_float + ')';\n    css_integer = '(' + css_integer + ')';\n    css_float = '(' + css_float + ')';\n    css_number = '(' + css_number + ')';\n    var css_percentage = css_number + '%';\n    var css_whitespace = '\\\\s*?';\n\n    // http://www.w3.org/TR/2003/CR-css3-color-20030514/\n    var hsl_hsla_regex = new RegExp([\n        '^hsl(a?)\\\\(', css_number, ',', css_percentage, ',', css_percentage, '(,(', css_number, '))?\\\\)$'\n    ].join(css_whitespace));\n    var rgb_rgba_integer_regex = new RegExp([\n        '^rgb(a?)\\\\(', css_integer, ',', css_integer, ',', css_integer, '(,(', css_number, '))?\\\\)$'\n    ].join(css_whitespace));\n    var rgb_rgba_percentage_regex = new RegExp([\n        '^rgb(a?)\\\\(', css_percentage, ',', css_percentage, ',', css_percentage, '(,(', css_number, '))?\\\\)$'\n    ].join(css_whitespace));\n\n    // Package wide variables\n\n    // becomes the top level prototype object\n    var color;\n\n    /* registered_models contains the template objects for all the\n     * models that have been registered for the color class.\n     */\n    var registered_models = [];\n\n\n    /* factories contains methods to create new instance of\n     * different color models that have been registered.\n     */\n    var factories = {};\n\n    // Utility functions\n\n    /* object is Douglas Crockfords object function for prototypal\n     * inheritance.\n     */\n    if (!this.object) {\n        this.object = function(o) {\n            function F() {}\n            F.prototype = o;\n            return new F();\n        };\n    }\n    var object = this.object;\n\n    /* takes a value, converts to string if need be, then pads it\n     * to a minimum length.\n     */\n    function pad(val, len) {\n        val = val.toString();\n        var padded = [];\n\n        for (var i = 0, j = Math.max(len - val.length, 0); i < j; i++) {\n            padded.push('0');\n        }\n\n        padded.push(val);\n        return padded.join('');\n    }\n\n\n    /* takes a string and returns a new string with the first letter\n     * capitalised\n     */\n    function capitalise(s) {\n        return s.slice(0, 1).toUpperCase() + s.slice(1);\n    }\n\n    /* removes leading and trailing whitespace\n     */\n    function trim(str) {\n        return str.replace(/^\\s+|\\s+$/g, '');\n    }\n\n    /* used to apply a method to object non-destructively by\n     * cloning the object and then apply the method to that\n     * new object\n     */\n    function cloneOnApply(meth) {\n        return function() {\n            var cloned = this.clone();\n            meth.apply(cloned, arguments);\n            return cloned;\n        };\n    }\n\n\n    /* registerModel is used to add additional representations\n     * to the color code, and extend the color API with the new\n     * operation that model provides. see before for examples\n     */\n    function registerModel(name, model) {\n        var proto = object(color);\n        var fields = []; // used for cloning and generating accessors\n\n        var to_meth = 'to' + capitalise(name);\n\n        function convertAndApply(meth) {\n            return function() {\n                return meth.apply(this[to_meth](), arguments);\n            };\n        }\n\n        for (var key in model)\n            if (model.hasOwnProperty(key)) {\n                proto[key] = model[key];\n                var prop = proto[key];\n\n                if (key.slice(0, 1) == '_') {\n                    continue;\n                }\n                if (!(key in color) && \"function\" == typeof prop) {\n                    // the method found on this object is a) public and b) not\n                    // currently supported by the color object. Create an impl that\n                    // calls the toModel function and passes that new object\n                    // onto the correct method with the args.\n                    color[key] = convertAndApply(prop);\n                } else if (\"function\" != typeof prop) {\n                    // we have found a public property. create accessor methods\n                    // and bind them up correctly\n                    fields.push(key);\n                    var getter = 'get' + capitalise(key);\n                    var setter = 'set' + capitalise(key);\n\n                    color[getter] = convertAndApply(\n                        proto[getter] = (function(key) {\n                            return function() {\n                                return this[key];\n                            };\n                        })(key)\n                    );\n\n                    color[setter] = convertAndApply(\n                        proto[setter] = (function(key) {\n                            return function(val) {\n                                var cloned = this.clone();\n                                cloned[key] = val;\n                                return cloned;\n                            };\n                        })(key)\n                    );\n                }\n            } // end of for over model\n\n            // a method to create a new object - largely so prototype chains dont\n            // get insane. This uses an unrolled 'object' so that F is cached\n            // for later use. this is approx a 25% speed improvement\n\n        function F() {}\n        F.prototype = proto;\n\n        function factory() {\n            return new F();\n        }\n        factories[name] = factory;\n\n        proto.clone = function() {\n            var cloned = factory();\n            for (var i = 0, j = fields.length; i < j; i++) {\n                var key = fields[i];\n                cloned[key] = this[key];\n            }\n            return cloned;\n        };\n\n        color[to_meth] = function() {\n            return factory();\n        };\n\n        registered_models.push(proto);\n\n        return proto;\n    } // end of registerModel\n\n    // Template Objects\n\n    /* color is the root object in the color hierarchy. It starts\n     * life as a very simple object, but as color models are\n     * registered it has methods programmatically added to manage\n     * conversions as needed.\n     */\n    color = {\n        /* fromObject takes an argument and delegates to the internal\n         * color models to try to create a new instance.\n         */\n        fromObject: function(o) {\n            if (!o) {\n                return object(color);\n            }\n\n            for (var i = 0, j = registered_models.length; i < j; i++) {\n                var nu = registered_models[i].fromObject(o);\n                if (nu) {\n                    return nu;\n                }\n            }\n\n            return object(color);\n        },\n\n        toString: function() {\n            return this.toCSS();\n        }\n    };\n\n    var transparent = null; // defined with an RGB later.\n\n    /* RGB is the red green blue model. This definition is converted\n     * to a template object by registerModel.\n     */\n    registerModel('RGB', {\n        red: 0,\n        green: 0,\n        blue: 0,\n        alpha: 0,\n\n        /* getLuminance returns a value between 0 and 1, this is the\n         * luminance calcuated according to\n         * http://www.poynton.com/notes/colour_and_gamma/ColorFAQ.html#RTFToC9\n         */\n        getLuminance: function() {\n            return (this.red * 0.2126) + (this.green * 0.7152) + (this.blue * 0.0722);\n        },\n\n        /* does an alpha based blend of color onto this. alpha is the\n         * amount of 'color' to use. (0 to 1)\n         */\n        blend: function(color, alpha) {\n            color = color.toRGB();\n            alpha = Math.min(Math.max(alpha, 0), 1);\n            var rgb = this.clone();\n\n            rgb.red = (rgb.red * (1 - alpha)) + (color.red * alpha);\n            rgb.green = (rgb.green * (1 - alpha)) + (color.green * alpha);\n            rgb.blue = (rgb.blue * (1 - alpha)) + (color.blue * alpha);\n            rgb.alpha = (rgb.alpha * (1 - alpha)) + (color.alpha * alpha);\n\n            return rgb;\n        },\n\n        /* fromObject attempts to convert an object o to and RGB\n         * instance. This accepts an object with red, green and blue\n         * members or a string. If the string is a known CSS color name\n         * or a hexdecimal string it will accept it.\n         */\n        fromObject: function(o) {\n            if (o instanceof Array) {\n                return this._fromRGBArray(o);\n            }\n            if (\"string\" == typeof o) {\n                return this._fromCSS(trim(o));\n            }\n            if (o.hasOwnProperty('red') &&\n                o.hasOwnProperty('green') &&\n                o.hasOwnProperty('blue')) {\n                return this._fromRGB(o);\n            }\n            // nothing matchs, not an RGB object\n        },\n\n        _stringParsers: [\n            // CSS RGB(A) literal:\n            function(css) {\n                css = trim(css);\n\n                var withInteger = match(rgb_rgba_integer_regex, 255);\n                if (withInteger) {\n                    return withInteger;\n                }\n                return match(rgb_rgba_percentage_regex, 100);\n\n                function match(regex, max_value) {\n                    var colorGroups = css.match(regex);\n\n                    // If there is an \"a\" after \"rgb\", there must be a fourth parameter and the other way round\n                    if (!colorGroups || (!!colorGroups[1] + !!colorGroups[5] === 1)) {\n                        return null;\n                    }\n\n                    var rgb = factories.RGB();\n                    rgb.red = Math.min(1, Math.max(0, colorGroups[2] / max_value));\n                    rgb.green = Math.min(1, Math.max(0, colorGroups[3] / max_value));\n                    rgb.blue = Math.min(1, Math.max(0, colorGroups[4] / max_value));\n                    rgb.alpha = !!colorGroups[5] ? Math.min(Math.max(parseFloat(colorGroups[6]), 0), 1) : 1;\n\n                    return rgb;\n                }\n            },\n\n            function(css) {\n                var lower = css.toLowerCase();\n                if (lower in css_colors) {\n                    css = css_colors[lower];\n                }\n\n                if (!css.match(/^#([0-9a-fA-F]{3}|[0-9a-fA-F]{6})$/)) {\n                    return;\n                }\n\n                css = css.replace(/^#/, '');\n\n                var bytes = css.length / 3;\n\n                var max = Math.pow(16, bytes) - 1;\n\n                var rgb = factories.RGB();\n                rgb.red = parseInt(css.slice(0, bytes), 16) / max;\n                rgb.green = parseInt(css.slice(bytes * 1, bytes * 2), 16) / max;\n                rgb.blue = parseInt(css.slice(bytes * 2), 16) / max;\n                rgb.alpha = 1;\n                return rgb;\n            },\n\n            function(css) {\n                if (css.toLowerCase() !== 'transparent') return;\n\n                return transparent;\n            }\n        ],\n\n        _fromCSS: function(css) {\n            var color = null;\n            for (var i = 0, j = this._stringParsers.length; i < j; i++) {\n                color = this._stringParsers[i](css);\n                if (color) return color;\n            }\n        },\n\n        _fromRGB: function(RGB) {\n            var newRGB = factories.RGB();\n\n            newRGB.red = RGB.red;\n            newRGB.green = RGB.green;\n            newRGB.blue = RGB.blue;\n            newRGB.alpha = RGB.hasOwnProperty('alpha') ? RGB.alpha : 1;\n\n            return newRGB;\n        },\n\n        _fromRGBArray: function(RGB) {\n            var newRGB = factories.RGB();\n\n            newRGB.red = Math.max(0, Math.min(1, RGB[0] / 255));\n            newRGB.green = Math.max(0, Math.min(1, RGB[1] / 255));\n            newRGB.blue = Math.max(0, Math.min(1, RGB[2] / 255));\n            newRGB.alpha = RGB[3] !== undefined ? Math.max(0, Math.min(1, RGB[3])) : 1;\n\n            return newRGB;\n        },\n\n        // convert to a CSS string. defaults to two bytes a value\n        toCSSHex: function(bytes) {\n            bytes = bytes || 2;\n\n            var max = Math.pow(16, bytes) - 1;\n            var css = [\n                \"#\",\n                pad(Math.round(this.red * max).toString(16).toUpperCase(), bytes),\n                pad(Math.round(this.green * max).toString(16).toUpperCase(), bytes),\n                pad(Math.round(this.blue * max).toString(16).toUpperCase(), bytes)\n            ];\n\n            return css.join('');\n        },\n\n        toCSS: function(bytes) {\n            if (this.alpha === 1) return this.toCSSHex(bytes);\n\n            var max = 255;\n\n            var components = [\n                'rgba(',\n                Math.max(0, Math.min(max, Math.round(this.red * max))), ',',\n                Math.max(0, Math.min(max, Math.round(this.green * max))), ',',\n                Math.max(0, Math.min(max, Math.round(this.blue * max))), ',',\n                Math.max(0, Math.min(1, this.alpha)),\n                ')'\n            ];\n\n            return components.join('');\n        },\n\n        toHSV: function() {\n            var hsv = factories.HSV();\n            var min, max, delta;\n\n            min = Math.min(this.red, this.green, this.blue);\n            max = Math.max(this.red, this.green, this.blue);\n            hsv.value = max; // v\n\n            delta = max - min;\n\n            if (delta == 0) { // white, grey, black\n                hsv.hue = hsv.saturation = 0;\n            } else { // chroma\n                hsv.saturation = delta / max;\n\n                if (this.red == max) {\n                    hsv.hue = (this.green - this.blue) / delta; // between yellow & magenta\n                } else if (this.green == max) {\n                    hsv.hue = 2 + (this.blue - this.red) / delta; // between cyan & yellow\n                } else {\n                    hsv.hue = 4 + (this.red - this.green) / delta; // between magenta & cyan\n                }\n\n                hsv.hue = ((hsv.hue * 60) + 360) % 360; // degrees\n            }\n\n            hsv.alpha = this.alpha;\n\n            return hsv;\n        },\n        toHSL: function() {\n            return this.toHSV().toHSL();\n        },\n\n        toRGB: function() {\n            return this.clone();\n        }\n    });\n\n    transparent = color.fromObject({\n        red: 0,\n        blue: 0,\n        green: 0,\n        alpha: 0\n    });\n\n\n    /* Like RGB above, this object describes what will become the HSV\n     * template object. This model handles hue, saturation and value.\n     * hue is the number of degrees around the color wheel, saturation\n     * describes how much color their is and value is the brightness.\n     */\n    registerModel('HSV', {\n        hue: 0,\n        saturation: 0,\n        value: 1,\n        alpha: 1,\n\n        shiftHue: cloneOnApply(function(degrees) {\n            var hue = (this.hue + degrees) % 360;\n            if (hue < 0) {\n                hue = (360 + hue) % 360;\n            }\n\n            this.hue = hue;\n        }),\n\n        devalueByAmount: cloneOnApply(function(val) {\n            this.value = Math.min(1, Math.max(this.value - val, 0));\n        }),\n\n        devalueByRatio: cloneOnApply(function(val) {\n            this.value = Math.min(1, Math.max(this.value * (1 - val), 0));\n        }),\n\n        valueByAmount: cloneOnApply(function(val) {\n            this.value = Math.min(1, Math.max(this.value + val, 0));\n        }),\n\n        valueByRatio: cloneOnApply(function(val) {\n            this.value = Math.min(1, Math.max(this.value * (1 + val), 0));\n        }),\n\n        desaturateByAmount: cloneOnApply(function(val) {\n            this.saturation = Math.min(1, Math.max(this.saturation - val, 0));\n        }),\n\n        desaturateByRatio: cloneOnApply(function(val) {\n            this.saturation = Math.min(1, Math.max(this.saturation * (1 - val), 0));\n        }),\n\n        saturateByAmount: cloneOnApply(function(val) {\n            this.saturation = Math.min(1, Math.max(this.saturation + val, 0));\n        }),\n\n        saturateByRatio: cloneOnApply(function(val) {\n            this.saturation = Math.min(1, Math.max(this.saturation * (1 + val), 0));\n        }),\n\n        schemeFromDegrees: function(degrees) {\n            var newColors = [];\n            for (var i = 0, j = degrees.length; i < j; i++) {\n                var col = this.clone();\n                col.hue = (this.hue + degrees[i]) % 360;\n                newColors.push(col);\n            }\n            return newColors;\n        },\n\n        complementaryScheme: function() {\n            return this.schemeFromDegrees([0, 180]);\n        },\n\n        splitComplementaryScheme: function() {\n            return this.schemeFromDegrees([0, 150, 320]);\n        },\n\n        splitComplementaryCWScheme: function() {\n            return this.schemeFromDegrees([0, 150, 300]);\n        },\n\n        splitComplementaryCCWScheme: function() {\n            return this.schemeFromDegrees([0, 60, 210]);\n        },\n\n        triadicScheme: function() {\n            return this.schemeFromDegrees([0, 120, 240]);\n        },\n\n        clashScheme: function() {\n            return this.schemeFromDegrees([0, 90, 270]);\n        },\n\n        tetradicScheme: function() {\n            return this.schemeFromDegrees([0, 90, 180, 270]);\n        },\n\n        fourToneCWScheme: function() {\n            return this.schemeFromDegrees([0, 60, 180, 240]);\n        },\n\n        fourToneCCWScheme: function() {\n            return this.schemeFromDegrees([0, 120, 180, 300]);\n        },\n\n        fiveToneAScheme: function() {\n            return this.schemeFromDegrees([0, 115, 155, 205, 245]);\n        },\n\n        fiveToneBScheme: function() {\n            return this.schemeFromDegrees([0, 40, 90, 130, 245]);\n        },\n\n        fiveToneCScheme: function() {\n            return this.schemeFromDegrees([0, 50, 90, 205, 320]);\n        },\n\n        fiveToneDScheme: function() {\n            return this.schemeFromDegrees([0, 40, 155, 270, 310]);\n        },\n\n        fiveToneEScheme: function() {\n            return this.schemeFromDegrees([0, 115, 230, 270, 320]);\n        },\n\n        sixToneCWScheme: function() {\n            return this.schemeFromDegrees([0, 30, 120, 150, 240, 270]);\n        },\n\n        sixToneCCWScheme: function() {\n            return this.schemeFromDegrees([0, 90, 120, 210, 240, 330]);\n        },\n\n        neutralScheme: function() {\n            return this.schemeFromDegrees([0, 15, 30, 45, 60, 75]);\n        },\n\n        analogousScheme: function() {\n            return this.schemeFromDegrees([0, 30, 60, 90, 120, 150]);\n        },\n\n        fromObject: function(o) {\n            if (o.hasOwnProperty('hue') &&\n                o.hasOwnProperty('saturation') &&\n                o.hasOwnProperty('value')) {\n                var hsv = factories.HSV();\n\n                hsv.hue = o.hue;\n                hsv.saturation = o.saturation;\n                hsv.value = o.value;\n                hsv.alpha = o.hasOwnProperty('alpha') ? o.alpha : 1;\n\n                return hsv;\n            }\n            // nothing matches, not an HSV object\n            return null;\n        },\n\n        _normalise: function() {\n            this.hue %= 360;\n            this.saturation = Math.min(Math.max(0, this.saturation), 1);\n            this.value = Math.min(Math.max(0, this.value));\n            this.alpha = Math.min(1, Math.max(0, this.alpha));\n        },\n\n        toRGB: function() {\n            this._normalise();\n\n            var rgb = factories.RGB();\n            var i;\n            var f, p, q, t;\n\n            if (this.saturation === 0) {\n                // achromatic (grey)\n                rgb.red = this.value;\n                rgb.green = this.value;\n                rgb.blue = this.value;\n                rgb.alpha = this.alpha;\n                return rgb;\n            }\n\n            var h = this.hue / 60; // sector 0 to 5\n            i = Math.floor(h);\n            f = h - i; // factorial part of h\n            p = this.value * (1 - this.saturation);\n            q = this.value * (1 - this.saturation * f);\n            t = this.value * (1 - this.saturation * (1 - f));\n\n            switch (i) {\n                case 0:\n                    rgb.red = this.value;\n                    rgb.green = t;\n                    rgb.blue = p;\n                    break;\n                case 1:\n                    rgb.red = q;\n                    rgb.green = this.value;\n                    rgb.blue = p;\n                    break;\n                case 2:\n                    rgb.red = p;\n                    rgb.green = this.value;\n                    rgb.blue = t;\n                    break;\n                case 3:\n                    rgb.red = p;\n                    rgb.green = q;\n                    rgb.blue = this.value;\n                    break;\n                case 4:\n                    rgb.red = t;\n                    rgb.green = p;\n                    rgb.blue = this.value;\n                    break;\n                default: // case 5:\n                    rgb.red = this.value;\n                    rgb.green = p;\n                    rgb.blue = q;\n                    break;\n            }\n\n            rgb.alpha = this.alpha;\n\n            return rgb;\n        },\n        toHSL: function() {\n            this._normalise();\n\n            var hsl = factories.HSL();\n\n            hsl.hue = this.hue;\n            var l = (2 - this.saturation) * this.value,\n                s = this.saturation * this.value;\n            if (l && 2 - l) {\n                s /= (l <= 1) ? l : 2 - l;\n            }\n            l /= 2;\n            hsl.saturation = s;\n            hsl.lightness = l;\n            hsl.alpha = this.alpha;\n\n            return hsl;\n        },\n\n        toHSV: function() {\n            return this.clone();\n        }\n    });\n\n    registerModel('HSL', {\n        hue: 0,\n        saturation: 0,\n        lightness: 0,\n        alpha: 1,\n\n        darkenByAmount: cloneOnApply(function(val) {\n            this.lightness = Math.min(1, Math.max(this.lightness - val, 0));\n        }),\n\n        darkenByRatio: cloneOnApply(function(val) {\n            this.lightness = Math.min(1, Math.max(this.lightness * (1 - val), 0));\n        }),\n\n        lightenByAmount: cloneOnApply(function(val) {\n            this.lightness = Math.min(1, Math.max(this.lightness + val, 0));\n        }),\n\n        lightenByRatio: cloneOnApply(function(val) {\n            this.lightness = Math.min(1, Math.max(this.lightness * (1 + val), 0));\n        }),\n\n        fromObject: function(o) {\n            if (\"string\" == typeof o) {\n                return this._fromCSS(o);\n            }\n            if (o.hasOwnProperty('hue') &&\n                o.hasOwnProperty('saturation') &&\n                o.hasOwnProperty('lightness')) {\n                return this._fromHSL(o);\n            }\n            // nothing matchs, not an RGB object\n        },\n\n        _fromCSS: function(css) {\n            var colorGroups = trim(css).match(hsl_hsla_regex);\n\n            // if there is an \"a\" after \"hsl\", there must be a fourth parameter and the other way round\n            if (!colorGroups || (!!colorGroups[1] + !!colorGroups[5] === 1)) {\n                return null;\n            }\n\n            var hsl = factories.HSL();\n            hsl.hue = (colorGroups[2] % 360 + 360) % 360;\n            hsl.saturation = Math.max(0, Math.min(parseInt(colorGroups[3], 10) / 100, 1));\n            hsl.lightness = Math.max(0, Math.min(parseInt(colorGroups[4], 10) / 100, 1));\n            hsl.alpha = !!colorGroups[5] ? Math.max(0, Math.min(1, parseFloat(colorGroups[6]))) : 1;\n\n            return hsl;\n        },\n\n        _fromHSL: function(HSL) {\n            var newHSL = factories.HSL();\n\n            newHSL.hue = HSL.hue;\n            newHSL.saturation = HSL.saturation;\n            newHSL.lightness = HSL.lightness;\n\n            newHSL.alpha = HSL.hasOwnProperty('alpha') ? HSL.alpha : 1;\n\n            return newHSL;\n        },\n\n        _normalise: function() {\n            this.hue = (this.hue % 360 + 360) % 360;\n            this.saturation = Math.min(Math.max(0, this.saturation), 1);\n            this.lightness = Math.min(Math.max(0, this.lightness));\n            this.alpha = Math.min(1, Math.max(0, this.alpha));\n        },\n\n        toHSL: function() {\n            return this.clone();\n        },\n        toHSV: function() {\n            this._normalise();\n\n            var hsv = factories.HSV();\n\n            // http://ariya.blogspot.com/2008/07/converting-between-hsl-and-hsv.html\n            hsv.hue = this.hue; // H\n            var l = 2 * this.lightness,\n                s = this.saturation * ((l <= 1) ? l : 2 - l);\n            hsv.value = (l + s) / 2; // V\n            hsv.saturation = ((2 * s) / (l + s)) || 0; // S\n            hsv.alpha = this.alpha;\n\n            return hsv;\n        },\n        toRGB: function() {\n            return this.toHSV().toRGB();\n        }\n    });\n\n    // Package specific exports\n\n    /* the Color function is a factory for new color objects.\n     */\n    function Color(o) {\n        return color.fromObject(o);\n    }\n    Color.isValid = function(str) {\n        var key, c = Color(str);\n\n        var length = 0;\n        for (key in c) {\n            if (c.hasOwnProperty(key)) {\n                length++;\n            }\n        }\n\n        return length > 0;\n    };\n    net.brehaut.Color = Color;\n}).call(net.brehaut);\n\n/* Export to CommonJS\n */\nif (typeof module !== 'undefined') {\n    module.exports = net.brehaut.Color;\n}","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"@charset \\\"UTF-8\\\";\\n.patcher div.box-ui > div.package-ui.package-ui-code {\\n  height: 100%;\\n  width: 100%;\\n}\\n.patcher div.box-ui > div.package-ui.box-ui-button.box-ui-container {\\n  display: flex;\\n  flex-direction: column;\\n  height: 100%;\\n  overflow: auto;\\n  padding: 0px;\\n  margin: 0px;\\n}\\n.patcher div.box-ui > div.package-ui.box-ui-button > .box-ui-text-container {\\n  display: flex;\\n  flex: 0 0 auto;\\n  padding: 4px 5px;\\n  width: 100%;\\n  font-family: \\\"Roboto Mono\\\", monospace;\\n  font-size: 12px;\\n  text-align: left;\\n  margin: 0px;\\n  overflow-wrap: break-word;\\n  cursor: default;\\n  user-select: none;\\n  -webkit-user-select: none;\\n}\\n.patcher div.box-ui > div.package-ui.box-ui-button > .box-ui-text-container:first-child {\\n  border-top-width: 4px;\\n}\\n.patcher div.box-ui > div.package-ui.box-ui-button > .box-ui-text-container:last-child {\\n  border-bottom-width: 4px;\\n}\\n.patcher div.box-ui > div.package-ui.box-ui-button > .box-ui-text-container > span {\\n  position: relative;\\n  word-break: break-all;\\n  width: 100%;\\n  line-height: 14px;\\n  font-weight: normal;\\n  color: black;\\n}\\n.patcher div.box-ui > div.package-ui.box-ui-button > .box-ui-text-container > span.editing {\\n  pointer-events: auto;\\n  cursor: text;\\n  user-select: auto;\\n  -webkit-user-select: auto;\\n}\\n.patcher div.box-ui > div.package-ui.box-ui-button > .box-ui-text-container > span:empty::before {\\n  content: \\\"​\\\";\\n}\\n.patcher div.box-ui > div.package-ui.box-ui-button > .box-ui-text-container > span::selection {\\n  background-color: #004eff;\\n  color: white;\\n}\\n.patcher div.box-ui > div.package-ui.box-ui-button > .box-ui-text-container i.icon {\\n  line-height: 14px;\\n}\\n.patcher div.box-ui > div.package-ui.package-ui-menu > .dropdown {\\n  user-select: none;\\n  -webkit-user-select: none;\\n  font-size: 12px;\\n  padding: 4px 15px 4px 5px;\\n  min-height: auto;\\n}\\n.patcher div.box-ui > div.package-ui.package-ui-menu > .dropdown > .dropdown.icon {\\n  padding: 5px 5px;\\n}\\n.patcher div.box-ui > div.package-ui.package-ui-menu > .dropdown > .menu > .item {\\n  user-select: none;\\n  -webkit-user-select: none;\\n  font-size: 12px;\\n  padding: 4px 5px !important;\\n}\\n.patcher div.box-ui > div.package-ui.package-ui-menu > .dropdown > .menu > .item.active {\\n  font-weight: 600;\\n}\\n.patcher div.box-ui > div.package-ui.package-ui-preset .preset-bubble:hover {\\n  box-shadow: inset rgba(255, 255, 255, 0.5) 0px 0px 2px 2px;\\n}\\n.patcher div.box-ui > div.package-ui.package-ui-preset .preset-hovered {\\n  position: absolute;\\n  overflow: hidden;\\n  display: flex;\\n  top: 0;\\n  background-color: rgba(255, 255, 255, 0.5);\\n}\\n.patcher div.box-ui > div.package-ui.package-ui-preset .preset-hovered > span {\\n  margin: 0px 4px;\\n}\\n\\n.patcher.unlocked div.box.selected > div.box-ui > div.package-ui.box-ui-button:hover, .patcher.unlocked div.box.selected > div.box-ui > div.package-ui.box-ui-button:active {\\n  background-color: #e0e1e2;\\n}\\n.patcher.unlocked div.box.selected > div.box-ui > div.package-ui.box-ui-button > .box-ui-text-container {\\n  pointer-events: auto;\\n}\\n.patcher.unlocked div.box.selected > div.box-ui > div.package-ui > span {\\n  pointer-events: auto;\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/ui/ui.scss\"],\"names\":[],\"mappings\":\"AAAA,gBAAgB;AACZ;EACI,YAAA;EACA,WAAA;AACR;AAGQ;EACI,aAAA;EACA,sBAAA;EACA,YAAA;EACA,cAAA;EACA,YAAA;EACA,WAAA;AADZ;AAIQ;EACI,aAAA;EACA,cAAA;EACA,gBAAA;EACA,WAAA;EACA,qCAAA;EACA,eAAA;EACA,gBAAA;EACA,WAAA;EACA,yBAAA;EACA,eAAA;EACA,iBAAA;EACA,yBAAA;AAFZ;AAIY;EACI,qBAAA;AAFhB;AAKY;EACI,wBAAA;AAHhB;AAMY;EACI,kBAAA;EACA,qBAAA;EACA,WAAA;EACA,iBAAA;EACA,mBAAA;EACA,YAAA;AAJhB;AAMgB;EACI,oBAAA;EACA,YAAA;EACA,iBAAA;EACA,yBAAA;AAJpB;AAOgB;EACI,YAAA;AALpB;AAQgB;EACI,yBAAA;EACA,YAAA;AANpB;AAUY;EACI,iBAAA;AARhB;AAcQ;EACI,iBAAA;EACA,yBAAA;EACA,eAAA;EACA,yBAAA;EACA,gBAAA;AAZZ;AAcY;EACI,gBAAA;AAZhB;AAeY;EACI,iBAAA;EACA,yBAAA;EACA,eAAA;EACA,2BAAA;AAbhB;AAegB;EACI,gBAAA;AAbpB;AAoBQ;EACI,0DAAA;AAlBZ;AAqBQ;EACI,kBAAA;EACA,gBAAA;EACA,aAAA;EACA,MAAA;EACA,0CAAA;AAnBZ;AAqBY;EACI,eAAA;AAnBhB;;AA4BQ;EAEI,yBAAA;AA1BZ;AA6BQ;EACI,oBAAA;AA3BZ;AA+BI;EACI,oBAAA;AA7BR\",\"sourcesContent\":[\".patcher div.box-ui>div.package-ui {\\n    &.package-ui-code {\\n        height: 100%;\\n        width: 100%;\\n    }\\n\\n    &.box-ui-button {\\n        &.box-ui-container {\\n            display: flex;\\n            flex-direction: column;\\n            height: 100%;\\n            overflow: auto;\\n            padding: 0px;\\n            margin: 0px;\\n        }\\n\\n        &>.box-ui-text-container {\\n            display: flex;\\n            flex: 0 0 auto;\\n            padding: 4px 5px;\\n            width: 100%;\\n            font-family: 'Roboto Mono', monospace;\\n            font-size: 12px;\\n            text-align: left;\\n            margin: 0px;\\n            overflow-wrap: break-word;\\n            cursor: default;\\n            user-select: none;\\n            -webkit-user-select: none;\\n\\n            &:first-child {\\n                border-top-width: 4px;\\n            }\\n\\n            &:last-child {\\n                border-bottom-width: 4px;\\n            }\\n\\n            &>span {\\n                position: relative;\\n                word-break: break-all;\\n                width: 100%;\\n                line-height: 14px;\\n                font-weight: normal;\\n                color: black;\\n\\n                &.editing {\\n                    pointer-events: auto;\\n                    cursor: text;\\n                    user-select: auto;\\n                    -webkit-user-select: auto;\\n                }\\n\\n                &:empty::before {\\n                    content: \\\"\\\\200b\\\";\\n                }\\n\\n                &::selection {\\n                    background-color: #004eff;\\n                    color: white;\\n                }\\n            }\\n\\n            i.icon {\\n                line-height: 14px;\\n            }\\n        }\\n    }\\n\\n    &.package-ui-menu {\\n        &>.dropdown {\\n            user-select: none;\\n            -webkit-user-select: none;\\n            font-size: 12px;\\n            padding: 4px 15px 4px 5px;\\n            min-height: auto;\\n\\n            &>.dropdown.icon {\\n                padding: 5px 5px;\\n            }\\n\\n            &>.menu>.item {\\n                user-select: none;\\n                -webkit-user-select: none;\\n                font-size: 12px;\\n                padding: 4px 5px !important;\\n\\n                &.active {\\n                    font-weight: 600;\\n                }\\n            }\\n        }\\n    }\\n\\n    &.package-ui-preset {\\n        & .preset-bubble:hover {\\n            box-shadow: inset rgba(255, 255, 255, 0.5) 0px 0px 2px 2px;\\n        }\\n\\n        & .preset-hovered {\\n            position: absolute;\\n            overflow: hidden;\\n            display: flex;\\n            top: 0;\\n            background-color: rgba(255, 255, 255, 0.5);\\n\\n            &>span {\\n                margin: 0px 4px;\\n            }\\n        }\\n    }\\n}\\n\\n.patcher.unlocked div.box.selected>div.box-ui>div.package-ui {\\n    &.box-ui-button {\\n\\n        &:hover,\\n        &:active {\\n            background-color: #e0e1e2;\\n        }\\n\\n        &>.box-ui-text-container {\\n            pointer-events: auto;\\n        }\\n    }\\n\\n    &>span {\\n        pointer-events: auto;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n\n      content += cssWithMappingToString(item);\n\n      if (needLayer) {\n        content += \"}\";\n      }\n\n      if (item[2]) {\n        content += \"}\";\n      }\n\n      if (item[4]) {\n        content += \"}\";\n      }\n\n      return content;\n    }).join(\"\");\n  }; // import a list of modules into the list\n\n\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || \"\").concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join(\"\\n\");\n  }\n\n  return [content].join(\"\\n\");\n};","import Bang from \"./objects/base/Bang\";\n\nexport type Token = number | string | Bang;\n\nexport class Message extends Array<Token> {\n    static from(tokens: Token[]) {\n        const newArr = new Message();\n\n        for (let i = 0; i < tokens.length; i++) {\n            newArr[i] = tokens[i];\n        }\n\n        return newArr;\n    }\n\n\n    startsWith(value: Token) {\n        if (this.length) {\n            return this[0] === value;\n        }\n        return false;\n    }\n\n    endsWith(value: Token) {\n        if (this.length) {\n            return this[this.length - 1] === value;\n        }\n        return false;\n    }\n\n    // Produces a function that iterates over two lists,\n    // performs the given operation on any pair of numbers,\n    // and returns the shortest collection between the two\n    arithmetic(op: (a: number, b: number) => number) {\n        return (other: Message) => {\n            const result = new Message();\n            const minLength = Math.min(this.length, other.length);\n\n            for (let i = 0; i < minLength; i++) {\n                if (typeof this[i] === 'number' && typeof other[i] === 'number') {\n                    result.push(op(this[i] as number, other[i] as number));\n                } else {\n                    result.push(this[i]);\n                }\n            }\n\n            return result;\n        }\n    }\n}\n\nexport function isMessage(value: any) {\n    return value instanceof Message;\n}\n\nexport function extractFirst(data: any) {\n    if (data instanceof Message || data instanceof Array) {\n        return data[0];\n    } else {\n        return data;\n    }\n}\n","import packageInfo from \"./package-info\";\r\nimport type { IExternalPackage } from \"@jspatcher/jspatcher/src/core/GlobalPackageManager\";\r\n\r\nexport const name = packageInfo.name.split(\"/\").pop().replace(/^package-/, '');\r\n\r\nexport const { author, license, keywords, version, description, jspatcher } = packageInfo;\r\n\r\nexport default { name, author, license, keywords, version, description, ...jspatcher } as IExternalPackage;","import type { IPropsMeta } from \"@jspatcher/jspatcher/src/core/objects/base/AbstractObject\";\nimport { author, name, version, description } from \"../index\";\nimport { BaseObject } from \"../sdk\";\nimport LiveObjectUI, { getDisplayValue, LiveObjectUIState } from \"../ui/base-live\";\n\nexport interface LiveObjectState {\n    value: number;\n}\nexport interface LiveObjectInternalState {\n    displayValue: string;\n}\nexport interface LiveObjectEventMap {\n    \"changeFromUI\": { value: number; displayValue: string };\n};\n\nexport interface LiveObjectProps extends Omit<LiveObjectUIState, \"value\"> { }\n\nexport default class LiveObject<\n    D = {},\n    S extends Partial<LiveObjectState> & Record<string, any> = {},\n    I extends any[] = any[],\n    O extends any[] = any[],\n    A extends any[] = any[],\n    P extends Partial<LiveObjectProps> & Record<string, any> = {},\n    U extends Partial<LiveObjectUIState> & Record<string, any> = {},\n    E extends Partial<LiveObjectEventMap> & Record<string, any> = {}\n> extends BaseObject<D, S & LiveObjectState, I, O, A, P & LiveObjectProps, U & LiveObjectUIState, E & LiveObjectEventMap> {\n    static package = name;\n    static author = author;\n    static version = version;\n    static description = description;\n    static props: IPropsMeta<Partial<LiveObjectProps>> = {\n        min: {\n            type: \"number\",\n            default: 0,\n            description: \"Minimum value\",\n            isUIState: true\n        },\n        max: {\n            type: \"number\",\n            default: 127,\n            description: \"Maximum value\",\n            isUIState: true\n        },\n        step: {\n            type: \"number\",\n            default: 1,\n            description: \"Value change step\",\n            isUIState: true\n        },\n        type: {\n            type: \"enum\",\n            enums: [\"enum\", \"float\", \"int\"],\n            default: \"int\",\n            description: \"Value type\",\n            isUIState: true\n        },\n        enums: {\n            type: \"object\",\n            default: [\"\"],\n            description: \"Enum values\",\n            isUIState: true\n        },\n        active: {\n            type: \"boolean\",\n            default: true,\n            description: \"Active state\",\n            isUIState: true\n        },\n        focus: {\n            type: \"boolean\",\n            default: false,\n            description: \"Focus state\",\n            isUIState: true\n        },\n        shortName: {\n            type: \"string\",\n            default: \"\",\n            description: \"Short name to display\",\n            isUIState: true\n        },\n        longName: {\n            type: \"string\",\n            default: \"\",\n            description: \"Long name to display\",\n            isUIState: true\n        },\n        unitStyle: {\n            type: \"enum\",\n            enums: [\"float\", \"int\", \"time\", \"hertz\", \"decibel\", \"%\", \"pan\", \"semitones\", \"midi\", \"custom\", \"native\"],\n            default: \"int\",\n            description: \"Style of unit to display\",\n            isUIState: true\n        },\n        units: {\n            type: \"string\",\n            default: \"\",\n            description: \"If unitStyle set to custom, display this as unit\",\n            isUIState: true\n        },\n        exponent: {\n            type: \"number\",\n            default: 0,\n            description: \"UI modulation bpf, 0 for linear\",\n            isUIState: true\n        },\n        speedLim: {\n            type: \"number\",\n            default: 16,\n            description: \"Value output speed limit in ms\",\n            isUIState: true\n        },\n        frameRate: {\n            type: \"number\",\n            default: 60,\n            description: \"UI refresh rate\",\n            isUIState: true\n        }\n    };\n    static UI: typeof LiveObjectUI;\n    state = { value: 0 } as S & LiveObjectState;\n    _: LiveObjectInternalState = { displayValue: \"0\" };\n    /**\n     * Get a nearest valid number\n     */\n    toValidValue(value: number): number {\n        const min = this.getProp(\"min\");\n        const max = this.getProp(\"max\");\n        const step = this.getProp(\"step\");\n        const v = Math.min(max, Math.max(min, value));\n        return min + Math.floor((v - min) / step) * step;\n    }\n    toDisplayValue(value: number): string {\n        const { type, unitStyle, units, enums } = this.props;\n        return getDisplayValue(value, type, unitStyle, units, enums);\n    }\n    validateValue(valueIn: number, id?: string) {\n        const value = this.toValidValue(valueIn || 0);\n        if (value === this.state.value) return;\n        this.setState({ value } as S & LiveObjectState, id);\n        this._.displayValue = this.toDisplayValue(this.state.value);\n    }\n    onChangeFromUI(e: { value: number; displayValue: string }) {\n        this.emit(\"changeFromUI\", e);\n    }\n    subscribe() {\n        super.subscribe();\n        this.on(\"updateProps\", (props) => {\n            if (typeof props.max !== \"undefined\" || typeof props.min !== \"undefined\" || typeof props.step !== \"undefined\") {\n                const lastValue = this.state.value;\n                this.validateValue(this.state.value);\n                if (lastValue !== this.state.value) this.updateUI({ value: this.state.value } as any);\n            }\n        });\n    }\n}\n","import { author, name, version, description } from \"../index\";\r\nimport { BaseObject } from \"../sdk\";\r\n\r\nexport default class UIObject<\r\n    D = {},\r\n    S = {},\r\n    I extends any[] = any[],\r\n    O extends any[] = any[],\r\n    A extends any[] = any[],\r\n    P = {},\r\n    U = {},\r\n    E = {}\r\n> extends BaseObject<D, S, I, O, A, P, U, E> {\r\n    static package = name;\r\n    static author = author;\r\n    static version = version;\r\n    static description = description;\r\n}\r\n","import type { IArgsMeta, IInletsMeta, IOutletsMeta, IPropsMeta } from \"@jspatcher/jspatcher/src/core/objects/base/AbstractObject\";\nimport { Bang } from \"../sdk\";\nimport LiveButtonUI, { LiveButtonUIState } from \"../ui/button-live\";\nimport LiveObject, { LiveObjectProps } from \"./base-live\";\n\nexport interface LiveButtonProps extends LiveObjectProps {\n    bgColor: string;\n    activeBgColor: string;\n    bgOnColor: string;\n    activeBgOnColor: string;\n    borderColor: string;\n    focusBorderColor: string;\n}\nexport default class LiveButton extends LiveObject<{}, {}, [any], [Bang], [], LiveButtonProps, LiveButtonUIState> {\n    static description = \"Button\";\n    static inlets: IInletsMeta = [{\n        isHot: true,\n        type: \"anything\",\n        description: \"Output a bang when anything is received.\"\n    }];\n    static outlets: IOutletsMeta = [{\n        type: \"bang\",\n        description: \"Bang\"\n    }];\n    static props: IPropsMeta<Partial<LiveButtonProps>> = {\n        shortName: {\n            type: \"string\",\n            default: \"live.button\",\n            description: \"Short name to display\",\n            isUIState: true\n        },\n        longName: {\n            type: \"string\",\n            default: \"live.button\",\n            description: \"Long name to display\",\n            isUIState: true\n        },\n        max: {\n            type: \"number\",\n            default: 1,\n            description: \"Maximum value\",\n            isUIState: true\n        },\n        bgColor: {\n            type: \"color\",\n            default: \"rgba(90, 90, 90, 1)\",\n            description: \"Background color (inactive)\",\n            isUIState: true\n        },\n        activeBgColor: {\n            type: \"color\",\n            default: \"rgba(195, 195, 195, 1)\",\n            description: \"Background color (active)\",\n            isUIState: true\n        },\n        bgOnColor: {\n            type: \"color\",\n            default: \"rgba(195, 195, 195, 1)\",\n            description: \"Background color (on / inactive)\",\n            isUIState: true\n        },\n        activeBgOnColor: {\n            type: \"color\",\n            default: \"rgba(109, 215, 255, 1)\",\n            description: \"Background color (on / active)\",\n            isUIState: true\n        },\n        borderColor: {\n            type: \"color\",\n            default: \"rgba(80, 80, 80, 1)\",\n            description: \"Border color (unfocus)\",\n            isUIState: true\n        },\n        focusBorderColor: {\n            type: \"color\",\n            default: \"rgba(80, 80, 80, 1)\",\n            description: \"Border color (focus)\",\n            isUIState: true\n        }\n    };\n    static docs: string = \"ui/docs/button.html\"\n    static UI = LiveButtonUI;\n    subscribe() {\n        super.subscribe();\n        const validateAndUpdateUI = (value = 0, id?: string) => {\n            this.validateValue(value, id);\n            this.updateUI({ value: this.state.value });\n        }\n        this.on(\"preInit\", () => {\n            this.inlets = 1;\n            this.outlets = 1;\n            validateAndUpdateUI(0);\n        });\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) {\n                validateAndUpdateUI(1);\n                this.outlet(0, new Bang());\n            }\n        });\n        this.on(\"changeFromUI\", ({ value }) => {\n            // const lastValue = this.state.value;\n            validateAndUpdateUI(value);\n\n            if (value)\n                this.outlet(0, new Bang());\n        });\n        this.on(\"updateState\", ({ state: { value }, id }) => {\n            validateAndUpdateUI(value, id);\n            if (value)\n                this.outlet(0, new Bang());\n        });\n    }\n}\n","import * as Util from \"util\";\nimport type { IInletsMeta, IOutletsMeta } from \"@jspatcher/jspatcher/src/core/objects/base/AbstractObject\";\nimport { Message } from \"@jspatcher/jspatcher/src/core/message\";\nimport { Bang, isBang } from \"../sdk\";\nimport UIObject from \"./base\";\nimport MessageUI from \"../ui/message\";\n\nfunction splitMessages(text: string) {\n    let messages = [];\n    let last_separator = 0;\n    let mode = \"message\";\n\n    for (let i = 0; i < text.length; i++) {\n        if (mode === \"message\") {\n            if (text[i] == ',') {\n                messages.push(text.slice(last_separator, i).trim());\n                last_separator = i + 1;\n                i += 1;\n            } else if (text[i] === '\"') {\n                mode = \"string\";\n            }\n        } else {\n            let escaped = i > 0 && text[i - 1] === \"\\\\\";\n            if (!escaped && text[i] === '\"') {\n                mode = \"message\";\n            }\n        }\n    }\n\n    messages.push(text.slice(last_separator).trim());\n    return messages;\n}\n\nfunction isWhitespace(text: string) {\n    return \"\\n\\r\\t \".includes(text);\n}\n\nfunction tokenizeMessage(text: string) {\n    let tokens = [];\n    let last_whitespace = 0;\n    let mode = \"message\";\n\n    for (let i = 0; i < text.length; i++) {\n        if (mode === \"message\") {\n            let last_not_space = i > 0 && !isWhitespace(text[i - 1]);\n            if (last_not_space && isWhitespace(text[i])) {\n                tokens.push(text.slice(last_whitespace, i).trim());\n                last_whitespace = i;\n            } else if (text[i] === '\"') {\n                mode = \"string\"\n            }\n        } else {\n            let escaped = i > 0 && text[i - 1] === \"\\\\\";\n            if (!escaped && text[i] === '\"') {\n                mode = \"message\";\n            }\n        }\n    }\n\n    // We only push a final time if there's no trailing whitespace\n    if (!isWhitespace(text[text.length - 1]))\n        tokens.push(text.slice(last_whitespace).trim());\n\n    // Trim leading and trailing double quotes and correct quote escapement\n    for (let i = 0; i < tokens.length; i++) {\n        let length = tokens[i].length;\n        let start: number = tokens[i][0] === '\"' ? 1 : 0;\n        let end: number = tokens[i][length - 1] === '\"' ? length - 1 : length;\n        tokens[i] = tokens[i].slice(start, end).replace('\\\\\"', '\"');\n    }\n\n    let output: Message = Message.from(tokens.map(value => {\n        const num = Number(value);\n        return isNaN(num) ? value : num;\n    }));\n\n    return output;\n}\n\nconst FORMATTER_REGEX = /^\\$[1-9][0-9]*$/;\n\nfunction extractFormatters(message: any[]) {\n    let formatters = [];\n    for (let i = 0; i < message.length; i++) {\n        const token = message[i];\n        if ((typeof token === \"string\") && FORMATTER_REGEX.test(token)) {\n            let inlet_index = parseInt(token.slice(1)) || 0;\n            formatters.push({ inlet_index, position: i });\n        }\n    }\n    return formatters;\n}\n\ninterface Formatter {\n    inlet_index: number;\n    message_index: number;\n    position: number;\n}\n\nexport interface IS {\n    buffer: Message[];\n    formatters: Formatter[];\n    editing: boolean;\n}\n\nexport default class message extends UIObject<{ text: string }, {}, [any, any], [any], [any], {}, { text: string }> {\n    static description = \"Message\";\n    static inlets: IInletsMeta = [\n        {\n            isHot: true,\n            type: \"anything\",\n            description: \"Trigger output the message\"\n        },\n        // {\n        //     isHot: false,\n        //     type: \"anything\",\n        //     description: \"Set the message\"\n        // }\n    ];\n    static outlets: IOutletsMeta = [{\n        type: \"anything\",\n        description: \"Message to send\"\n    }];\n    static docs: string = \"ui/docs/message.html\"\n    static UI = MessageUI;\n    _: IS = { buffer: [], editing: false, formatters: [] };\n    handleUpdateArgs = (args: any[]) => {\n        if (typeof args[0] !== \"undefined\") {\n            this.setData({ text: this.stringify(args[0]) });\n            this._.buffer = this.parse(args[0]);\n            this._.formatters = [];\n            if (Array.isArray(this._.buffer)) {\n                for (let i = 0; i < this._.buffer.length; i++) {\n                    this._.formatters.push(...extractFormatters(this._.buffer[i]).map(\n                        ({ inlet_index, position }) => { return { inlet_index, position, message_index: i }; }));\n                }\n            }\n        } else {\n            this._.buffer = [];\n            this._.formatters = [];\n        }\n        this.updateUI({ text: this.data.text });\n    };\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = message.inlets.length;\n            this.outlets = 1;\n        });\n        this.on(\"postInit\", () => {\n            const args = this.box.args;\n            if (typeof this.data.text === \"string\") this.handleUpdateArgs([this.data.text]);\n            else if (typeof args[0] !== \"undefined\") {\n                if (typeof this.data.text !== \"string\") {\n                    // this.setData({ text: this.stringify(args[0]) });\n                    // this._.buffer = args[0];\n                    this.handleUpdateArgs(args);\n                }\n            } else {\n                this.setData({ text: \"\" });\n                this._.buffer = [];\n                this._.formatters = [];\n            }\n        });\n        this.on(\"updateArgs\", this.handleUpdateArgs);\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) {\n                this.produceOutput(data);\n            }\n            // else if (inlet === 1) this.handleUpdateArgs([data]);\n        });\n    }\n    produceOutput = (data?: any) => {\n        // Format the elements\n        if (data && !isBang(data) && this._.formatters.length) {\n            // we either expect a single value or a message (i.e. array)\n            if (data instanceof Message) {\n                for (let i = 0; i < data.length; i++)\n                    this.formatMessage(i + 1, (message, pos) => this._.buffer[message][pos] = data[i]);\n            } else {\n                for (let b = 0; b < this._.buffer.length; b++) {\n                    this.formatMessage(1, (message, pos) => this._.buffer[message][pos] = data);\n                }\n            }\n        }\n\n        this._.buffer.forEach(message => this.outlet(0, message));\n    }\n    parse(o: string) {\n        return splitMessages(o).map(m => tokenizeMessage(m));\n    }\n    stringify(o: any) {\n        return o.toString();\n    }\n    formatMessage(target_inlet_index: number, closure: (message_index: number, position: number) => void) {\n        for (let { inlet_index, message_index, position } of this._.formatters) {\n            if (inlet_index === target_inlet_index)\n                closure(message_index, position);\n        }\n    }\n}\n","import type { IInletsMeta, IOutletsMeta, IPropsMeta } from \"@jspatcher/jspatcher/src/core/objects/base/AbstractObject\";\nimport { Bang, isBang } from \"../sdk\";\nimport NumberBoxUI, { NumberBoxUIState } from \"../ui/number\";\nimport UIObject from \"./base\";\nimport { Message, extractFirst } from \"@jspatcher/jspatcher/src/core/message\";\n\nexport interface NumberBoxState {\n    value: number;\n}\nexport interface NumberBoxProps {\n    format: \"Decimal (Integer)\" | \"Decimal (Floating-Point)\" | \"MIDI\" | \"MIDI (C4)\" | \"Binary\" | \"Hex\" | \"Roland Octal\";\n    triangle: boolean;\n    numDecimalPlaces: number;\n    triScale: number;\n    bgColor: string;\n    hTriColor: string;\n    textColor: string;\n    triColor: string;\n    fontFamily: string;\n    fontSize: number;\n    fontFace: \"regular\" | \"bold\" | \"italic\" | \"bold italic\";\n    cantChange: boolean;\n    outputOnClick: boolean;\n    mouseFilter: boolean;\n    minimum: number;\n    maximum: number;\n}\n\nexport default class NumberBox extends UIObject<{}, NumberBoxState, [any | Bang], [number], [], NumberBoxProps, NumberBoxUIState, {}> {\n    static description = \"Display and output a number\";\n    static inlets: IInletsMeta = [{\n        type: \"anything\",\n        isHot: true,\n        description: \"Set Displayed Number and Repeat to Output\"\n    }];\n    static outlets: IOutletsMeta = [{\n        type: \"number\",\n        description: \"Output Incoming or Entered Number\"\n    }];\n    static props: IPropsMeta<NumberBoxProps> = {\n        format: {\n            type: \"enum\",\n            enums: [\"Decimal (Floating-Point)\", \"Decimal (Integer)\", \"Hex\", \"Roland Octal\", \"Binary\", \"MIDI\", \"MIDI (C4)\"],\n            default: \"Decimal (Floating-Point)\",\n            description: \"Sets characteristics of the appearance and behavior of the number box.\",\n            isUIState: true\n        },\n        triangle: {\n            type: \"boolean\",\n            default: true,\n            description: \"Toggles the drawing of a triangular arrow pointing to the number in the number box.\",\n            isUIState: true\n        },\n        numDecimalPlaces: {\n            type: \"number\",\n            default: 0,\n            description: \"Number of Decimal Places\",\n            isUIState: true\n        },\n        triScale: {\n            type: \"number\",\n            default: 1,\n            description: \"Scales the size of the triangle drawn in the number box.\",\n            isUIState: true\n        },\n        bgColor: {\n            type: \"color\",\n            default: \"rgb(51, 51, 51)\",\n            description: \"Sets the color for the number box object's displayed/unclicked background.\",\n            isUIState: true\n        },\n        hTriColor: {\n            type: \"color\",\n            default: \"rgb(237, 237, 90)\",\n            description: \"Sets the highlight color for the triangle inside the number box object that indicates that the contents are editable.\",\n            isUIState: true\n        },\n        textColor: {\n            type: \"color\",\n            default: \"rgb(247, 247, 247)\",\n            description: \"Sets the color for the number box object's displayed/unclicked number values.\",\n            isUIState: true\n        },\n        triColor: {\n            type: \"color\",\n            default: \"rgb(125, 127, 132)\",\n            description: \"Sets the color for the triangle inside the number box object that indicates that the contents are editable.\",\n            isUIState: true\n        },\n        fontFamily: {\n            type: \"enum\",\n            enums: [\"Lato\", \"Georgia\", \"Times New Roman\", \"Arial\", \"Tahoma\", \"Verdana\", \"Courier New\"],\n            default: \"Lato\",\n            description: \"Font family\",\n            isUIState: true\n        },\n        fontSize: {\n            type: \"number\",\n            default: 11,\n            description: \"Text font size\",\n            isUIState: true\n        },\n        fontFace: {\n            type: \"enum\",\n            enums: [\"regular\", \"bold\", \"italic\", \"bold italic\"],\n            default: \"regular\",\n            description: \"Text style\",\n            isUIState: true\n        },\n        cantChange: {\n            type: \"boolean\",\n            default: false,\n            description: \"Toggles the ability to disallow changes with the mouse or the computer keyboard.\",\n            isUIState: true\n        },\n        outputOnClick: {\n            type: \"boolean\",\n            default: false,\n            description: \"Toggles sending the current value when you click on the number box.\",\n            isUIState: true\n        },\n        mouseFilter: {\n            type: \"boolean\",\n            default: false,\n            description: \"Send Value on Mouse Up\",\n            isUIState: true\n        },\n        minimum: {\n            type: \"number\",\n            default: undefined,\n            description: \"Sets the minimum value that can be displayed or sent out by the number box.\",\n            isUIState: true\n        },\n        maximum: {\n            type: \"number\",\n            default: undefined,\n            description: \"Sets the maximum value that can be displayed or sent out by the number box.\",\n            isUIState: true\n        }\n    };\n    static docs: string = \"ui/docs/number.html\"\n    static UI = NumberBoxUI;\n    state: NumberBoxState = { value: 0 };\n    toValidValue(valueIn: number): number {\n        const min = this.getProp(\"minimum\");\n        const max = this.getProp(\"maximum\");\n        const format = this.getProp(\"format\");\n        let value = valueIn || 0;\n        if (format !== \"Decimal (Floating-Point)\") value = Math.round(value);\n        if (!isNaN(min)) value = Math.max(min, value);\n        if (!isNaN(max)) value = Math.min(max, value);\n        return value;\n    }\n    validateValue(valueIn: number, id?: string) {\n        const value = this.toValidValue(valueIn);\n        if (value === this.state.value) return;\n        this.setState({ value }, id);\n    }\n    onChangeFromUI({ value }: { value: number }) {\n        this.setState({ value });\n        this.outlet(0, value);\n    }\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 1;\n            this.outlets = 1;\n        });\n        this.on(\"postInit\", () => {\n            this.validateValue(this.state.value);\n            this.updateUI({ value: this.state.value });\n        })\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) {\n                if (!isBang(data)) {\n\n                    let value;\n                    if (data instanceof Array || data instanceof Message) {\n                        value = +extractFirst(data);\n                    } else {\n                        value = +data;\n                    }\n\n                    this.validateValue(value);\n                    this.updateUI({ value: this.state.value });\n                }\n                this.outlet(0, this.state.value);\n            }\n        });\n        this.on(\"propsUpdated\", () => {\n            this.validateValue(this.state.value);\n            this.updateUI({ value: this.state.value });\n        });\n        this.on(\"updateState\", ({ state: { value }, id }) => {\n            this.validateValue(value, id);\n            this.updateUI({ value: this.state.value });\n            this.outlet(0, this.state.value);\n        });\n    }\n}\n","import BaseAnalyserObject from \"./base\";\nimport OscilloscopeUI from \"../ui/scope\";\nimport { SpectralAnalyserNode, Bang, isBang } from \"../sdk\";\nimport type { OscilloscopeUIState } from \"../ui/scope\";\nimport type { TWindowFunction } from \"@jspatcher/jspatcher/src/core/worklets/SpectralAnalyserWorklet.types\";\nimport type { IInletsMeta, IPropsMeta } from \"@jspatcher/jspatcher/src/core/objects/base/AbstractObject\";\n\nexport interface IS {\n    node: SpectralAnalyserNode;\n}\nexport interface P extends Omit<OscilloscopeUIState, \"$cursor\" | \"zoom\" | \"zoomOffset\" | \"paint\"> {\n    windowSize: number;\n    fftSize: number;\n    fftOverlap: number;\n    windowFunction: TWindowFunction;\n}\nexport default class Oscilloscope extends BaseAnalyserObject<{}, {}, [Bang], [], [], P, OscilloscopeUIState> {\n    static description = \"Oscilloscope visualizer\";\n    static docs = \"ui/docs/scope.html\";\n    static inlets: IInletsMeta = [{\n        isHot: true,\n        type: \"signal\",\n        description: \"Signal\"\n    }];\n    static props: IPropsMeta<P> = {\n        windowSize: {\n            type: \"number\",\n            default: 1024,\n            description: \"Signal window size\"\n        },\n        fftSize: {\n            type: \"number\",\n            default: 1024,\n            description: \"FFT Size for analysis\"\n        },\n        fftOverlap: {\n            type: \"number\",\n            default: 2,\n            description: \"FFT overlap count (integer)\"\n        },\n        windowFunction: {\n            type: \"enum\",\n            enums: [\"blackman\", \"hamming\", \"hann\", \"triangular\"],\n            default: \"blackman\",\n            description: \"Window Function aoolied for FFT analysis window\"\n        },\n        continuous: {\n            type: \"boolean\",\n            default: true,\n            description: \"Continuous drawing\",\n            isUIState: true\n        },\n        frameRate: {\n            type: \"number\",\n            default: 60,\n            description: \"UI refresh rate\",\n            isUIState: true\n        },\n        interleaved: {\n            type: \"boolean\",\n            default: false,\n            description: \"Draw channels seperately\",\n            isUIState: true\n        },\n        stablize: {\n            type: \"boolean\",\n            default: true,\n            description: \"Stablize\",\n            isUIState: true\n        },\n        range: {\n            type: \"number\",\n            default: 1,\n            description: \"Vertical range\",\n            isUIState: true\n        },\n        autoRange: {\n            type: \"boolean\",\n            default: true,\n            description: \"Auto adjust range if > 1\",\n            isUIState: true\n        },\n        showStats: {\n            type: \"boolean\",\n            default: true,\n            description: \"Show stats texts\",\n            isUIState: true\n        },\n        bgColor: {\n            type: \"color\",\n            default: \"rgb(40, 40, 40)\",\n            description: \"Background color\",\n            isUIState: true\n        },\n        phosphorColor: {\n            type: \"color\",\n            default: \"hsl(0, 100%, 85%)\",\n            description: \"Phosphor color\",\n            isUIState: true\n        },\n        hueOffset: {\n            type: \"number\",\n            default: 60,\n            description: \"Channel Color Hue offset\",\n            isUIState: true\n        },\n        textColor: {\n            type: \"color\",\n            default: \"#DDDD99\",\n            description: \"Info text color\",\n            isUIState: true\n        },\n        gridColor: {\n            type: \"color\",\n            default: \"#404040\",\n            description: \"Grid color\",\n            isUIState: true\n        },\n        seperatorColor: {\n            type: \"color\",\n            default: \"white\",\n            description: \"Channel seperator color\",\n            isUIState: true\n        }\n    };\n    static UI = OscilloscopeUI;\n    _: IS = { node: undefined };\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 1;\n            this.outlets = 0;\n        });\n        this.on(\"updateProps\", (props) => {\n            if (this._.node) {\n                const { parameters } = this._.node;\n                if (props.windowFunction) this.applyBPF(parameters.get(\"windowFunction\"), [[[\"blackman\", \"hamming\", \"hann\", \"triangular\"].indexOf(props.windowFunction)]]);\n                if (props.fftSize) this.applyBPF(parameters.get(\"fftSize\"), [[props.fftSize]]);\n                if (props.fftOverlap) this.applyBPF(parameters.get(\"fftOverlap\"), [[props.fftOverlap]]);\n                if (props.windowSize) this.applyBPF(parameters.get(\"windowSize\"), [[props.windowSize]]);\n            }\n        });\n        this.on(\"postInit\", async () => {\n            await SpectralAnalyserNode.register(this.audioCtx.audioWorklet);\n            this._.node = new SpectralAnalyserNode(this.audioCtx);\n            const { parameters } = this._.node;\n            this.applyBPF(parameters.get(\"windowFunction\"), [[[\"blackman\", \"hamming\", \"hann\", \"triangular\"].indexOf(this.getProp(\"windowFunction\"))]]);\n            this.applyBPF(parameters.get(\"fftSize\"), [[this.getProp(\"fftSize\")]]);\n            this.applyBPF(parameters.get(\"fftOverlap\"), [[this.getProp(\"fftOverlap\")]]);\n            this.applyBPF(parameters.get(\"windowSize\"), [[this.getProp(\"windowSize\")]]);\n            this.disconnectAudioInlet();\n            this.inletAudioConnections[0] = { node: this._.node, index: 0 };\n            this.connectAudioInlet();\n        });\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) {\n                if (isBang(data)) this.updateUI({ paint: {} });\n            }\n        });\n        this.on(\"destroy\", () => {\n            if (this._.node) this._.node.destroy();\n        });\n    }\n}\n","import BaseAnalyserObject from \"./base\";\nimport SpectrogramUI from \"../ui/spectrogram\";\nimport { SpectralAnalyserNode, Bang, isBang } from \"../sdk\";\nimport type { SpectrogramUIState } from \"../ui/spectrogram\";\nimport type { TWindowFunction } from \"@jspatcher/jspatcher/src/core/worklets/SpectralAnalyserWorklet.types\";\nimport type { IInletsMeta, IPropsMeta } from \"@jspatcher/jspatcher/src/core/objects/base/AbstractObject\";\n\nexport interface IS {\n    node: SpectralAnalyserNode;\n}\nexport interface P extends Omit<SpectrogramUIState, \"cursorX\" | \"cursorY\" | \"zoom\" | \"zoomOffset\" | \"paint\"> {\n    windowSize: number;\n    fftSize: number;\n    fftOverlap: number;\n    windowFunction: TWindowFunction;\n}\nexport default class Spectrogram extends BaseAnalyserObject<{}, {}, [Bang], [], [], P, SpectrogramUIState> {\n    static description = \"Spectrogram visualizer\";\n    static docs = \"ui/docs/spectrogram.html\";\n    static inlets: IInletsMeta = [{\n        isHot: true,\n        type: \"signal\",\n        description: \"Signal\"\n    }];\n    static props: IPropsMeta<P> = {\n        windowSize: {\n            type: \"number\",\n            default: 65536,\n            description: \"Signal window size\"\n        },\n        fftSize: {\n            type: \"number\",\n            default: 1024,\n            description: \"FFT Size for analysis\"\n        },\n        fftOverlap: {\n            type: \"number\",\n            default: 2,\n            description: \"FFT overlap count (integer)\"\n        },\n        windowFunction: {\n            type: \"enum\",\n            enums: [\"blackman\", \"hamming\", \"hann\", \"triangular\"],\n            default: \"blackman\",\n            description: \"Window Function aoolied for FFT analysis window\"\n        },\n        continuous: {\n            type: \"boolean\",\n            default: true,\n            description: \"Continuous drawing\",\n            isUIState: true\n        },\n        frameRate: {\n            type: \"number\",\n            default: 60,\n            description: \"UI refresh rate\",\n            isUIState: true\n        },\n        bgColor: {\n            type: \"color\",\n            default: \"rgb(40, 40, 40)\",\n            description: \"Background color\",\n            isUIState: true\n        },\n        gridColor: {\n            type: \"color\",\n            default: \"#404040\",\n            description: \"Grid color\",\n            isUIState: true\n        },\n        seperatorColor: {\n            type: \"color\",\n            default: \"white\",\n            description: \"Channel seperator color\",\n            isUIState: true\n        }\n    };\n    static UI = SpectrogramUI;\n    _: IS = { node: undefined };\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 1;\n            this.outlets = 0;\n        });\n        this.on(\"updateProps\", (props) => {\n            if (this._.node) {\n                const { parameters } = this._.node;\n                if (props.windowFunction) this.applyBPF(parameters.get(\"windowFunction\"), [[[\"blackman\", \"hamming\", \"hann\", \"triangular\"].indexOf(props.windowFunction)]]);\n                if (props.fftSize) this.applyBPF(parameters.get(\"fftSize\"), [[props.fftSize]]);\n                if (props.fftOverlap) this.applyBPF(parameters.get(\"fftOverlap\"), [[props.fftOverlap]]);\n                if (props.windowSize) this.applyBPF(parameters.get(\"windowSize\"), [[props.windowSize]]);\n            }\n        });\n        this.on(\"postInit\", async () => {\n            await SpectralAnalyserNode.register(this.audioCtx.audioWorklet);\n            this._.node = new SpectralAnalyserNode(this.audioCtx);\n            const { parameters } = this._.node;\n            this.applyBPF(parameters.get(\"windowFunction\"), [[[\"blackman\", \"hamming\", \"hann\", \"triangular\"].indexOf(this.getProp(\"windowFunction\"))]]);\n            this.applyBPF(parameters.get(\"fftSize\"), [[this.getProp(\"fftSize\")]]);\n            this.applyBPF(parameters.get(\"fftOverlap\"), [[this.getProp(\"fftOverlap\")]]);\n            this.applyBPF(parameters.get(\"windowSize\"), [[this.getProp(\"windowSize\")]]);\n            this.disconnectAudioInlet();\n            this.inletAudioConnections[0] = { node: this._.node, index: 0 };\n            this.connectAudioInlet();\n        });\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) {\n                if (isBang(data)) this.updateUI({ paint: {} });\n            }\n        });\n        this.on(\"destroy\", () => {\n            if (this._.node) this._.node.destroy();\n        });\n    }\n}\n","import BaseAnalyserObject from \"./base\";\nimport SpectroscopeUI from \"../ui/spectroscope\";\nimport { SpectralAnalyserNode, Bang, isBang } from \"../sdk\";\nimport type { SpectroscopeUIState } from \"../ui/spectroscope\";\nimport type { TWindowFunction } from \"@jspatcher/jspatcher/src/core/worklets/SpectralAnalyserWorklet.types\";\nimport type { IInletsMeta, IPropsMeta } from \"@jspatcher/jspatcher/src/core/objects/base/AbstractObject\";\n\nexport interface IS {\n    node: SpectralAnalyserNode;\n}\nexport interface Props extends Omit<SpectroscopeUIState, \"$cursor\" | \"zoom\" | \"zoomOffset\" | \"paint\"> {\n    windowSize: number;\n    fftSize: number;\n    fftOverlap: number;\n    windowFunction: TWindowFunction;\n}\nexport default class Spectroscope extends BaseAnalyserObject<{}, {}, [Bang], [], [], Props, SpectroscopeUIState> {\n    static description = \"Spectroscope visualizer\";\n    static docs = \"ui/docs/spectroscope.html\";\n    static inlets: IInletsMeta = [{\n        isHot: true,\n        type: \"signal\",\n        description: \"Signal\"\n    }];\n    static props: IPropsMeta<Props> = {\n        windowSize: {\n            type: \"number\",\n            default: 1024,\n            description: \"Signal window size\"\n        },\n        fftSize: {\n            type: \"number\",\n            default: 1024,\n            description: \"FFT Size for analysis\"\n        },\n        fftOverlap: {\n            type: \"number\",\n            default: 2,\n            description: \"FFT overlap count (integer)\"\n        },\n        windowFunction: {\n            type: \"enum\",\n            enums: [\"blackman\", \"hamming\", \"hann\", \"triangular\"],\n            default: \"blackman\",\n            description: \"Window Function aoolied for FFT analysis window\"\n        },\n        continuous: {\n            type: \"boolean\",\n            default: true,\n            description: \"Continuous drawing\",\n            isUIState: true\n        },\n        frameRate: {\n            type: \"number\",\n            default: 60,\n            description: \"UI refresh rate\",\n            isUIState: true\n        },\n        bgColor: {\n            type: \"color\",\n            default: \"rgb(40, 40, 40)\",\n            description: \"Background color\",\n            isUIState: true\n        },\n        fgColor: {\n            type: \"color\",\n            default: \"hsl(0, 100%, 85%)\",\n            description: \"Foreground color\",\n            isUIState: true\n        },\n        hueOffset: {\n            type: \"number\",\n            default: 60,\n            description: \"Channel Color Hue offset\",\n            isUIState: true\n        },\n        gridColor: {\n            type: \"color\",\n            default: \"#404040\",\n            description: \"Grid color\",\n            isUIState: true\n        },\n        seperatorColor: {\n            type: \"color\",\n            default: \"white\",\n            description: \"Channel seperator color\",\n            isUIState: true\n        }\n    };\n    static UI = SpectroscopeUI;\n    _: IS = { node: undefined };\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 1;\n            this.outlets = 0;\n        });\n        this.on(\"updateProps\", (props) => {\n            if (this._.node) {\n                const { parameters } = this._.node;\n                if (props.windowFunction) this.applyBPF(parameters.get(\"windowFunction\"), [[[\"blackman\", \"hamming\", \"hann\", \"triangular\"].indexOf(props.windowFunction)]]);\n                if (props.fftSize) this.applyBPF(parameters.get(\"fftSize\"), [[props.fftSize]]);\n                if (props.fftOverlap) this.applyBPF(parameters.get(\"fftOverlap\"), [[props.fftOverlap]]);\n                if (props.windowSize) this.applyBPF(parameters.get(\"windowSize\"), [[props.windowSize]]);\n            }\n        });\n        this.on(\"postInit\", async () => {\n            await SpectralAnalyserNode.register(this.audioCtx.audioWorklet);\n            this._.node = new SpectralAnalyserNode(this.audioCtx);\n            const { parameters } = this._.node;\n            this.applyBPF(parameters.get(\"windowFunction\"), [[[\"blackman\", \"hamming\", \"hann\", \"triangular\"].indexOf(this.getProp(\"windowFunction\"))]]);\n            this.applyBPF(parameters.get(\"fftSize\"), [[this.getProp(\"fftSize\")]]);\n            this.applyBPF(parameters.get(\"fftOverlap\"), [[this.getProp(\"fftOverlap\")]]);\n            this.applyBPF(parameters.get(\"windowSize\"), [[this.getProp(\"windowSize\")]]);\n            this.disconnectAudioInlet();\n            this.inletAudioConnections[0] = { node: this._.node, index: 0 };\n            this.connectAudioInlet();\n        });\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) {\n                if (isBang(data)) this.updateUI({ paint: {} });\n            }\n        });\n        this.on(\"destroy\", () => {\n            if (this._.node) this._.node.destroy();\n        });\n    }\n}\n","import type { IArgsMeta, IInletsMeta, IOutletsMeta, IPropsMeta } from \"@jspatcher/jspatcher/src/core/objects/base/AbstractObject\";\nimport { Bang, isBang } from \"../sdk\";\nimport LiveToggleUI, { LiveToggleUIState } from \"../ui/toggle\";\nimport LiveObject, { LiveObjectProps } from \"./base-live\";\n\nexport interface LiveToggleProps extends LiveObjectProps {\n    bgColor: string;\n    activeBgColor: string;\n    bgOnColor: string;\n    activeBgOnColor: string;\n    borderColor: string;\n    focusBorderColor: string;\n}\n\nexport default class LiveToggle extends LiveObject<{}, {}, [number | Bang], [number], [number], LiveToggleProps, LiveToggleUIState> {\n    static description = \"Toggle\";\n    static inlets: IInletsMeta = [{\n        isHot: true,\n        type: \"anything\",\n        description: \"Set the value with 1 or 0, or toggle with a bang.\"\n    }];\n    static outlets: IOutletsMeta = [{\n        type: \"number\",\n        description: \"Number value\"\n    }];\n    static args: IArgsMeta = [{\n        type: \"number\",\n        optional: true,\n        default: 0,\n        description: \"Initial value\"\n    }];\n    static props: IPropsMeta = {\n        max: {\n            type: \"number\",\n            default: 1,\n            description: \"Maximum value\",\n            isUIState: true\n        },\n        bgColor: {\n            type: \"color\",\n            default: \"rgba(90, 90, 90, 1)\",\n            description: \"Background color (inactive)\",\n            isUIState: true\n        },\n        activeBgColor: {\n            type: \"color\",\n            default: \"rgba(195, 195, 195, 1)\",\n            description: \"Background color (active)\",\n            isUIState: true\n        },\n        bgOnColor: {\n            type: \"color\",\n            default: \"rgba(195, 195, 195, 1)\",\n            description: \"Background color (on / inactive)\",\n            isUIState: true\n        },\n        activeBgOnColor: {\n            type: \"color\",\n            default: \"rgba(109, 215, 255, 1)\",\n            description: \"Background color (on / active)\",\n            isUIState: true\n        },\n        borderColor: {\n            type: \"color\",\n            default: \"rgba(80, 80, 80, 1)\",\n            description: \"Border color (unfocus)\",\n            isUIState: true\n        },\n        focusBorderColor: {\n            type: \"color\",\n            default: \"rgba(80, 80, 80, 1)\",\n            description: \"Border color (focus)\",\n            isUIState: true\n        }\n    };\n    static docs: string = \"ui/docs/toggle.html\"\n    static UI = LiveToggleUI;\n    subscribe() {\n        super.subscribe();\n        const validateAndUpdateUI = (value = 0, id?: string) => {\n            this.validateValue(value, id);\n            this.updateUI({ value: this.state.value });\n        }\n        const handleUpdateArgs = (args: [number?]) => {\n            if (typeof args[0] === \"number\") {\n                validateAndUpdateUI(args[0]);\n            }\n        };\n        this.on(\"preInit\", () => {\n            this.inlets = 1;\n            this.outlets = 1;\n            validateAndUpdateUI(this.args[0] || 0);\n        });\n        this.on(\"updateArgs\", handleUpdateArgs);\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) {\n                if (!isBang(data)) {\n                    let number = +data;\n                    if (number !== 0)\n                        number = 1;\n\n                    if (number != this.state.value) {\n                        validateAndUpdateUI(+data);\n                        this.outlet(0, this.state.value);\n                    }\n                } else {\n                    this.state.value = this.state.value === 0 ? 1 : 0;\n                    this.updateUI({ value: this.state.value });\n                    this.outlet(0, this.state.value);\n                }\n            }\n        });\n        this.on(\"changeFromUI\", ({ value }) => {\n            this.validateValue(value);\n            this.outletAll([this.state.value]);\n        });\n        this.on(\"updateState\", ({ state: { value }, id }) => {\n            validateAndUpdateUI(value, id);\n            this.outletAll([this.state.value]);\n        });\n    }\n}\n","import * as JSON from \"../package.json\";\n\nexport default JSON;\n","import type { IJSPatcherSDK } from \"@jspatcher/jspatcher/src/core/SDK\";\r\n\r\nconst sdk = (globalThis as any).jspatcherEnv.sdk as IJSPatcherSDK;\r\nexport const {\r\n    React,\r\n    ReactDOM,\r\n    SemanticUI,\r\n    PatcherAudio,\r\n    OperableAudioBuffer,\r\n    TempTextFile,\r\n    PatcherText,\r\n    TextEditor,\r\n    TextEditorUI,\r\n    Patcher,\r\n    PatcherEditor,\r\n    PatcherEditorUI,\r\n    Box,\r\n    Line,\r\n    BaseObject,\r\n    DefaultObject,\r\n    BaseUI,\r\n    DefaultUI,\r\n    CanvasUI,\r\n    CodeUI,\r\n    DefaultPopupUI,\r\n    CodePopupUI,\r\n    DOMUI,\r\n    generateDefaultObject,\r\n    generateRemoteObject,\r\n    generateRemotedObject,\r\n    Bang,\r\n    isBang,\r\n    TransmitterNode,\r\n    TemporalAnalyserNode,\r\n    SpectralAnalyserNode,\r\n    MathUtils,\r\n    BufferUtils,\r\n    Utils,\r\n    getReactMonacoEditor\r\n} = sdk;\r\n\r\nexport interface Bang extends InstanceType<typeof Bang> {}\r\nexport interface PatcherAudio extends InstanceType<typeof PatcherAudio> {}\r\nexport interface OperableAudioBuffer extends InstanceType<typeof OperableAudioBuffer> {}\r\nexport interface TempTextFile extends InstanceType<typeof TempTextFile> {}\r\nexport interface PatcherText extends InstanceType<typeof PatcherText> {}\r\nexport interface Patcher extends InstanceType<typeof Patcher> {}\r\nexport interface Box extends InstanceType<typeof Box> {}\r\nexport interface Line extends InstanceType<typeof Line> {}\r\nexport interface BaseObject extends InstanceType<typeof BaseObject> {}\r\nexport interface TransmitterNode extends InstanceType<typeof TransmitterNode> {}\r\nexport interface TemporalAnalyserNode extends InstanceType<typeof TemporalAnalyserNode> {}\r\nexport interface SpectralAnalyserNode extends InstanceType<typeof SpectralAnalyserNode> {}\r\nexport interface CanvasUI extends InstanceType<typeof CanvasUI> {}\r\n","import type { BaseUIState } from \"@jspatcher/jspatcher/src/core/objects/base/BaseUI\";\nimport { React, BaseUI, CanvasUI, MathUtils } from \"../sdk\";\nimport type LiveObject from \"../objects/base-live\";\n\nexport interface PointerDownEvent {\n    x: number;\n    y: number;\n    originalEvent: MouseEvent | TouchEvent | React.MouseEvent | React.TouchEvent;\n}\n\nexport interface PointerDragEvent {\n    prevValue: number;\n    x: number;\n    y: number;\n    fromX: number;\n    fromY: number;\n    movementX: number;\n    movementY: number;\n    originalEvent: MouseEvent | TouchEvent | React.MouseEvent | React.TouchEvent;\n}\n\nexport interface PointerUpEvent {\n    x: number;\n    y: number;\n    originalEvent: MouseEvent | TouchEvent | React.MouseEvent | React.TouchEvent;\n}\n\nexport interface LiveObjectUIProps {\n    value: number;\n    min: number;\n    max: number;\n    step: number;\n    type: \"float\" | \"int\" | \"enum\";\n    enums: string[];\n    active: boolean;\n    focus: boolean;\n    shortName: string;\n    longName: string;\n    unitStyle: \"int\" | \"float\" | \"time\" | \"hertz\" | \"decibel\" | \"%\" | \"pan\" | \"semitones\" | \"midi\" | \"custom\" | \"native\";\n    units: string;\n    exponent: number;\n    speedLim: number;\n    frameRate: number;\n}\nexport interface LiveObjectUIState extends LiveObjectUIProps { }\n\nexport const getDisplayValue = (value: number, type: string, unitstyle: string, units: string, enums: string[]) => {\n    if (type === \"enum\") return enums[value];\n    if (unitstyle === \"int\") return value.toFixed(0);\n    if (unitstyle === \"float\") return value.toFixed(2);\n    if (unitstyle === \"time\") return value.toFixed(type === \"int\" ? 0 : 2) + \" ms\";\n    if (unitstyle === \"hertz\") return value.toFixed(type === \"int\" ? 0 : 2) + \" Hz\";\n    if (unitstyle === \"decibel\") return value.toFixed(type === \"int\" ? 0 : 2) + \" dB\";\n    if (unitstyle === \"%\") return value.toFixed(type === \"int\" ? 0 : 2) + \" %\";\n    if (unitstyle === \"pan\") return value === 0 ? \"C\" : (type === \"int\" ? Math.abs(value) : Math.abs(value).toFixed(2)) + (value < 0 ? \" L\" : \" R\");\n    if (unitstyle === \"semitones\") return value.toFixed(type === \"int\" ? 0 : 2) + \" st\";\n    if (unitstyle === \"midi\") return MathUtils.toMIDI(value);\n    if (unitstyle === \"custom\") return value.toFixed(type === \"int\" ? 0 : 2) + \" \" + units;\n    if (unitstyle === \"native\") return value.toFixed(type === \"int\" ? 0 : 2);\n    return \"N/A\";\n};\nexport default class LiveObjectUI<T extends LiveObject, S extends Partial<LiveObjectUIState> & Record<string, any> = {}> extends CanvasUI<T, {}, S & LiveObjectUIState & BaseUIState> {\n    className: string;\n    $changeTimer = -1;\n    state: S & LiveObjectUIState & BaseUIState = {\n        ...this.state,\n        value: this.object.state.value\n    };\n    handleKeyDown = (e: React.KeyboardEvent) => { };\n    handleKeyUp = (e: React.KeyboardEvent) => { };\n    private handleTouchStart = (e: React.TouchEvent) => {\n        this.canvas.focus();\n        const rect = this.canvas.getBoundingClientRect();\n        let prevX = e.touches[0].clientX;\n        let prevY = e.touches[0].clientY;\n        const fromX = prevX - rect.left;\n        const fromY = prevY - rect.top;\n        const prevValue = this.state.value;\n        this.handlePointerDown({ x: fromX, y: fromY, originalEvent: e });\n        const handleTouchMove = (e: TouchEvent) => {\n            e.preventDefault();\n            const clientX = e.changedTouches[0].clientX;\n            const clientY = e.changedTouches[0].clientY;\n            const movementX = clientX - prevX;\n            const movementY = clientY - prevY;\n            prevX = clientX;\n            prevY = clientY;\n            const x = clientX - rect.left;\n            const y = clientY - rect.top;\n            this.handlePointerDrag({ prevValue, x, y, fromX, fromY, movementX, movementY, originalEvent: e });\n        };\n        const handleTouchEnd = (e: TouchEvent) => {\n            e.preventDefault();\n            const x = e.changedTouches[0].clientX - rect.left;\n            const y = e.changedTouches[0].clientY - rect.top;\n            this.handlePointerUp({ x, y, originalEvent: e });\n            document.removeEventListener(\"touchmove\", handleTouchMove);\n            document.removeEventListener(\"touchend\", handleTouchEnd);\n        };\n        document.addEventListener(\"touchmove\", handleTouchMove, { passive: false });\n        document.addEventListener(\"touchend\", handleTouchEnd, { passive: false });\n    };\n    handleWheel = (e: React.WheelEvent) => { };\n    handleClick = (e: React.MouseEvent) => { };\n    private handleMouseDown = (e: React.MouseEvent) => {\n        e.preventDefault();\n        this.canvas.focus();\n        const rect = this.canvas.getBoundingClientRect();\n        const fromX = e.clientX - rect.left;\n        const fromY = e.clientY - rect.top;\n        const prevValue = this.state.value;\n        this.handlePointerDown({ x: fromX, y: fromY, originalEvent: e });\n        const handleMouseMove = (e: MouseEvent) => {\n            e.preventDefault();\n            const x = e.clientX - rect.left;\n            const y = e.clientY - rect.top;\n            this.handlePointerDrag({ prevValue, x, y, fromX, fromY, movementX: e.movementX, movementY: e.movementY, originalEvent: e });\n        };\n        const handleMouseUp = (e: MouseEvent) => {\n            e.preventDefault();\n            const x = e.clientX - rect.left;\n            const y = e.clientY - rect.top;\n            this.handlePointerUp({ x, y, originalEvent: e });\n            document.removeEventListener(\"mousemove\", handleMouseMove);\n            document.removeEventListener(\"mouseup\", handleMouseUp);\n        };\n        document.addEventListener(\"mousemove\", handleMouseMove);\n        document.addEventListener(\"mouseup\", handleMouseUp);\n    };\n    handleMouseOver = (e: React.MouseEvent) => { };\n    handleMouseOut = (e: React.MouseEvent) => { };\n    handleContextMenu = (e: React.MouseEvent) => { };\n    handlePointerDown = (e: PointerDownEvent) => { };\n    handlePointerDrag = (e: PointerDragEvent) => { };\n    handlePointerUp = (e: PointerUpEvent) => { };\n    handleFocusIn = (e: React.FocusEvent) => this.setState({ focus: true });\n    handleFocusOut = (e: React.FocusEvent) => this.setState({ focus: false });\n    /**\n     * Normalized value between 0 - 1.\n     */\n    get distance() {\n        return LiveObjectUI.getDistance(this.state);\n    }\n    static getDistance(state: { type: \"enum\" | \"int\" | \"float\"; value: number; min: number; max: number; exponent: number; enums?: string[] }) {\n        const { type, max, min, value, exponent, enums } = state;\n        const normalized = type === \"enum\" ? Math.max(0, Math.min(enums.length - 1, value)) / (enums.length - 1) : (Math.max(min, Math.min(max, value)) - min) / (max - min);\n        return MathUtils.iNormExp(normalized || 0, exponent);\n    }\n    /**\n     * Count steps in range min-max with step\n     */\n    get stepsCount() {\n        const { type, max, min, step, enums } = this.state;\n        if (type === \"enum\") return enums.length - 1;\n        if (type === \"float\") return Math.min(Number.MAX_SAFE_INTEGER, Math.floor((max - min) / step));\n        return Math.min(Math.floor((max - min) / (Math.round(step) || 1)), max - min);\n    }\n    get displayValue() {\n        const { value, type, unitStyle, units, enums } = this.state;\n        return getDisplayValue(value, type, unitStyle, units, enums);\n    }\n    setValueToOutput(value: number) {\n        this.setState({ value });\n        this.scheduleChangeHandler();\n    }\n    changeCallback = () => {\n        this.props.object.onChangeFromUI({ value: this.state.value, displayValue: this.displayValue });\n        this.$changeTimer = -1;\n    };\n    scheduleChangeHandler() {\n        if (this.$changeTimer === -1) this.$changeTimer = window.setTimeout(this.changeCallback, this.state.speedLim);\n    }\n    paint() { }\n    render() {\n        return (\n            <BaseUI {...this.props}>\n                <canvas\n                    ref={this.refCanvas}\n                    className={[\"live-component\", this.className].join(\" \")}\n                    style={{ position: \"absolute\", display: \"inline-block\", width: \"100%\", height: \"100%\" }}\n                    tabIndex={1}\n                    onKeyDown={this.handleKeyDown}\n                    onKeyUp={this.handleKeyUp}\n                    onTouchStart={this.handleTouchStart}\n                    onWheel={this.handleWheel}\n                    onClick={this.handleClick}\n                    onMouseDown={this.handleMouseDown}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onContextMenu={this.handleContextMenu}\n                    onFocus={this.handleFocusIn}\n                    onBlur={this.handleFocusOut}\n                    {...this.props.canvasProps}\n                />\n            </BaseUI>\n        );\n    }\n}\n","import LiveObjectUI, { LiveObjectUIState } from \"../ui/base-live\";\nimport type LiveButton from \"../objects/button-live\";\nimport type { LiveButtonProps } from \"../objects/button-live\";\n\nexport interface LiveButtonUIState extends Omit<Required<LiveButtonProps>, \"transition\">, LiveObjectUIState { }\n\nexport default class LiveButtonUI extends LiveObjectUI<LiveButton, LiveButtonUIState> {\n    static defaultSize: [number, number] = [30, 30];\n    className = \"live-button\";\n    inTouch = false;\n    $resetTimer = -1;\n    componentDidMount(): void {\n        super.componentDidMount();\n        this.box.setWidth(LiveButtonUI.defaultSize[0]);\n        this.box.setHeight(LiveButtonUI.defaultSize[1]);\n    }\n    resetCallback = () => {\n        this.setValueToOutput(0);\n        this.$resetTimer = -1;\n    };\n    paint() {\n        if (this.$resetTimer !== -1) {\n            window.clearTimeout(this.$resetTimer);\n            this.resetCallback();\n        }\n        const {\n            // width,\n            // height,\n            active,\n            focus,\n            bgColor,\n            activeBgColor,\n            bgOnColor,\n            activeBgOnColor,\n            borderColor,\n            focusBorderColor,\n            value\n        } = this.state;\n        const ctx = this.ctx;\n        if (!ctx) return;\n        const borderWidth = 1;\n\n        const [width, height] = this.fullSize();\n        ctx.clearRect(0, 0, width, height);\n\n        ctx.lineWidth = borderWidth;\n        const buttonBgColor = active ? (value ? activeBgOnColor : activeBgColor) : (value ? bgOnColor : bgColor);\n        const buttonBorderColor = focus ? focusBorderColor : borderColor;\n\n        ctx.fillStyle = buttonBgColor;\n        ctx.beginPath();\n        ctx.ellipse(width * 0.5, height * 0.5, width * 0.5 - 2 * borderWidth, height * 0.5 - 2 * borderWidth, 0, 0, 2 * Math.PI);\n        ctx.fill();\n        ctx.strokeStyle = buttonBorderColor;\n        ctx.stroke();\n\n        if (value && !this.inTouch) this.$resetTimer = window.setTimeout(this.resetCallback, 100);\n    }\n    handlePointerDown = () => {\n        this.inTouch = true;\n        this.setValueToOutput(1);\n    };\n    handlePointerUp = () => {\n        this.inTouch = false;\n        this.setValueToOutput(0);\n    };\n}\n","import type BaseObject from \"@jspatcher/jspatcher/src/core/objects/base/BaseObject\";\nimport type { BaseUIProps, BaseUIState } from \"@jspatcher/jspatcher/src/core/objects/base/BaseUI\";\nimport { React, BaseUI, Utils } from \"../sdk\";\n\nexport interface ButtonUIState extends BaseUIState {\n    text: string;\n    loading: boolean;\n}\nexport default class ButtonUI<T extends BaseObject<{ text: string }, {}, any, any, any, any, { text: string }>> extends BaseUI<T, {}, ButtonUIState> {\n    state: ButtonUIState = { ...this.state, loading: false, text: this.props.object.data.text };\n    refSpan = React.createRef<HTMLSpanElement>();\n    componentDidMount() {\n        super.componentDidMount();\n        if (this.props.editing)\n            this.toggleEdit(this.props.editing);\n    }\n    componentDidUpdate(prevProps: Readonly<BaseUIProps>) {\n        if (this.props.editing !== prevProps.editing) this.toggleEdit(this.props.editing);\n    }\n    handleChanged = (text: string) => { };\n    toggleEdit(toggle: boolean) {\n        const { editor, box } = this;\n        if (editor.state.locked) return;\n        if (!this.refSpan.current) return;\n        const span = this.refSpan.current;\n        if (toggle) {\n            editor.selectOnly(box.id);\n            this.setState({ text: span.textContent }, () => {\n                span.focus();\n                Utils.selectElementRange(span);\n            });\n        } else {\n            window.getSelection().removeAllRanges();\n            span.blur();\n            this.setState({ text: span.textContent });\n            this.handleChanged(span.textContent);\n        }\n    }\n    handleMouseDown = (e: React.MouseEvent) => (this.props.editing ? e.stopPropagation() : null);\n    handleClickSpan = (e: React.MouseEvent) => (this.props.editing ? e.stopPropagation() : null);\n    handleClick = (e: React.MouseEvent) => { };\n    handleKeyDown = (e: React.KeyboardEvent) => { // propagate for parent for focus on boxUI\n        if (!this.props.editing) return;\n        if (e.key === \"Enter\") {\n            e.preventDefault();\n            return;\n        }\n        e.stopPropagation();\n        e.nativeEvent.stopImmediatePropagation();\n    };\n    handlePaste = (e: React.ClipboardEvent) => {\n        if (!this.props.editing) return;\n        e.preventDefault();\n        document.execCommand(\"insertHTML\", false, e.clipboardData.getData(\"text/plain\"));\n    };\n    render() {\n        const classArray = [\"box-ui-button\", \"ui\", \"button\", \"compact\", \"mini\"];\n        return (\n            <BaseUI {...this.props} additionalClassName={classArray.join(\" \")} containerProps={{ onClick: this.handleClick }}>\n                <div className=\"box-ui-text-container\">\n                    <span contentEditable={this.props.editing} className={\"editable\" + (this.props.editing ? \" editing\" : \"\")} ref={this.refSpan} onMouseDown={this.handleMouseDown} onClick={this.handleClickSpan} onPaste={this.handlePaste} onKeyDown={this.handleKeyDown} onBlur={this.props.onEditEnd} suppressContentEditableWarning={true}>\n                        {this.state.text}\n                    </span>\n                </div>\n            </BaseUI>\n        );\n    }\n}\n","import ButtonUI from \"./button\";\r\nimport type message from \"../objects/message\";\r\n\r\nexport default class MessageUI extends ButtonUI<message> {\r\n    static editableOnUnlock = true;\r\n    handleChanged = (text: string) => this.object.handleUpdateArgs([text]);\r\n    handleClick = (e: React.MouseEvent) => {\r\n        // if (this.editor.state.locked) this.object.produceOutput(null);\r\n    };\r\n    handleMouseDown = (e: React.MouseEvent) => {\r\n        if (this.editor.state.locked) this.object.produceOutput(null);\r\n    };\r\n}\r\n","import type { CanvasUIState } from \"@jspatcher/jspatcher/src/core/objects/base/CanvasUI\";\nimport { React, CanvasUI } from \"../sdk\";\nimport { fillTextLine } from \"../utils\";\nimport type NumberBox from \"../objects/number\";\nimport type { NumberBoxProps, NumberBoxState } from \"../objects/number\";\nimport type { PointerDownEvent, PointerDragEvent, PointerUpEvent } from \"./types\";\n\nexport interface NumberBoxUIState extends NumberBoxState, CanvasUIState, NumberBoxProps {\n    // displayValue: string;\n    focus: boolean;\n    inTouch: boolean;\n    inputBuffer: string;\n}\n\n// https://github.com/Cycling74/miraweb/blob/master/src/js/objects/number.js\nexport default class NumberBoxUI extends CanvasUI<NumberBox, {}, NumberBoxUIState> {\n    static MAX_NUM_DECIMAL_PLACES = 6;\n    static PADDING = 4;\n    static TRIANGLE_BASE = 12;\n    static TRIANGLE_HEIGHT = 6;\n    static LEFT_TEXT_OFFSET = this.TRIANGLE_HEIGHT;\n    refCanvasUI = React.createRef<CanvasUI>();\n    state: NumberBoxUIState = {\n        ...this.state,\n        value: this.object.state.value,\n        focus: false,\n        inTouch: false,\n        inputBuffer: \"\"\n    };\n    multiplier = 1;\n    handleKeyDown = (e: React.KeyboardEvent) => {\n        if (this.state.cantChange) return;\n        if (!this.state.inputBuffer) {\n            let addStep = 0;\n            if (e.key === \"ArrowUp\" || e.key === \"ArrowRight\") addStep = 1;\n            if (e.key === \"ArrowDown\" || e.key === \"ArrowLeft\") addStep = -1;\n            if (addStep !== 0) {\n                const newValue = this.object.toValidValue(this.state.value + addStep);\n                if (newValue !== this.state.value) this.setValueToOutput(newValue);\n            }\n        }\n        if (e.key.match(/[0-9.-]/)) {\n            this.setState({ inputBuffer: this.state.inputBuffer + e.key });\n            return;\n        }\n        if (e.key === \"Backspace\") {\n            this.setState({ inputBuffer: this.state.inputBuffer.slice(0, -1) });\n            return;\n        }\n        if (e.key === \"Enter\") {\n            const newValue = this.object.toValidValue(+this.state.inputBuffer);\n            this.setState({ inputBuffer: \"\" });\n            if (newValue !== this.state.value) this.setValueToOutput(newValue);\n        }\n    };\n    handleKeyUp = (e: React.KeyboardEvent) => { };\n    private handleTouchStart = (e: React.TouchEvent<HTMLCanvasElement>) => {\n        e.currentTarget.focus();\n        const rect = e.currentTarget.getBoundingClientRect();\n        let prevX = e.touches[0].clientX;\n        let prevY = e.touches[0].clientY;\n        const fromX = prevX - rect.left;\n        const fromY = prevY - rect.top;\n        const prevValue = this.state.value;\n        this.handlePointerDown({ x: fromX, y: fromY, originalEvent: e });\n        const handleTouchMove = (e: TouchEvent) => {\n            e.preventDefault();\n            const clientX = e.changedTouches[0].clientX;\n            const clientY = e.changedTouches[0].clientY;\n            const movementX = clientX - prevX;\n            const movementY = clientY - prevY;\n            prevX = clientX;\n            prevY = clientY;\n            const x = clientX - rect.left;\n            const y = clientY - rect.top;\n            this.handlePointerDrag({ prevValue, x, y, fromX, fromY, movementX, movementY, originalEvent: e });\n        };\n        const handleTouchEnd = (e: TouchEvent) => {\n            e.preventDefault();\n            const x = e.changedTouches[0].clientX - rect.left;\n            const y = e.changedTouches[0].clientY - rect.top;\n            this.handlePointerUp({ x, y, originalEvent: e });\n            document.removeEventListener(\"touchmove\", handleTouchMove);\n            document.removeEventListener(\"touchend\", handleTouchEnd);\n        };\n        document.addEventListener(\"touchmove\", handleTouchMove, { passive: false });\n        document.addEventListener(\"touchend\", handleTouchEnd, { passive: false });\n    };\n    handleWheel = (e: React.WheelEvent) => { };\n    handleClick = (e: React.MouseEvent) => { };\n    private handleMouseDown = (e: React.MouseEvent<HTMLCanvasElement>) => {\n        e.preventDefault();\n        e.currentTarget.focus();\n        const rect = e.currentTarget.getBoundingClientRect();\n        const fromX = e.clientX - rect.left;\n        const fromY = e.clientY - rect.top;\n        const prevValue = this.state.value;\n        this.handlePointerDown({ x: fromX, y: fromY, originalEvent: e });\n        const handleMouseMove = (e: MouseEvent) => {\n            e.preventDefault();\n            const x = e.clientX - rect.left;\n            const y = e.clientY - rect.top;\n            this.handlePointerDrag({ prevValue, x, y, fromX, fromY, movementX: e.movementX, movementY: e.movementY, originalEvent: e });\n        };\n        const handleMouseUp = (e: MouseEvent) => {\n            e.preventDefault();\n            const x = e.clientX - rect.left;\n            const y = e.clientY - rect.top;\n            this.handlePointerUp({ x, y, originalEvent: e });\n            document.removeEventListener(\"mousemove\", handleMouseMove);\n            document.removeEventListener(\"mouseup\", handleMouseUp);\n        };\n        document.addEventListener(\"mousemove\", handleMouseMove);\n        document.addEventListener(\"mouseup\", handleMouseUp);\n    };\n    handleMouseOver = (e: React.MouseEvent) => { };\n    handleMouseOut = (e: React.MouseEvent) => { };\n    handleContextMenu = (e: React.MouseEvent) => { };\n    mouseDownValue = this.state.value;\n    handlePointerDown = (e: PointerDownEvent<HTMLCanvasElement>) => {\n        const { ctx } = this.refCanvasUI.current;\n        if (!ctx) return;\n\n        let { value, numDecimalPlaces, fontFamily, fontFace, fontSize, format, cantChange, outputOnClick, triangle, triScale } = this.state;\n        if (cantChange) return;\n        if (outputOnClick) this.setValueToOutput(this.state.value);\n        this.mouseDownValue = this.state.value;\n\n        const { width } = (e.originalEvent.currentTarget as HTMLCanvasElement).getBoundingClientRect();\n        if (numDecimalPlaces === 0) numDecimalPlaces = 6;\n\n        ctx.font = `${fontFace === \"regular\" ? \"\" : fontFace} ${fontSize}px ${fontFamily}, sans-serif`;\n\n        const { PADDING, LEFT_TEXT_OFFSET } = NumberBoxUI;\n\n        const stringValue = value.toFixed(numDecimalPlaces);\n        const decimalArray = stringValue.split(\".\");\n        const leftTextOffset = LEFT_TEXT_OFFSET * triScale;\n        const textStart = (+triangle * leftTextOffset) + 3 * PADDING / 2;\n\n        // this is the code to target which decimal place is being dragged\n        // if it is to the left of the decimal point, the number is changed\n        // by 1\n        // if it is to the right of the decimal point, the number is changed\n        // based on the distance from the decimal point\n        if (format === \"Decimal (Floating-Point)\") {\n            for (let i = -1; i < numDecimalPlaces; i++) {\n                let numberText;\n                if (i === -1) {\n                    numberText = decimalArray[0] + \".\";\n                } else {\n                    numberText = decimalArray[0] + \".\" + decimalArray[1].substring(0, i + 1);\n                }\n                const textWidth = ctx.measureText(numberText).width;\n                if (e.x < textWidth + textStart) {\n                    this.multiplier = Math.pow(10, -(i + 1));\n                    break;\n                } else {\n                    this.multiplier = Math.pow(10, -numDecimalPlaces);\n                }\n            }\n        }\n        this.setState({ inTouch: true });\n    };\n    handlePointerDrag = (e: PointerDragEvent) => {\n        const { value, cantChange, format } = this.state;\n        if (cantChange) return;\n        const multiplier = format === \"Decimal (Floating-Point)\" ? this.multiplier : 1;\n        const decimals = -Math.log10(multiplier);\n        let newValue = this.toFixedTruncate(value, decimals);\n        newValue = newValue - e.movementY * multiplier;\n        newValue = this.object.toValidValue(newValue);\n        newValue = Math.round(newValue * 10 ** decimals) / 10 ** decimals;\n        this.setState({ value: newValue });\n        if (!this.state.mouseFilter && newValue !== value) this.setValueToOutput(newValue);\n    };\n    handlePointerUp = (e: PointerUpEvent) => {\n        const { value, cantChange } = this.state;\n        if (cantChange) return;\n        if (this.state.mouseFilter && this.mouseDownValue !== value) this.setValueToOutput(this.state.value);\n        this.setState({ inTouch: false });\n    };\n    handleFocusIn = (e: React.FocusEvent) => this.setState({ focus: true });\n    handleFocusOut = () => {\n        if (this.state.inputBuffer) {\n            const newValue = this.object.toValidValue(+this.state.inputBuffer);\n            this.setState({ inputBuffer: \"\" });\n            if (newValue !== this.state.value) this.setValueToOutput(newValue);\n        }\n        this.setState({ focus: false });\n    };\n    toFixedTruncate(num: number, fixed: number) {\n        const re = new RegExp(`^-?\\\\d+(?:\\.\\\\d{0,${(fixed || -1)}})?`);\n        return parseFloat(num.toString().match(re)[0]);\n    }\n    _formatValue(value = this.state.value) {\n        const {\n            format,\n            numDecimalPlaces\n        } = this.state;\n\n        let retStr;\n\n        switch (format) {\n            case \"Decimal (Integer)\":\n                retStr = Math.round(value).toString();\n                break;\n\n            case \"Decimal (Floating-Point)\":\n                if (value % 1 === 0 && numDecimalPlaces === 0) {\n                    retStr = value + \".\";\n                }\n                else {\n                    if (numDecimalPlaces === 0) {\n                        retStr = parseFloat(value.toFixed(NumberBoxUI.MAX_NUM_DECIMAL_PLACES)).toString();\n                    } else {\n                        retStr = value.toFixed(numDecimalPlaces);\n                    }\n                }\n                break;\n\n            case \"MIDI\":\n            case \"MIDI (C4)\": {\n\n                const noteArray = [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"];\n                let base = 2;\n                if (format === \"MIDI (C4)\") base = 1;\n                const note = noteArray[value % 12] + (Math.floor(value / 12) - base).toString();\n                if (value <= 127 && value >= 0) {\n                    retStr = note;\n                } else if (value < 0) {\n                    retStr = \"-\";\n                } else if (value > 127) {\n                    retStr = \"+\";\n                }\n                break;\n            }\n            case \"Binary\":\n                retStr = (value >>> 0).toString(2);\n                break;\n\n            case \"Hex\":\n                retStr = (value >>> 0).toString(16).toUpperCase();\n                break;\n\n            case \"Roland Octal\": {\n                let dec1 = ((value >> 3) + 1);\n                let dec2 = ((value & 7) + 1);\n                retStr = dec1.toString() + dec2.toString();\n                break;\n            }\n            default:\n                retStr = value.toString();\n                break;\n        }\n        return retStr;\n    }\n    setValueToOutput(value: number) {\n        this.setState({ value });\n        this.props.object.onChangeFromUI({ value });\n    }\n    onPaint = (ctx: CanvasRenderingContext2D) => {\n        if (!ctx) return;\n        const {\n            fontSize,\n            fontFamily,\n            fontFace,\n            bgColor,\n            textColor,\n            triangle,\n            triColor,\n            triScale,\n            hTriColor,\n            inTouch\n        } = this.state;\n\n        const { PADDING, TRIANGLE_BASE, TRIANGLE_HEIGHT, LEFT_TEXT_OFFSET } = NumberBoxUI;\n\n        const triangleBase = TRIANGLE_BASE * triScale;\n        const triangleHeight = TRIANGLE_HEIGHT * triScale;\n        const leftTextOffset = LEFT_TEXT_OFFSET * triScale;\n\n        const valueStr = this.state.inputBuffer || this._formatValue(this.state.value);\n\n        const [width, height] = this.refCanvasUI.current.fullSize();\n        // draw background\n        ctx.clearRect(0, 0, width, height);\n        ctx.fillStyle = bgColor;\n        ctx.fillRect(0, 0, width, height);\n\n        ctx.font = `${fontFace === \"regular\" ? \"\" : fontFace} ${fontSize}px ${fontFamily}, sans-serif`;\n        ctx.fillStyle = textColor;\n        ctx.textBaseline = \"middle\";\n\n        if (triangle) {\n            fillTextLine(ctx, valueStr, leftTextOffset + 3 * PADDING / 2, height / 2, width - leftTextOffset - (PADDING + 2));\n\n            ctx.fillStyle = inTouch ? hTriColor : triColor;\n            ctx.beginPath();\n            ctx.moveTo(PADDING, height / 2 - triangleBase / 2);\n            ctx.lineTo(PADDING, height / 2 + triangleBase / 2);\n            ctx.lineTo(PADDING + triangleHeight, height / 2);\n            ctx.fill();\n        } else {\n            fillTextLine(ctx, valueStr, 3 * PADDING / 2, height / 2, width - (PADDING + 2));\n        }\n    }\n\n    render() {\n        return (\n            <CanvasUI\n                ref={this.refCanvasUI}\n                onPaint={this.onPaint}\n                {...this.props}\n                canvasProps={{\n                    tabIndex: 1,\n                    onKeyDown: this.handleKeyDown,\n                    onKeyUp: this.handleKeyUp,\n                    onTouchStart: this.handleTouchStart,\n                    onWheel: this.handleWheel,\n                    onClick: this.handleClick,\n                    onMouseDown: this.handleMouseDown,\n                    onMouseOver: this.handleMouseOver,\n                    onMouseOut: this.handleMouseOut,\n                    onContextMenu: this.handleContextMenu,\n                    onFocus: this.handleFocusIn,\n                    onBlur: this.handleFocusOut\n                }}\n            />\n        );\n    }\n}\n","import * as Color from \"color-js\";\nimport { CanvasUI } from \"../sdk\";\nimport type Oscilloscope from \"../objects/scope\";\n\nexport interface OscilloscopeUIState {\n    continuous: boolean;\n    frameRate: number;\n    interleaved: boolean;\n    stablize: boolean;\n    $cursor: number;\n    zoom: number;\n    zoomOffset: number;\n    range: number;\n    autoRange: boolean;\n    showStats: boolean;\n    bgColor: string;\n    phosphorColor: string;\n    hueOffset: number;\n    textColor: string;\n    gridColor: string;\n    seperatorColor: string;\n    paint: {};\n}\nexport default class OscilloscopeUI extends CanvasUI<Oscilloscope, {}, OscilloscopeUIState> {\n    static defaultSize = [120, 60] as [number, number];\n    componentDidMount() {\n        const { bgColor } = this.state;\n        const ctx = this.ctx;\n        if (!ctx) return;\n        const [width, height] = this.fullSize();\n        // Background\n        ctx.fillStyle = bgColor;\n        ctx.fillRect(0, 0, width, height);\n        super.componentDidMount();\n    }\n    async paint() {\n        if (this.state.continuous) this.schedulePaint();\n        if (!this.object._.node) return;\n        if (this.object._.node.destroyed) return;\n        const {\n            // width,\n            // height,\n            // zoom,\n            // zoomOffset,\n            stablize,\n            interleaved,\n            // $cursor,\n            range,\n            autoRange,\n            showStats,\n            bgColor,\n            phosphorColor,\n            hueOffset,\n            textColor,\n            gridColor,\n            seperatorColor\n        } = this.state;\n        const ctx = this.ctx;\n        if (!ctx) return;\n\n        const left = 0;\n        const bottom = 0;\n\n        const { estimatedFreq, buffer } = await this.object._.node.gets(\"estimatedFreq\", \"buffer\");\n        const l = this.object.getProp(\"windowSize\");\n        const { sampleRate } = this.object.audioCtx;\n\n        // Background\n        const [width, height] = this.fullSize();\n        ctx.clearRect(0, 0, width, height);\n        ctx.fillStyle = bgColor;\n        ctx.fillRect(0, 0, width, height);\n\n        if (!buffer) return;\n\n        const { $read: $ui32, data: t } = buffer;\n        if (!t || !t.length || !t[0].length) return;\n\n        const $ = Atomics.load($ui32, 0);\n        const channels = t.length;\n        const dl = t[0].length;\n        // Vertical Range\n        let yMin = -range;\n        let yMax = range;\n        let yFactor = range;\n        if (autoRange) {\n            // Fastest way to get min and max to have: 1. max abs value for y scaling, 2. mean value for zero-crossing\n            let i = channels;\n            let s: number;\n            while (i--) {\n                let j = l;\n                while (j--) {\n                    s = t[i][($ + j) % dl];\n                    if (s < yMin) yMin = s;\n                    else if (s > yMax) yMax = s;\n                }\n            }\n            yFactor = Math.max(1, Math.abs(yMin), Math.abs(yMax))/* * vzoom*/;\n        }\n        const calcY = (v: number, i: number) => channelHeight * (+interleaved * i + 1 - (v - yMin) / (yMax - yMin));\n        // Grids\n        ctx.strokeStyle = gridColor;\n        let vStep = 0.25;\n        while (yFactor / 2 / vStep > 2) vStep *= 2; // Minimum horizontal grids in channel one side = 2\n        ctx.beginPath();\n        ctx.setLineDash([]);\n        const gridChannels = interleaved ? channels : 1;\n        const channelHeight = (height - bottom) / gridChannels;\n        for (let i = 0; i < gridChannels; i++) {\n            let y = calcY(0, i);\n            ctx.moveTo(left, y);\n            ctx.lineTo(width, y); // 0-line\n            for (let j = vStep; j < yFactor; j += vStep) {\n                y = calcY(j, i);\n                ctx.moveTo(left, y);\n                ctx.lineTo(width, y); // below 0\n                y = calcY(-j, i);\n                ctx.moveTo(left, y);\n                ctx.lineTo(width, y); // above 0\n            }\n        }\n        ctx.stroke();\n\n        ctx.beginPath();\n        ctx.setLineDash([4, 2]);\n        ctx.strokeStyle = seperatorColor;\n        for (let i = 1; i < gridChannels; i++) {\n            ctx.moveTo(left, i * channelHeight);\n            ctx.lineTo(width, i * channelHeight);\n        }\n        ctx.stroke();\n        ctx.setLineDash([]);\n        ctx.lineWidth = 2;\n        const channelColor: string[] = [];\n        let $zerox = 0; // First Zero-crossing of first channel\n        const period = sampleRate / estimatedFreq[0];\n        const times = Math.floor(l / period) - 1;\n        for (let i = 0; i < channels; i++) {\n            // Horizontal Range\n            let $0 = 0; // Draw start\n            let $1 = l; // Draw End\n            let drawL = l; // Length to draw\n            if (stablize) { // Stablization\n                if (i === 0) {\n                    const thresh = (yMin + yMax) * 0.5 + 0.001; // the zero-crossing with \"offset\"\n                    while ($zerox < l && t[i][($ + $zerox++) % dl] > thresh); // Find first raise\n                    if ($zerox >= l - 1) { // Found nothing, no stablization\n                        $zerox = 0;\n                    } else {\n                        while ($zerox < l && t[i][($ + $zerox++) % dl] < thresh); // Find first drop\n                        $zerox--;\n                        if ($zerox >= l - 1 || $zerox < 0) {\n                            $zerox = 0;\n                        }\n                    }\n                }\n                drawL = times > 0 && isFinite(period) ? ~~Math.min(period * times, l - $zerox) : l - $zerox; // length to draw\n            }\n            $0 = Math.round($zerox/* + drawL * zoomOffset*/);\n            $1 = Math.round($zerox + drawL/* / zoom + drawL * zoomOffset*/);\n            const pixelsPerSamp = (width - left) / ($1 - 1 - $0);\n            const sampsPerPixel = Math.max(1, Math.round(1 / pixelsPerSamp));\n\n            if (interleaved) {\n                ctx.save();\n                const clip = new Path2D();\n                clip.rect(0, i * channelHeight, width, channelHeight);\n                ctx.clip(clip);\n            }\n            ctx.beginPath();\n            channelColor[i] = Color(phosphorColor).shiftHue(i * hueOffset).toHSL();\n            ctx.strokeStyle = channelColor[i];\n            let maxInStep: number;\n            let minInStep: number;\n            let $j: number;\n            let samp: number;\n            let $step: number;\n            let x: number;\n            let y: number;\n            for (let j = $0; j < $1; j++) {\n                $j = (j + $) % dl;\n                samp = t[i][$j];\n                $step = (j - $0) % sampsPerPixel;\n                if ($step === 0) {\n                    maxInStep = samp;\n                    minInStep = samp;\n                } else {\n                    if (samp > maxInStep) maxInStep = samp;\n                    if (samp < minInStep) minInStep = samp;\n                }\n                if ($step !== sampsPerPixel - 1) continue;\n                x = (j - $step - $0) * pixelsPerSamp;\n                y = calcY(maxInStep, i);\n                if (j === $0) ctx.moveTo(x, y);\n                else ctx.lineTo(x, y);\n                if (minInStep !== maxInStep) {\n                    y = calcY(minInStep, i);\n                    ctx.lineTo(x, y);\n                }\n            }\n            ctx.stroke();\n            if (interleaved) ctx.restore();\n        }\n        // Stats\n        if (showStats) {\n            ctx.font = \"bold 12px Consolas, monospace\";\n            ctx.fillStyle = textColor;\n            ctx.textAlign = \"left\";\n            ctx.textBaseline = \"top\";\n            ctx.fillText(yFactor.toFixed(2), 2, 2);\n            ctx.textBaseline = \"bottom\";\n            ctx.fillText((-yFactor).toFixed(2), 2, height - 2);\n            ctx.textAlign = \"right\";\n            const freqStatY = height - 2 - (estimatedFreq.length - 1) * 14;\n            for (let i = 0; i < estimatedFreq.length; i++) {\n                const freq = estimatedFreq[i];\n                ctx.fillStyle = textColor; // TODO -- find better solution for matching waveform color\n                const y = interleaved ? channelHeight * (i + 1) - 2 : freqStatY + 14 * i;\n                ctx.fillText(freq.toFixed(2) + \"Hz\", width - 2, y);\n            }\n        }\n    }\n}\n","import { CanvasUI, MathUtils } from \"../sdk\";\nimport Spectrogram from \"../objects/spectrogram\";\n\nexport interface SpectrogramUIState {\n    continuous: boolean;\n    frameRate: number;\n    cursorX: number;\n    cursorY: number;\n    zoom: number;\n    zoomOffset: number;\n    bgColor: string;\n    // textColor: string;\n    gridColor: string;\n    seperatorColor: string;\n    paint: {};\n}\nexport default class SpectrogramUI extends CanvasUI<Spectrogram, {}, SpectrogramUIState> {\n    static defaultSize = [120, 60] as [number, number];\n    $lastFrame = -1;\n    dataFrames = 1;\n    offscreenCtx = document.createElement(\"canvas\").getContext(\"2d\");\n    offscreenVRes = 1024;\n    componentDidMount() {\n        const { bgColor } = this.state;\n        const { ctx, offscreenCtx, dataFrames } = this;\n        if (!ctx) return;\n        const [width, height] = this.fullSize();\n        offscreenCtx.canvas.width = dataFrames;\n        offscreenCtx.canvas.height = this.offscreenVRes;\n        // Background\n        ctx.fillStyle = bgColor;\n        ctx.fillRect(0, 0, width, height);\n        super.componentDidMount();\n    }\n    async paint() {\n        if (this.state.continuous) this.schedulePaint();\n        if (!this.object._.node) return;\n        if (this.object._.node.destroyed) return;\n        const {\n            // width,\n            // height,\n            // zoom,\n            // zoomOffset,\n            // $cursor,\n            bgColor,\n            gridColor,\n            seperatorColor\n        } = this.state;\n        const { ctx, offscreenCtx, offscreenVRes } = this;\n        if (!ctx || !offscreenCtx) return;\n\n        const left = 0;\n        const bottom = 0;\n\n        const allAmplitudes = await this.object._.node.getAllAmplitudes();\n\n        // Background\n\n        const [width, height] = this.fullSize();\n        ctx.clearRect(0, 0, width, height);\n        ctx.fillStyle = bgColor;\n        ctx.fillRect(0, 0, width, height);\n\n        if (!allAmplitudes) return;\n        const { data: f, $totalFrames, fftBins: bins, frames, dataFrames, $writeFrame: $writeFrameUi32 } = allAmplitudes;\n        if (!f || !f.length || !f[0].length) return;\n        const l = f[0].length;\n        const channels = f.length;\n\n        // Draw to offscreen canvas\n        const $lastFrame = Atomics.load($totalFrames, 0) - 1;\n        const $writeFrame = Atomics.load($writeFrameUi32, 0);\n        let $frame0 = $writeFrame;\n        let $frame1 = $frame0 + dataFrames;\n        if (this.dataFrames !== dataFrames) {\n            offscreenCtx.canvas.width = dataFrames;\n            this.dataFrames = dataFrames;\n        } else if ($lastFrame >= this.$lastFrame) {\n            $frame0 = Math.max($frame0, $frame1 - ($lastFrame - this.$lastFrame));\n        }\n        this.$lastFrame = $lastFrame;\n        const osChannelHeight = offscreenVRes / channels;\n        const step = Math.max(1, Math.round(bins / osChannelHeight));\n        const vGrid = osChannelHeight / bins;\n        for (let i = 0; i < f.length; i++) {\n            for (let j = $frame0; j < $frame1; j++) {\n                let maxInStep;\n                offscreenCtx.fillStyle = \"black\";\n                offscreenCtx.fillRect(j % dataFrames, i * osChannelHeight, 1, osChannelHeight);\n                for (let k = 0; k < bins; k++) {\n                    const samp = MathUtils.atodb(f[i][(k + j * bins) % l]);\n                    const $step = k % step;\n                    if ($step === 0) maxInStep = samp;\n                    if ($step !== step - 1) {\n                        if ($step !== 0 && samp > maxInStep) maxInStep = samp;\n                        continue;\n                    }\n                    const normalized = Math.min(1, Math.max(0, (maxInStep + 10) / 100 + 1));\n                    if (normalized === 0) continue;\n                    const hue = (normalized * 180 + 240) % 360;\n                    const lum = normalized * 50;\n                    offscreenCtx.fillStyle = `hsl(${hue}, 100%, ${lum}%)`;\n                    offscreenCtx.fillRect(j % dataFrames, (bins - k - 1) * vGrid + i * osChannelHeight, 1, Math.max(1, vGrid));\n                }\n            }\n        }\n        // Grids\n        ctx.strokeStyle = gridColor;\n        const vStep = 0.25;\n        const hStep = 0.25;\n        ctx.beginPath();\n        ctx.setLineDash([]);\n        const gridChannels = channels;\n        const channelHeight = (height - bottom) / gridChannels;\n        for (let i = 0; i < gridChannels; i++) {\n            for (let j = vStep; j < 1; j += vStep) { // Horizontal lines\n                const y = (i + j) * channelHeight;\n                ctx.moveTo(left, y);\n                ctx.lineTo(width, y);\n            }\n        }\n        for (let i = hStep; i < 1; i += hStep) {\n            const x = left + (width - left) * i;\n            ctx.moveTo(x, 0);\n            ctx.lineTo(x, bottom);\n        }\n        ctx.stroke();\n\n        ctx.beginPath();\n        ctx.setLineDash([4, 2]);\n        ctx.strokeStyle = seperatorColor;\n        for (let i = 1; i < gridChannels; i++) {\n            ctx.moveTo(left, i * channelHeight);\n            ctx.lineTo(width, i * channelHeight);\n        }\n        ctx.stroke();\n        ctx.setLineDash([]);\n        // Horizontal Range\n        ctx.save();\n        ctx.globalCompositeOperation = \"lighter\";\n        ctx.imageSmoothingEnabled = false;\n        $frame0 = ($frame1 - frames) % dataFrames;\n        $frame1 = $frame0 + frames;\n        if ($frame1 <= dataFrames) {\n            ctx.drawImage(offscreenCtx.canvas, $frame0, 0, frames, offscreenVRes, left, 0, width - left, height - bottom);\n        } else {\n            const sSplit = dataFrames - $frame0;\n            const dSplit = sSplit / frames * (width - left);\n            ctx.drawImage(offscreenCtx.canvas, $frame0, 0, sSplit, offscreenVRes, left, 0, dSplit, height - bottom);\n            ctx.drawImage(offscreenCtx.canvas, 0, 0, $frame1 - dataFrames - 0.01, offscreenVRes, dSplit + left, 0, width - left - dSplit, height - bottom);\n        }\n        ctx.restore();\n    }\n}\n","import * as Color from \"color-js\";\nimport Spectroscope from \"../objects/spectroscope\";\nimport { CanvasUI, MathUtils } from \"../sdk\";\n\nexport interface SpectroscopeUIState {\n    continuous: boolean;\n    frameRate: number;\n    $cursor: number;\n    zoom: number;\n    zoomOffset: number;\n    bgColor: string;\n    fgColor: string;\n    hueOffset: number;\n    gridColor: string;\n    seperatorColor: string;\n    paint: {};\n}\nexport default class SpectroscopeUI extends CanvasUI<Spectroscope, {}, SpectroscopeUIState> {\n    static defaultSize = [120, 60] as [number, number];\n    componentDidMount() {\n        const { bgColor } = this.state;\n        const ctx = this.ctx;\n        if (!ctx) return;\n        const [width, height] = this.fullSize();\n        // Background\n        ctx.fillStyle = bgColor;\n        ctx.fillRect(0, 0, width, height);\n        super.componentDidMount();\n    }\n    async paint() {\n        if (this.state.continuous) this.schedulePaint();\n        if (!this.object._.node) return;\n        if (this.object._.node.destroyed) return;\n        const {\n            // width,\n            // height,\n            // zoom,\n            // zoomOffset,\n            // $cursor,\n            bgColor,\n            fgColor,\n            hueOffset,\n            gridColor,\n            seperatorColor\n        } = this.state;\n        const ctx = this.ctx;\n        if (!ctx) return;\n\n        const left = 0;\n        const bottom = 0;\n\n        const lastAmplitudes = await this.object._.node.getLastAmplitudes();\n\n        // Background\n        const [width, height] = this.fullSize();\n        ctx.clearRect(0, 0, width, height);\n        ctx.fillStyle = bgColor;\n        ctx.fillRect(0, 0, width, height);\n\n        if (!lastAmplitudes) return;\n        const { data: f } = lastAmplitudes;\n        if (!f || !f.length || !f[0].length) return;\n        const l = f[0].length;\n        const channels = f.length;\n\n        // Grids\n        ctx.strokeStyle = gridColor;\n        const vStep = 0.25;\n        const hStep = 0.25;\n        ctx.beginPath();\n        ctx.setLineDash([]);\n        const gridChannels = channels;\n        const channelHeight = (height - bottom) / gridChannels;\n        for (let i = 0; i < gridChannels; i++) {\n            for (let j = vStep; j < 1; j += vStep) { // Horizontal lines\n                const y = (i + j) * channelHeight;\n                ctx.moveTo(left, y);\n                ctx.lineTo(width, y);\n            }\n        }\n        for (let i = hStep; i < 1; i += hStep) {\n            const x = left + (width - left) * i;\n            ctx.moveTo(x, 0);\n            ctx.lineTo(x, bottom);\n        }\n        ctx.stroke();\n\n        ctx.beginPath();\n        ctx.setLineDash([4, 2]);\n        ctx.strokeStyle = seperatorColor;\n        for (let i = 1; i < gridChannels; i++) {\n            ctx.moveTo(left, i * channelHeight);\n            ctx.lineTo(width, i * channelHeight);\n        }\n        ctx.stroke();\n        ctx.setLineDash([]);\n        ctx.lineWidth = 2;\n        const channelColor: string[] = [];\n        // Horizontal Range\n        const $0 = 0; // Draw start\n        const $1 = l; // Draw End\n        const gridX = (width - left) / ($1 - $0);\n        const step = Math.max(1, Math.round(1 / gridX));\n        for (let i = 0; i < f.length; i++) {\n            ctx.beginPath();\n            channelColor[i] = Color(fgColor).shiftHue(i * hueOffset).toHSL();\n            ctx.fillStyle = channelColor[i];\n            let maxInStep;\n            for (let j = $0; j < $1; j++) {\n                const samp = MathUtils.atodb(f[i][j]);\n                const $step = (j - $0) % step;\n                if ($step === 0) maxInStep = samp;\n                if ($step !== step - 1) {\n                    if ($step !== 0 && samp > maxInStep) maxInStep = samp;\n                    continue;\n                }\n                const x = (j - $0) * gridX + left;\n                const y = channelHeight * (i + 1 - Math.min(1, Math.max(0, maxInStep / 100 + 1)));\n                if (j === $0) ctx.moveTo(x, y);\n                else ctx.lineTo(x, y);\n            }\n            ctx.lineTo(width, channelHeight * (i + 1));\n            ctx.lineTo(left, channelHeight * (i + 1));\n            ctx.closePath();\n            ctx.fill();\n        }\n    }\n}\n","import LiveObjectUI, { LiveObjectUIState } from \"./base-live\";\nimport type LiveToggle from \"../objects/toggle\";\nimport type { LiveToggleProps } from \"../objects/toggle\";\n\nexport interface LiveToggleUIState extends LiveToggleProps, LiveObjectUIState { }\nexport default class LiveToggleUI extends LiveObjectUI<LiveToggle, LiveToggleUIState> {\n    static defaultSize: [number, number] = [30, 30];\n    className = \"live-toggle\";\n    paint() {\n        const {\n            // width,\n            // height,\n            active,\n            focus,\n            bgColor,\n            activeBgColor,\n            bgOnColor,\n            activeBgOnColor,\n            borderColor,\n            focusBorderColor,\n            value\n        } = this.state;\n        const ctx = this.ctx;\n        if (!ctx) return;\n        const borderWidth = 1;\n\n        const [width, height] = this.fullSize();\n        ctx.clearRect(0, 0, width, height);\n\n        ctx.lineWidth = borderWidth;\n\n        const buttonBgColor = active ? (value ? activeBgOnColor : activeBgColor) : (value ? bgOnColor : bgColor);\n        const buttonBorderColor = focus ? focusBorderColor : borderColor;\n\n        ctx.fillStyle = buttonBgColor;\n        ctx.beginPath();\n        ctx.roundRect(borderWidth, borderWidth, width - 2 * borderWidth, height - 2 * borderWidth, 0.2 * (width - 2 * borderWidth));\n        ctx.fill();\n        ctx.strokeStyle = buttonBorderColor;\n        ctx.stroke();\n    }\n    handlePointerDown = () => {\n        this.setValueToOutput(1 - +!!this.state.value);\n    };\n}\n","/**\r\n * A single line of text.\r\n * If the parameter width is less than the width of the text,\r\n * then it will be truncated with an ellipsis.\r\n * If the font justification is set to \"center\", then the\r\n * text will be centered in the supplied parameter width by\r\n * changing the anchor of the text, and setting the x position to\r\n * the width/2 + the supplied x parameter.\r\n */\r\nexport const fillTextLine = (ctx: CanvasRenderingContext2D, textIn: string, x: number, y: number, width: number) => {\r\n    const ellipsis = \"…\";\r\n    let textWidth = ctx.measureText(textIn).width;\r\n    let text = textIn;\r\n    if (textWidth > width) {\r\n        let str = textIn.toString();\r\n        let len = str.length;\r\n        while (textWidth >= width && len-- > 1) {\r\n            str = str.substring(0, len);\r\n            textWidth = ctx.measureText(str + ellipsis).width;\r\n        }\r\n        if (textWidth <= width) {\r\n            text = str + ellipsis;\r\n        } else {\r\n            text = str;\r\n        }\r\n    }\r\n    ctx.fillText(text, x, y, width);\r\n    return;\r\n};\r\n\r\n/**\r\n * Multiline text.\r\n * If the supplied width parameter is less than the width of the\r\n * text, then it will be pushed onto another line, until all of the\r\n * text is added.\r\n */\r\nexport const fillTextLines = (ctx: CanvasRenderingContext2D, textIn: string, x: number, y: number, width: number) => {\r\n    let textWidth = ctx.measureText(textIn).width;\r\n    let text = textIn;\r\n    if (textWidth > width) {\r\n        const str = textIn.toString().split(\"\");\r\n        const len = str.length;\r\n        const newString = [];\r\n        for (let i = 0; i < len; i++) {\r\n            if (ctx.measureText(newString.join(\"\").split(\"\\n\").pop() + str[i]).width > width) {\r\n                newString.push(\"\\n\");\r\n            }\r\n            newString.push(str[i]);\r\n            text = newString.join(\"\");\r\n        }\r\n    }\r\n    ctx.fillText(text, x, y, width);\r\n    return text;\r\n};\r\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./ui.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./ui.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","\"use strict\";\n\nvar stylesInDOM = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n\n  return updater;\n}\n\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n/* istanbul ignore next  */\n\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n\n    memo[target] = styleTarget;\n  }\n\n  return memo[target];\n}\n/* istanbul ignore next  */\n\n\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n\n  target.appendChild(style);\n}\n\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\n\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\n\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n\n  var needLayer = typeof obj.layer !== \"undefined\";\n\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n\n  css += obj.css;\n\n  if (needLayer) {\n    css += \"}\";\n  }\n\n  if (obj.media) {\n    css += \"}\";\n  }\n\n  if (obj.supports) {\n    css += \"}\";\n  }\n\n  var sourceMap = obj.sourceMap;\n\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  options.styleTagTransform(css, styleElement, options.options);\n}\n\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n\n  styleElement.parentNode.removeChild(styleElement);\n}\n/* istanbul ignore next  */\n\n\nfunction domAPI(options) {\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\n\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\n\nmodule.exports = styleTagTransform;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import message from \"./objects/message\";\nimport Scope from \"./objects/scope\";\nimport Spectrogram from \"./objects/spectrogram\";\nimport Spectroscope from \"./objects/spectroscope\";\nimport Button from \"./objects/button-live\";\nimport Toggle from \"./objects/toggle\";\nimport number from \"./objects/number\";\n// import code from \"./objects/code\";\n// import menu from \"./objects/menu\";\n// import view from \"./objects/view\";\n// import keyboard from \"./objects/keyboard\";\n// import bpf from \"./objects/bpf\";\n// import waveform from \"./objects/waveform\";\n// import NumberBox from \"./objects/number\";\n// import img from \"./objects/img\";\n// import slider from \"./objects/slider\";\n// import multislider from \"./objects/multislider\";\n// import ptext from \"./objects/text\";\n// import video from \"./objects/video\";\n// import panel from \"./objects/panel\";\n// import preset from \"./objects/preset\";\nimport \"./ui/ui.scss\"\n\nexport default async () => ({\n    message,\n    number,\n    'scope~': Scope,\n    'spectrogram~': Spectrogram,\n    'spectroscope~': Spectroscope,\n    'button': Button,\n    'toggle': Toggle,\n    // code,\n    // menu,\n    // view,\n    // keyboard,\n    // bpf,\n    // waveform,\n    // img,\n    // number: NumberBox,\n    // slider,\n    // multislider,\n    // ptext,\n    // video,\n    // panel,\n    // preset\n});\n"],"names":[],"sourceRoot":""}