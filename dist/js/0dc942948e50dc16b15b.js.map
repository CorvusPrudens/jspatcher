{"version":3,"sources":["webpack://JSPatcher/./src/core/objects/WebRTC/Base.ts","webpack://JSPatcher/./src/core/objects/WebRTC/devices.ts","webpack://JSPatcher/./src/core/objects/WebRTC/exports.ts"],"names":["DefaultWebRTCObject","DefaultObject","mediaDevices","getProp","filters","box","args","slice","length","push","devices","navigator","enumerateDevices","options","filter","d","indexOf","kind","map","key","deviceId","label","icon","audioinput","audiooutput","videoinput","text","value","outletAll","subscribe","on","inlets","outlets","addEventListener","handleDeviceChange","data","inlet","Bang","removeEventListener","isHot","type","description","varLength","optional","enums","default","autoUpdate"],"mappings":"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","file":"js/0dc942948e50dc16b15b.js","sourcesContent":["import { DefaultObject } from \"../Base\";\n\nexport class DefaultWebRTCObject<D = {}, S = {}, I extends any[] = any[], O extends any[] = any[], A extends any[] = any[], P = {}, U = {}, E = {}> extends DefaultObject<D, S, I, O, A, P, U, E> {\n    static package = \"WebRTC\";\n    static author = \"Fr0stbyteR\";\n    static version = \"1.0.0\";\n    static description = \"WebRTC Object\";\n}\n","import { StrictDropdownItemProps } from \"semantic-ui-react\";\nimport { Bang } from \"../Base\";\nimport { DefaultWebRTCObject } from \"./Base\";\nimport { TMeta, TPropsMeta } from \"../../types\";\n\nexport class mediaDevices extends DefaultWebRTCObject<{}, {}, [Bang | MediaDeviceKind[]], [MediaDeviceInfo[], StrictDropdownItemProps[]], MediaDeviceKind[], { autoUpdate: boolean }> {\n    static description = \"Enumerate media devices\";\n    static inlets: TMeta[\"inlets\"] = [{\n        isHot: true,\n        type: \"object\",\n        description: \"Bang to enumerate, MediaDeviceKind[] to use a filter\"\n    }];\n    static outlets: TMeta[\"outlets\"] = [{\n        type: \"object\",\n        description: \"Array of MediaDeviceInfo\"\n    }, {\n        type: \"object\",\n        description: \"Array of DropdownItemProps\"\n    }];\n    static args: TMeta[\"args\"] = [{\n        type: \"enum\",\n        varLength: true,\n        optional: true,\n        enums: [\"audioinput\", \"audiooutput\", \"videoinput\"],\n        default: [\"audioinput\", \"audiooutput\", \"videoinput\"],\n        description: \"Output only kinds of devices\"\n    }];\n    static props: TPropsMeta<{ autoUpdate: boolean }> = {\n        autoUpdate: {\n            type: \"boolean\",\n            default: true,\n            description: \"Auto output devices when devices change\"\n        }\n    };\n    handleDeviceChange = async () => {\n        if (!this.getProp(\"autoUpdate\")) return;\n        const filters = this.box.args.slice();\n        if (!filters.length) filters.push(\"audioinput\", \"audiooutput\", \"videoinput\");\n        const devices = await navigator.mediaDevices.enumerateDevices();\n        const options = devices.filter(d => filters.indexOf(d.kind) !== -1).map((d, key) => {\n            const { kind, deviceId, label } = d;\n            return { key, icon: { audioinput: \"microphone\", audiooutput: \"volume up\", videoinput: \"camera\" }[kind], text: label || deviceId, value: deviceId };\n        });\n        this.outletAll([devices, options]);\n    };\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 1;\n            this.outlets = 2;\n        });\n        this.on(\"postInit\", () => {\n            navigator.mediaDevices.addEventListener(\"devicechange\", this.handleDeviceChange);\n            if (this.getProp(\"autoUpdate\")) this.handleDeviceChange();\n        });\n        this.on(\"inlet\", async ({ data, inlet }) => {\n            if (inlet === 0) {\n                let filters: MediaDeviceKind[];\n                if (data instanceof Bang) {\n                    filters = this.box.args.slice();\n                    if (!filters.length) filters.push(\"audioinput\", \"audiooutput\", \"videoinput\");\n                } else {\n                    filters = data.slice();\n                }\n                const devices = await navigator.mediaDevices.enumerateDevices();\n                const options = devices.filter(d => filters.indexOf(d.kind) !== -1).map((d, key) => {\n                    const { kind, deviceId, label } = d;\n                    return { key, icon: { audioinput: \"microphone\", audiooutput: \"volume up\", videoinput: \"camera\" }[kind], text: label || deviceId, value: deviceId };\n                });\n                this.outletAll([devices, options]);\n            }\n        });\n        this.on(\"destroy\", () => {\n            navigator.mediaDevices.removeEventListener(\"devicechange\", this.handleDeviceChange);\n        });\n    }\n}\n","import { mediaDevices } from \"./devices\";\n\nexport default {\n    mediaDevices\n};\n"],"sourceRoot":""}