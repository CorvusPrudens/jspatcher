{"version":3,"file":"js/53cf61b217024bf9be84.js","mappings":"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","sources":["webpack://DaisyBell/./src/core/hardware/objects/base/DefaultHardwareUI.scss","webpack://DaisyBell/./src/core/hardware/objects/base/InvalidObject.scss","webpack://DaisyBell/./src/core/hardware/HardwareHistory.ts","webpack://DaisyBell/./src/core/hardware/Patcher.ts","webpack://DaisyBell/./src/core/hardware/objects/base/AbstractHardwareObject.ts","webpack://DaisyBell/./src/core/hardware/objects/base/BaseHardwareObject.ts","webpack://DaisyBell/./src/core/hardware/objects/base/BaseHardwareObjects.ts","webpack://DaisyBell/./src/core/hardware/objects/base/DefaultHardwareObject.ts","webpack://DaisyBell/./src/core/hardware/objects/base/DefaultHardwareUI.tsx","webpack://DaisyBell/./src/core/hardware/objects/base/EmptyObject.ts","webpack://DaisyBell/./src/core/hardware/objects/base/ImageObject.ts","webpack://DaisyBell/./src/core/hardware/objects/base/ImageObjectUI.tsx","webpack://DaisyBell/./src/core/hardware/objects/base/InvalidObject.ts","webpack://DaisyBell/./src/core/hardware/objects/base/UIObject.ts","webpack://DaisyBell/./src/core/hardware/objects/hardware/Gpi.ts","webpack://DaisyBell/./src/core/hardware/objects/hardware/Gpo.ts","webpack://DaisyBell/./src/core/hardware/objects/hardware/HardwareObjects.ts","webpack://DaisyBell/./src/core/hardware/objects/hardware/Knob.ts","webpack://DaisyBell/./src/core/hardware/objects/soms/DaisySeed.ts","webpack://DaisyBell/./src/core/hardware/objects/soms/SomObjects.ts","webpack://DaisyBell/./src/core/hardware/objects/base/DefaultHardwareUI.scss?92a8","webpack://DaisyBell/./src/core/hardware/objects/base/InvalidObject.scss?5ab3"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"@charset \\\"UTF-8\\\";\\n.hardware-patcher div.box-ui > div.box-ui-default {\\n  background-color: rgb(41, 60, 71);\\n}\\n.hardware-patcher div.box-ui > div.box-ui-default.box-ui-container {\\n  display: flex;\\n  flex-direction: column;\\n  height: 100%;\\n  border-radius: 7px;\\n}\\n.hardware-patcher div.box-ui > div.box-ui-default > .box-ui-text-container {\\n  display: flex;\\n  flex: 0 0 auto;\\n  width: 100%;\\n  color: white;\\n  font-family: \\\"Roboto Mono\\\", monospace;\\n  font-size: 12px;\\n  line-height: normal;\\n  font-weight: normal;\\n  margin: 0px;\\n  overflow-wrap: break-word;\\n  cursor: default;\\n  user-select: none;\\n  -webkit-user-select: none;\\n  border: rgb(41, 60, 71) solid;\\n  border-width: 0px 4px 0px 4px;\\n  border-radius: 7px;\\n}\\n.hardware-patcher div.box-ui > div.box-ui-default > .box-ui-text-container:first-child {\\n  border-top-width: 4px;\\n}\\n.hardware-patcher div.box-ui > div.box-ui-default > .box-ui-text-container:last-child {\\n  border-bottom-width: 4px;\\n}\\n.hardware-patcher div.box-ui > div.box-ui-default > .box-ui-text-container.loading {\\n  -webkit-animation-duration: 1s;\\n  animation-duration: 1s;\\n  -webkit-animation-fill-mode: forwards;\\n  animation-fill-mode: forwards;\\n  -webkit-animation-iteration-count: infinite;\\n  animation-iteration-count: infinite;\\n  -webkit-animation-name: placeHolderShimmer;\\n  animation-name: placeHolderShimmer;\\n  -webkit-animation-timing-function: linear;\\n  animation-timing-function: linear;\\n  background-size: 1200px 100%;\\n}\\n@keyframes placeHolderShimmer {\\n  0% {\\n    background-position: -1200px 0;\\n  }\\n  100% {\\n    background-position: 1200px 0;\\n  }\\n}\\n.hardware-patcher div.box-ui > div.box-ui-default > .box-ui-text-container > .box-ui-text-container-prepend {\\n  flex: 0 0 auto;\\n  min-width: 2px;\\n  margin-right: 2px;\\n}\\n.hardware-patcher div.box-ui > div.box-ui-default > .box-ui-text-container > span {\\n  position: relative;\\n  word-break: break-all;\\n  width: 100%;\\n}\\n.hardware-patcher div.box-ui > div.box-ui-default > .box-ui-text-container > span.editing {\\n  pointer-events: auto;\\n  cursor: text;\\n  user-select: auto;\\n  -webkit-user-select: auto;\\n}\\n.hardware-patcher div.box-ui > div.box-ui-default > .box-ui-text-container > span:empty::before {\\n  content: \\\"​\\\";\\n}\\n.hardware-patcher div.box-ui > div.box-ui-default > .box-ui-text-container > span::selection {\\n  background-color: #004eff;\\n  color: white;\\n}\\n.hardware-patcher div.box-ui > div.box-ui-default > .box-ui-text-container > .box-ui-text-dropdown {\\n  position: absolute;\\n  top: 100%;\\n}\\n.hardware-patcher div.box-ui > div.box-ui-default > .box-ui-text-container > .box-ui-text-dropdown > .box-ui-text-autocomplete {\\n  background: #293c47;\\n  display: table-row-group;\\n  position: absolute;\\n  width: auto;\\n  max-height: 200px;\\n  box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.5333333333);\\n  overflow: auto;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n}\\n.hardware-patcher div.box-ui > div.box-ui-default > .box-ui-text-container > .box-ui-text-dropdown > .box-ui-text-autocomplete td {\\n  border-width: 0px;\\n}\\n.hardware-patcher div.box-ui > div.box-ui-default > .box-ui-text-container > .box-ui-text-dropdown > .box-ui-text-autocomplete tr.focused {\\n  background-color: #003cac !important;\\n  color: #fff !important;\\n}\\n.hardware-patcher div.box-ui > div.box-ui-default > .box-ui-text-container > .box-ui-text-container-append {\\n  flex: 0 0 auto;\\n  min-width: 2px;\\n  margin-left: 2px;\\n}\\n.hardware-patcher div.box-ui > div.box-ui-default > .box-ui-text-container i.icon {\\n  line-height: 14px;\\n  margin: 0px 3px;\\n}\\n.hardware-patcher div.box-ui > div.box-ui-default > .box-ui-dropdown-container {\\n  background: #293c47;\\n  flex: 1 1 100%;\\n  display: flex;\\n  flex-direction: column;\\n  width: 100%;\\n  border: rgb(125, 126, 132) solid;\\n  padding: 0px;\\n  border-width: 0px 0px 4px 0px;\\n  overflow: auto;\\n}\\n.hardware-patcher div.box-ui > div.box-ui-default > .box-ui-toggle {\\n  cursor: pointer;\\n}\\n\\n.patcher.unlocked div.box.selected > div.box-ui > div.box-ui-default > .box-ui-text-container {\\n  pointer-events: auto;\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/core/hardware/objects/base/DefaultHardwareUI.scss\"],\"names\":[],\"mappings\":\"AAAA,gBAAgB;AAAhB;EACI,iCAAA;AAEJ;AAAI;EACI,aAAA;EACA,sBAAA;EACA,YAAA;EACA,kBAAA;AAER;AACI;EACI,aAAA;EACA,cAAA;EACA,WAAA;EACA,YAAA;EACA,qCAAA;EACA,eAAA;EACA,mBAAA;EACA,mBAAA;EACA,WAAA;EACA,yBAAA;EACA,eAAA;EACA,iBAAA;EACA,yBAAA;EACA,6BAAA;EACA,6BAAA;EACA,kBAAA;AACR;AACQ;EACI,qBAAA;AACZ;AAEQ;EACI,wBAAA;AAAZ;AAGQ;EACI,8BAAA;EACA,sBAAA;EACA,qCAAA;EACA,6BAAA;EACA,2CAAA;EACA,mCAAA;EACA,0CAAA;EACA,kCAAA;EACA,yCAAA;EACA,iCAAA;EACA,4BAAA;AADZ;AAGY;EACI;IACI,8BAAA;EADlB;EAIc;IACI,6BAAA;EAFlB;AACF;AAMQ;EACI,cAAA;EACA,cAAA;EACA,iBAAA;AAJZ;AAOQ;EACI,kBAAA;EACA,qBAAA;EACA,WAAA;AALZ;AAOY;EACI,oBAAA;EACA,YAAA;EACA,iBAAA;EACA,yBAAA;AALhB;AAQY;EACI,YAAA;AANhB;AASY;EACI,yBAAA;EACA,YAAA;AAPhB;AAWQ;EACI,kBAAA;EACA,SAAA;AATZ;AAWY;EACI,mBAAA;EACA,wBAAA;EACA,kBAAA;EACA,WAAA;EACA,iBAAA;EACA,mDAAA;EACA,cAAA;EACA,mBAAA;EACA,uBAAA;AAThB;AAWgB;EACI,iBAAA;AATpB;AAYgB;EACI,oCAAA;EACA,sBAAA;AAVpB;AAeQ;EACI,cAAA;EACA,cAAA;EACA,gBAAA;AAbZ;AAgBQ;EACI,iBAAA;EACA,eAAA;AAdZ;AAkBI;EACI,mBAAA;EACA,cAAA;EACA,aAAA;EACA,sBAAA;EACA,WAAA;EACA,gCAAA;EACA,YAAA;EACA,6BAAA;EACA,cAAA;AAhBR;AAmBI;EACI,eAAA;AAjBR;;AAqBA;EACI,oBAAA;AAlBJ\",\"sourcesContent\":[\".hardware-patcher div.box-ui>div.box-ui-default {\\n    background-color: rgb(41, 60, 71);\\n\\n    &.box-ui-container {\\n        display: flex;\\n        flex-direction: column;\\n        height: 100%;\\n        border-radius: 7px;\\n    }\\n\\n    &>.box-ui-text-container {\\n        display: flex;\\n        flex: 0 0 auto;\\n        width: 100%;\\n        color: white;\\n        font-family: 'Roboto Mono', monospace;\\n        font-size: 12px;\\n        line-height: normal;\\n        font-weight: normal;\\n        margin: 0px;\\n        overflow-wrap: break-word;\\n        cursor: default;\\n        user-select: none;\\n        -webkit-user-select: none;\\n        border: rgb(41, 60, 71) solid;\\n        border-width: 0px 4px 0px 4px;\\n        border-radius: 7px;\\n\\n        &:first-child {\\n            border-top-width: 4px;\\n        }\\n\\n        &:last-child {\\n            border-bottom-width: 4px;\\n        }\\n\\n        &.loading {\\n            -webkit-animation-duration: 1s;\\n            animation-duration: 1s;\\n            -webkit-animation-fill-mode: forwards;\\n            animation-fill-mode: forwards;\\n            -webkit-animation-iteration-count: infinite;\\n            animation-iteration-count: infinite;\\n            -webkit-animation-name: placeHolderShimmer;\\n            animation-name: placeHolderShimmer;\\n            -webkit-animation-timing-function: linear;\\n            animation-timing-function: linear;\\n            background-size: 1200px 100%;\\n\\n            @keyframes placeHolderShimmer {\\n                0% {\\n                    background-position: -1200px 0;\\n                }\\n\\n                100% {\\n                    background-position: 1200px 0;\\n                }\\n            }\\n        }\\n\\n        &>.box-ui-text-container-prepend {\\n            flex: 0 0 auto;\\n            min-width: 2px;\\n            margin-right: 2px;\\n        }\\n\\n        &>span {\\n            position: relative;\\n            word-break: break-all;\\n            width: 100%;\\n\\n            &.editing {\\n                pointer-events: auto;\\n                cursor: text;\\n                user-select: auto;\\n                -webkit-user-select: auto;\\n            }\\n\\n            &:empty::before {\\n                content: \\\"\\\\200b\\\";\\n            }\\n\\n            &::selection {\\n                background-color: #004eff;\\n                color: white;\\n            }\\n        }\\n\\n        &>.box-ui-text-dropdown {\\n            position: absolute;\\n            top: 100%;\\n\\n            &>.box-ui-text-autocomplete {\\n                background: #293c47;\\n                display: table-row-group;\\n                position: absolute;\\n                width: auto;\\n                max-height: 200px;\\n                box-shadow: 0px 2px 5px #0008;\\n                overflow: auto;\\n                white-space: nowrap;\\n                text-overflow: ellipsis;\\n\\n                & td {\\n                    border-width: 0px\\n                }\\n\\n                & tr.focused {\\n                    background-color: #003cac !important;\\n                    color: #fff !important;\\n                }\\n            }\\n        }\\n\\n        &>.box-ui-text-container-append {\\n            flex: 0 0 auto;\\n            min-width: 2px;\\n            margin-left: 2px;\\n        }\\n\\n        i.icon {\\n            line-height: 14px;\\n            margin: 0px 3px;\\n        }\\n    }\\n\\n    &>.box-ui-dropdown-container {\\n        background: #293c47;\\n        flex: 1 1 100%;\\n        display: flex;\\n        flex-direction: column;\\n        width: 100%;\\n        border: rgb(125, 126, 132) solid;\\n        padding: 0px;\\n        border-width: 0px 0px 4px 0px;\\n        overflow: auto;\\n    }\\n\\n    &>.box-ui-toggle {\\n        cursor: pointer;\\n    }\\n}\\n\\n.patcher.unlocked div.box.selected>div.box-ui>div.box-ui-default>.box-ui-text-container {\\n    pointer-events: auto;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".hardware-patcher div.box-ui > div.package-base.package-base-invalidobject > .box-ui-text-container {\\n  background-color: rgb(128, 64, 64);\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/core/hardware/objects/base/InvalidObject.scss\"],\"names\":[],\"mappings\":\"AACI;EACI,kCAAA;AAAR\",\"sourcesContent\":[\".hardware-patcher div.box-ui > div.package-base {\\n    &.package-base-invalidobject > .box-ui-text-container {\\n        background-color: rgb(128, 64, 64);\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import History, { IHistoryEvent } from \"../file/History\";\nimport PatcherEditor, { PatcherHistoryEventMap } from \"./HardwareEditor\";\n\nexport default class PatcherHistory extends History<PatcherHistoryEventMap, PatcherEditor> {\n    get eventListening(): (keyof PatcherHistoryEventMap)[] {\n        return [\n            \"create\", \"delete\", \"changeBoxText\", \"boxChanged\",\n            \"changeLineA\", \"changeLineB\", \"moved\", \"resized\", \"propsChanged\"\n        ];\n    }\n    async undoOf(editor: PatcherEditor, eventName: keyof PatcherHistoryEventMap, eventData?: any) {\n        if (eventName === \"delete\") {\n            const e: PatcherHistoryEventMap[typeof eventName] = eventData;\n            await editor.create(e);\n        } else if (eventName === \"changeBoxText\") {\n            const e: PatcherHistoryEventMap[typeof eventName] = eventData;\n            const { boxId, oldText } = e;\n            await editor.instance.changeBoxText(boxId, oldText);\n        } else if (eventName === \"boxChanged\") {\n            const e: PatcherHistoryEventMap[typeof eventName] = eventData;\n            const { boxId, oldArgs, oldProps, oldState, oldZIndex } = e;\n            await editor.changeBox(boxId, { args: oldArgs, props: oldProps, state: oldState, zIndex: oldZIndex });\n        } else if (eventName === \"moved\") {\n            const e: PatcherHistoryEventMap[typeof eventName] = eventData;\n            const { selected, delta, presentation } = e;\n            const d = { x: -1 * delta.x, y: -1 * delta.y };\n            editor.move(selected, d, presentation);\n            editor.moveEnd(selected, d);\n        } else if (eventName === \"changeLineA\") {\n            const e: PatcherHistoryEventMap[typeof eventName] = eventData;\n            const { lineId, oldA } = e;\n            editor.changeLineA(lineId, oldA[0], oldA[1]);\n        } else if (eventName === \"changeLineB\") {\n            const e: PatcherHistoryEventMap[typeof eventName] = eventData;\n            const { lineId, oldB } = e;\n            editor.changeLineB(lineId, oldB[0], oldB[1]);\n        } else if (eventName === \"create\") {\n            const e: PatcherHistoryEventMap[typeof eventName] = eventData;\n            await editor.delete(e);\n        } else if (eventName === \"resized\") {\n            const e: PatcherHistoryEventMap[typeof eventName] = eventData;\n            const { selected, delta, type: t, presentation } = e;\n            const d = { x: -1 * delta.x, y: -1 * delta.y };\n            editor.resize(selected, d, t, presentation);\n            editor.resizeEnd(selected, d, t);\n        } else if (eventName === \"propsChanged\") {\n            const e: PatcherHistoryEventMap[typeof eventName] = eventData;\n            editor.instance.setProps(e.oldProps);\n        }\n    }\n    async redoOf(editor: PatcherEditor, eventName: keyof PatcherHistoryEventMap, eventData?: any) {\n        if (eventName === \"create\") {\n            const e: PatcherHistoryEventMap[typeof eventName] = eventData;\n            await editor.create(e);\n        } else if (eventName === \"changeBoxText\") {\n            const e: PatcherHistoryEventMap[typeof eventName] = eventData;\n            const { boxId, text } = e;\n            await editor.instance.changeBoxText(boxId, text);\n        } else if (eventName === \"boxChanged\") {\n            const e: PatcherHistoryEventMap[typeof eventName] = eventData;\n            const { boxId, args, props, state, zIndex } = e;\n            await editor.changeBox(boxId, { args, props, state, zIndex });\n        } else if (eventName === \"moved\") {\n            const e: PatcherHistoryEventMap[typeof eventName] = eventData;\n            const { selected, delta, presentation } = e;\n            editor.move(selected, delta, presentation);\n            editor.moveEnd(selected, delta);\n        } else if (eventName === \"changeLineA\") {\n            const e: PatcherHistoryEventMap[typeof eventName] = eventData;\n            const { lineId, newA } = e;\n            editor.changeLineA(lineId, newA[0], newA[1]);\n        } else if (eventName === \"changeLineB\") {\n            const e: PatcherHistoryEventMap[typeof eventName] = eventData;\n            const { lineId, newB } = e;\n            editor.changeLineB(lineId, newB[0], newB[1]);\n        } else if (eventName === \"delete\") {\n            const e: PatcherHistoryEventMap[typeof eventName] = eventData;\n            await editor.delete(e);\n        } else if (eventName === \"resized\") {\n            const e: PatcherHistoryEventMap[typeof eventName] = eventData;\n            const { selected, delta, type: t, presentation } = e;\n            editor.resize(selected, delta, t, presentation);\n            editor.resizeEnd(selected, delta, t);\n        } else if (eventName === \"propsChanged\") {\n            const e: PatcherHistoryEventMap[typeof eventName] = eventData;\n            editor.instance.setProps(e.props);\n        }\n    }\n    async mergeChanges(...events: IHistoryEvent<PatcherHistoryEventMap>[]) {\n        this.editors.forEach(e => e.state.selectAfterEdit = false);\n        const merged = await super.mergeChanges(...events);\n        this.editors.forEach(e => e.state.selectAfterEdit = true);\n        return merged;\n    }\n}\n","import FileInstance from \"../file/FileInstance\";\nimport PatcherEditor from \"./HardwareEditor\";\nimport Line from \"./Line\";\nimport Box from \"./Box\";\nimport PatcherHistory from \"./HardwareHistory\";\nimport BaseHardwareObjects from \"./objects/base/BaseHardwareObjects\";\n// import PackageManager, { IPackageManager } from \"../PackageManager\";\n// import { max2js, js2max } from \"../../utils/utils\";\n// import { toFaustDspCode } from \"../patcher/FaustPatcherAnalyser\";\nimport type Env from \"../Env\";\nimport type Project from \"../Project\";\nimport type TempHardwareFile from \"./TempHardwareFile\";\nimport type PersistentProjectFile from \"../file/PersistentProjectFile\";\nimport type { IJSPatcherEnv } from \"../Env\";\nimport type { IProject } from \"../Project\";\nimport type { IHardwarePatcherObjectMeta, IPropsMeta, IHardwarePatcherObject, THardwareMetaType, IPropMeta, IArgsMeta } from \"./objects/base/AbstractHardwareObject\";\nimport type { TErrorLevel, TFlatPackage, TPackage, ILogInfo, TDependencies } from \"../types\";\nimport type { RawHardwarePatcher } from \"./types\";\nimport type { THardwareBox, THardwareLine, PatcherMode } from \"./types\";\nimport type PatcherNode from \"../worklets/PatcherNode\";\nimport type PatcherProcessor from \"../worklets/Patcher.worklet\";\nimport SomObjects from \"./objects/soms/SomObjects\";\nimport HardwareObjects from \"./objects/hardware/HardwareObjects\";\nimport { IInletMeta, IOutletMeta } from \"../objects/base/AbstractObject\";\nimport { SemanticICONS } from \"semantic-ui-react\";\n\nexport type THardwareSubpatcherInlet = {\n    boxId: string;\n    inlet: number;\n}\n\nexport type THardwareSubpatcherOutlet = {\n    boxId: string;\n    outlet: number;\n}\n\nexport interface TPatcherProps {\n    mode: PatcherMode;\n    dependencies: TDependencies;\n    bgColor: string;\n    editingBgColor: string;\n    grid: [number, number];\n    boxIndexCount: number;\n    lineIndexCount: number;\n    package?: string;\n    name?: string;\n    author?: string;\n    version?: string;\n    description?: string;\n    openInPresentation: boolean;\n    objectInit: boolean;\n    // inlets: THardwareSubpatcherInlet[],\n    // outlets: THardwareSubpatcherOutlet[],\n}\nexport type TPublicPatcherProps = Pick<TPatcherProps, \"dependencies\" | \"bgColor\" | \"editingBgColor\" | \"grid\" | \"openInPresentation\">;\n\nexport interface TPatcherState {\n    name: string;\n    isReady: boolean;\n    log: ILogInfo[];\n    selected: string[];\n    // pkgMgr: IPackageManager;\n    preventEmitChanged: boolean;\n    patcherNode?: PatcherNode;\n    patcherProcessor?: PatcherProcessor;\n}\n\nexport interface PatcherEventMap extends TPublicPatcherProps {\n    \"postInited\": never;\n    \"ready\": never;\n    \"unload\": never;\n    \"changeBoxText\": { boxId: string; oldText: string; text: string };\n    \"boxChanged\": { boxId: string; oldArgs?: any[]; args?: any[]; oldProps?: Record<string, any>; props?: Record<string, any>; oldState?: Record<string, any>; state?: Record<string, any>; oldZIndex?: number; zIndex?: number };\n    \"zIndexChanged\": { boxId: string; zIndex: number };\n    \"passiveDeleteLine\": Line;\n    \"graphChanged\": never;\n    \"changed\": never;\n    \"ioChanged\": IHardwarePatcherMeta;\n    // \"dataInput\": TInletEvent<any[]>;\n    // \"dataOutput\": TOutletEvent<any[]>;\n    \"audioInput\": { input: number; buffer: Float32Array };\n    \"paramInput\": { param: string; buffer: Float32Array };\n    \"audioOutput\": { output: number; buffer: Float32Array };\n    \"propsChanged\": { props: Partial<TPublicPatcherProps>; oldProps: Partial<TPublicPatcherProps> };\n    \"libChanged\": { pkg: TPackage; lib: TFlatPackage };\n    \"highlightBox\": string;\n    \"highlightPort\": { boxId: string; isSrc: boolean; i: number } | null;\n}\n\nexport interface IHardwarePatcherMeta<P extends Record<string, any> = Record<string, any>> {\n    name: string;\n    icon: SemanticICONS;\n    version: string;\n    description: string;\n    args: IArgsMeta;\n    props: IPropMeta<P>;\n    patcherInlets: Map<[string, number], IInletMeta>;\n    patcherOutlets: Map<[string, number], IOutletMeta>;\n}\n\nexport default class Patcher extends FileInstance<PatcherEventMap, PersistentProjectFile | TempHardwareFile> {\n    static props: IPropsMeta<TPublicPatcherProps> = {\n        dependencies: {\n            type: \"object\",\n            description: \"Patcher dependencies\",\n            default: []\n        },\n        bgColor: {\n            type: \"color\",\n            description: \"Background color\",\n            default: \"rgba(61, 65, 70, 1)\"\n        },\n        editingBgColor: {\n            type: \"color\",\n            description: \"Background color while unlocked\",\n            default: \"rgba(82, 87, 94, 1)\"\n        },\n        grid: {\n            type: \"object\",\n            description: \"Grid size\",\n            default: [15, 15]\n        },\n        openInPresentation: {\n            type: \"boolean\",\n            description: \"Open patcher in presentation\",\n            default: false\n        }\n    };\n    static async fromProjectItem(options: { file: PersistentProjectFile | TempHardwareFile; env: IJSPatcherEnv; project?: IProject; instanceId?: string }): Promise<Patcher> {\n        return new this(options).init();\n    }\n    async getEditor() {\n        const editor = new PatcherEditor(this);\n        return editor.init();\n    }\n    lib: { [key: string]: typeof IHardwarePatcherObject } = { ...BaseHardwareObjects, ...SomObjects, ...HardwareObjects };\n    lines: Record<string, Line> = {};\n    boxes: Record<string, Box> = {};\n    props: TPatcherProps;\n    _state: TPatcherState;\n    _history = new PatcherHistory();\n    constructor(options: { env: IJSPatcherEnv; project?: IProject; file?: PersistentProjectFile | TempHardwareFile; instanceId?: string; objectInit?: boolean }) {\n        super(options);\n        this._state = {\n            name: \"patcher\",\n            isReady: false,\n            log: [],\n            selected: [],\n            // pkgMgr: undefined,\n            preventEmitChanged: false\n        };\n        this.lines = {};\n        this.boxes = {};\n        this.props = {\n            mode: \"daisy\",\n            dependencies: Patcher.props.dependencies.default.slice(),\n            bgColor: Patcher.props.bgColor.default,\n            editingBgColor: Patcher.props.editingBgColor.default,\n            grid: Patcher.props.grid.default.slice() as [number, number],\n            openInPresentation: Patcher.props.openInPresentation.default,\n            boxIndexCount: 0,\n            lineIndexCount: 0,\n            objectInit: typeof options.objectInit === \"boolean\" ? options.objectInit : true,\n            // inlets: [],\n            // outlets: []\n        };\n    }\n    get state() {\n        return this._state;\n    }\n    // get activePkg() {\n    //     return this._state.pkgMgr.pkg;\n    // }\n    // get activeLib() {\n    //     return this._state.pkgMgr.lib;\n    // }\n    get activeLib() {\n        return this.lib;\n    }\n    get isReady() {\n        return !!this._state?.isReady;\n    }\n    get audioCtx() {\n        return (this.project as Project)?.audioCtx || (this.env as Env).audioCtx;\n    }\n    get fileExtension() {\n        return {\n            daisy: \"daisy\"\n        }[this.props.mode];\n    }\n    get fileName() {\n        return this.file?.name || `${this._state.name}.${this.fileExtension}`;\n    }\n    emitGraphChanged() {\n        if (this._state.preventEmitChanged) return;\n        this.emit(\"graphChanged\");\n        this.emitChanged();\n    }\n    emitChanged() {\n        if (this._state.preventEmitChanged) return;\n        this.emit(\"changed\");\n    }\n    boxChanged(boxId: string, changed: { oldArgs?: any[]; args?: any[]; oldProps?: Record<string, any>; props?: Record<string, any>; oldState?: Record<string, any>; state?: Record<string, any> }) {\n        this.emit(\"boxChanged\", { boxId, ...changed });\n    }\n    async init(data = this.file?.data, fileName = this.fileName) {\n        if (data instanceof ArrayBuffer) {\n            if (!data.byteLength) return this.load({});\n            const patcherIn = await new Response(data).json();\n            const splitName = fileName.split(\".\");\n            const ext = splitName.pop();\n            const extMap: Record<string, PatcherMode> = { daisy: \"daisy\" };\n            return this.load(patcherIn, extMap[ext] || \"daisy\");\n        }\n        return this.load(data || {});\n    }\n    async load(patcherIn: RawHardwarePatcher | any, modeIn?: PatcherMode) {\n        this._state.isReady = false;\n        this._state.preventEmitChanged = true;\n        await this.unload();\n        if (typeof patcherIn !== \"object\") {\n            this._state.isReady = true;\n            this._state.preventEmitChanged = false;\n            this.emit(\"ready\");\n            return this;\n        }\n        await this.env.taskMgr.newTask(this, \"Loading patcher...\", async (onUpdate) => {\n            this.props.mode = patcherIn.props?.mode || modeIn || \"js\";\n            // this.state.pkgMgr = new PackageManager(this);\n            const { mode } = this.props;\n            const $init: Promise<Box>[] = [];\n            onUpdate(\"Decoding Patcher...\");\n            let patcher;\n            // if (mode === \"max\" || mode === \"gen\") {\n            //     if (!(patcherIn as TMaxPatcher).patcher) {\n            //         patcher = patcherIn;\n            //     } else {\n            //         patcher = max2js(patcherIn as TMaxPatcher);\n            //     }\n            // } else if (mode === \"js\" || mode === \"faust\" || mode === \"jsaw\") {\n            if (\"data\" in patcherIn && \"hardware\" in patcherIn) {\n                patcher = patcherIn.patcher;\n            } else {\n                patcher = patcherIn;\n            }\n            // }\n            if (patcher.props) this.props = { ...this.props, ...patcher.props, mode };\n            if (Array.isArray(this.props.bgColor)) this.props.bgColor = `rgba(${this.props.bgColor.join(\", \")})`;\n            if (Array.isArray(this.props.editingBgColor)) this.props.editingBgColor = `rgba(${this.props.editingBgColor.join(\", \")})`;\n            if (mode === \"daisy\" && this.props.dependencies) {\n                const { dependencies } = this.props;\n                if (!Array.isArray(dependencies)) {\n                    this.props.dependencies = [];\n                    for (const key in dependencies as Record<string, string>) {\n                        this.props.dependencies.push([key, dependencies[key]]);\n                    }\n                }\n            }\n            // onUpdate(\"Initializing Packages...\");\n            // await this._state.pkgMgr.init();\n            onUpdate(\"Creating Boxes...\");\n            if (patcher.boxes) { // Boxes & data\n                for (const id in patcher.boxes) {\n                    onUpdate(`Creating Boxes ${id}`);\n                    const $ = this.createBox(patcher.boxes[id]);\n                    $init.push($);\n                    const numID = parseInt(id.match(/\\d+/)[0]);\n                    if (numID > this.props.boxIndexCount) this.props.boxIndexCount = numID;\n                }\n            }\n            onUpdate(\"Initializing Boxes...\");\n            await Promise.all($init);\n            onUpdate(\"Creating Lines...\");\n            if (patcher.lines) { // Lines\n                for (const id in patcher.lines) {\n                    this.createLine(patcher.lines[id]);\n                    const numID = parseInt(id.match(/\\d+/)[0]);\n                    if (numID > this.props.lineIndexCount) this.props.lineIndexCount = numID;\n                }\n            }\n            onUpdate(\"Finishing...\");\n            this._state.isReady = true;\n            this._state.preventEmitChanged = false;\n            this.emitGraphChanged();\n            this.emit(\"ready\");\n            await Promise.all(Object.keys(this.boxes).map(id => this.boxes[id].postInit()));\n            this.emit(\"postInited\");\n        });\n        return this;\n    }\n    // async getPatcherNode(inputs = 2, outputs = 2) {\n    //     if (this.props.mode === \"jsaw\" && this.env.thread === \"main\") {\n    //         const PatcherNode = (await import(\"../worklets/PatcherNode\")).default;\n    //         await PatcherNode.register(this.audioCtx.audioWorklet);\n    //         this.state.patcherNode = new PatcherNode(this.audioCtx, { env: this.env, instanceId: this.id, fileId: this.file?.id, data: this.file ? undefined : this.toSerializable(), inputs, outputs });\n    //         await this.state.patcherNode.init();\n    //         return this.state.patcherNode;\n    //     }\n    //     return null;\n    // }\n    async loadFromURL(url: string) {\n        try {\n            const file = await fetch(url);\n            if (!file.ok) throw new Error();\n            const parsed = await file.json() as RawHardwarePatcher;\n            return this.load(parsed);\n        } catch (e) {\n            this.error(`Fetch file ${url} failed.`);\n        }\n        return this;\n    }\n    async loadFromString(sIn: string) {\n        try {\n            const parsed = JSON.parse(sIn) as RawHardwarePatcher;\n            return this.load(parsed);\n        } catch (e) {\n            this.error(`Load from string: ${sIn.slice(20)}... failed.`);\n        }\n        return this;\n    }\n    async loadFromFile(file: File) {\n        const splitName = file.name.split(\".\");\n        const ext = splitName.pop();\n        const name = splitName.join(\".\");\n        const extMap: Record<string, PatcherMode> = { daisy: \"daisy\" };\n        if (!extMap[ext]) return this;\n        const reader = new FileReader();\n        reader.onload = () => {\n            let parsed: RawHardwarePatcher;\n            try {\n                parsed = JSON.parse(reader.result.toString());\n            } catch (e) {\n                this.error((e as Error).message);\n            }\n            if (parsed) {\n                this.load(parsed, extMap[ext]);\n                this._state.name = name;\n            }\n        };\n        reader.onerror = () => this.error(reader.error.message);\n        reader.readAsText(file, \"UTF-8\");\n        return this;\n    }\n    async unload() {\n        await this.emit(\"unload\");\n        if (Object.keys(this.boxes).length) {\n            this._state.preventEmitChanged = true;\n            await Promise.all(Object.keys(this.boxes).map(id => this.boxes[id].destroy()));\n            this._state.preventEmitChanged = false;\n            this.emitGraphChanged();\n        }\n        this.lines = {};\n        this.boxes = {};\n        this.props = {\n            mode: \"daisy\",\n            dependencies: Patcher.props.dependencies.default.slice(),\n            bgColor: Patcher.props.bgColor.default,\n            editingBgColor: Patcher.props.editingBgColor.default,\n            grid: Patcher.props.grid.default.slice() as [number, number],\n            openInPresentation: Patcher.props.openInPresentation.default,\n            boxIndexCount: 0,\n            lineIndexCount: 0,\n            objectInit: true,\n            // inlets: [],\n            // outlets: [],\n        };\n        this._state.selected = [];\n    }\n    async destroy() {\n        await this.unload();\n        await super.destroy();\n    }\n    // async addPackage(namespace: string, url: string) {\n    //     const { dependencies } = this.props;\n    //     dependencies.push([namespace, url]);\n    //     this.setProps({ dependencies: dependencies.slice() });\n    //     await this.state.pkgMgr.init();\n    //     if (!(namespace in this.activePkg)) {\n    //         this.setProps({ dependencies: dependencies.filter(([id]) => id !== namespace) });\n    //     }\n    // }\n    // async removePackage(id: string) {\n    //     const { dependencies } = this.props;\n    //     const i = dependencies.findIndex(t => t[0] === id);\n    //     if (i === -1) return;\n    //     dependencies.splice(i, 1);\n    //     this.setProps({ dependencies: dependencies.slice() });\n    //     await this.state.pkgMgr.init();\n    // }\n    async createBox(boxIn: THardwareBox) {\n        if (!boxIn.id || (boxIn.id in this.boxes)) boxIn.id = \"box-\" + ++this.props.boxIndexCount;\n        const box = new Box(this, boxIn);\n        this.boxes[box.id] = box;\n        await box.init();\n        this.emitGraphChanged();\n        this.changeIO();\n        return box;\n    }\n    getObjectConstructor(parsed: { class: string; args: any[]; props: Record<string, any> }) {\n        const className = parsed.class;\n        if (typeof className !== \"string\" || className.length === 0)\n            return this.activeLib.EmptyObject;\n        if (this.activeLib[className])\n            return this.activeLib[className];\n        return this.activeLib.InvalidObject;\n    }\n    getObjectMeta(parsed: { class: string; args: any[]; props: Record<string, any> }) {\n        return this.getObjectConstructor(parsed).meta;\n    }\n    async changeBoxText(boxId: string, text: string) {\n        const oldText = this.boxes[boxId].text;\n        if (oldText === text) return this.boxes[boxId];\n        await this.boxes[boxId].changeText(text);\n        this.emit(\"changeBoxText\", { oldText, text, boxId });\n        this.emitGraphChanged();\n        return this.boxes[boxId];\n    }\n    async deleteBox(boxId: string) {\n        const box = this.boxes[boxId];\n        if (!box) return null;\n        await box.destroy();\n        this.emitGraphChanged();\n        this.changeIO();\n        return box;\n    }\n    createLine(lineIn: THardwareLine) {\n        if (!this.canCreateLine(lineIn)) return null;\n        if (!lineIn.id || (lineIn.id in this.lines)) lineIn.id = \"line-\" + ++this.props.lineIndexCount;\n        const line = new Line(this, lineIn);\n        this.lines[line.id] = line;\n        line.enable();\n        this.emitGraphChanged();\n        return line;\n    }\n    canCreateLine(lineIn: THardwareLine) {\n        if (lineIn.aIo[1] >= this.boxes[lineIn.aIo[0]].ios.length)\n            return false;\n        if (this.getLinesByBox(lineIn.aIo[0], lineIn.bIo[0], lineIn.aIo[1], lineIn.bIo[1]).length > 0)\n            return false;\n        return true;\n    }\n    deleteLine(lineId: string) {\n        const line = this.lines[lineId];\n        if (!line) return null;\n        line.destroy();\n        if (!this._state.preventEmitChanged) this.emit(\"passiveDeleteLine\", line);\n        this.emitGraphChanged();\n        return line;\n    }\n\n    changeLineA(lineId: string, aId: string, aIo: number) {\n        const line = this.lines[lineId];\n        const oldA: [string, number] = [...line.aIo];\n        const newA: [string, number] = [aId, aIo];\n        line.setA(newA);\n        this.emitGraphChanged();\n        return { lineId, oldA, newA };\n    }\n\n    changeLineB(lineId: string, bId: string, bIo: number) {\n        const line = this.lines[lineId];\n        const oldB: [string, number] = [...line.bIo];\n        const newB: [string, number] = [bId, bIo];\n        line.setB(newB);\n        this.emitGraphChanged();\n        return { lineId, oldB, newB };\n    }\n\n    // changeLineSrc(lineId: string, srcId: string, srcOutlet: number) {\n    //     const line = this.lines[lineId];\n    //     // if (this.instance.getLinesByBox(srcId, line.destId, srcOutlet, line.destInlet).length > 0) return line;\n    //     const oldSrc: [string, number] = [line.srcId, line.srcOutlet];\n    //     const src: [string, number] = [srcId, srcOutlet];\n    //     line.setSrc(src);\n    //     this.emitGraphChanged();\n    //     return { lineId, oldSrc, src };\n    // }\n    // changeLineDest(lineId: string, destId: string, destOutlet: number) {\n    //     const line = this.lines[lineId];\n    //     // if (this.getLinesByBox(line.srcId, destId, line.destInlet, destOutlet).length > 0) return line;\n    //     const oldDest: [string, number] = [line.destId, line.destInlet];\n    //     const dest: [string, number] = [destId, destOutlet];\n    //     line.setDest(dest);\n    //     this.emitGraphChanged();\n    //     return { lineId, oldDest, dest };\n    // }\n    getLinesByAId(aId: string) {\n        const result = [];\n        for (let i = 0; i < this.boxes[aId].ios.length; i++) { // Array.fill fills the array with same instance\n            result[i] = [];\n        }\n        for (const id in this.lines) {\n            const line = this.lines[id];\n            if (line && line.aId === aId) {\n                const bIo = line.bIo;\n                if (!result[bIo[1]])\n                    result[bIo[1]] = [id];\n                else\n                    result[bIo[1]].push(id);\n            }\n        }\n        return result;\n    }\n    getLinesByBId(bId: string) {\n        const result = [];\n        for (let i = 0; i < this.boxes[bId].ios.length; i++) { // Array.fill fills the array with same instance\n            result[i] = [];\n        }\n        for (const id in this.lines) {\n            const line = this.lines[id];\n            if (line && line.bId === bId) {\n                const aIo = line.aIo;\n                if (!result[aIo[1]])\n                    result[aIo[1]] = [id];\n                else\n                    result[aIo[1]].push(id);\n            }\n        }\n        return result;\n    }\n    // getLinesBySrcID(srcId: string) {\n    //     const result = [];\n    //     for (let i = 0; i < this.boxes[srcId].outlets; i++) { // Array.fill fills the array with same instance\n    //         result[i] = [];\n    //     }\n    //     for (const id in this.lines) {\n    //         const line = this.lines[id];\n    //         if (line && line.srcId === srcId) {\n    //             const srcOutlet = line.srcOutlet;\n    //             if (!result[srcOutlet]) result[srcOutlet] = [id];\n    //             else result[srcOutlet].push(id);\n    //         }\n    //     }\n    //     return result;\n    // }\n    // getLinesByDestID(destId: string) {\n    //     const result = [];\n    //     for (let i = 0; i < this.boxes[destId].inlets; i++) {\n    //         result[i] = [];\n    //     }\n    //     for (const id in this.lines) {\n    //         const line = this.lines[id];\n    //         if (line && line.destId === destId) {\n    //             const destInlet = line.destInlet;\n    //             if (!result[destInlet]) result[destInlet] = [id];\n    //             else result[destInlet].push(id);\n    //         }\n    //     }\n    //     return result;\n    // }\n    getLinesByBox(aId: string, bId: string, aIo?: number, bIo?: number) {\n        const result: string[] = [];\n        let aIds: string[] = [];\n        let bIds: string[] = [];\n        const aIosWrapped = this.getLinesByAId(aId);\n        if (aIo !== undefined)\n            aIds = aIosWrapped[aIo];\n        else\n            aIosWrapped.forEach(el => aIds = aIds.concat(el));\n\n        const bIosWrapped = this.getLinesByBId(bId);\n        if (bIo !== undefined)\n            bIds = bIosWrapped[bIo];\n        else\n            bIosWrapped.forEach(el => bIds = bIds.concat(el));\n\n        if (!aIds || !bIds)\n            return result;\n\n        bIds.forEach(idOut => bIds.forEach(idIn => (idIn === idOut ? result.push(idIn) : undefined)));\n        return result;\n    }\n    // getLinesByIo(boxId: string, io: number) {\n    //     const box = this.boxes[boxId];\n    //     if (!box || io > box.ios.length) {\n    //         return [];\n    //     }\n\n    //     const lines = [];\n\n    //     if (box.text.startsWith(\"tie\")) {\n    //         for (let key in this.lines) {\n    //             let line = this.lines[key];\n    //             if (line.aId === boxId || line.bId === boxId) {\n    //                 lines.push(line);\n    //             }\n    //         }\n    //     } else {\n    //         for (let key in this.lines) {\n    //             let line = this.lines[key];\n    //             if ((line.aId === boxId && line.aIo[1] === io) || (line.bId === boxId && line.bIo[1] === io)) {\n    //                 lines.push(line);\n    //             }\n    //         }\n    //     }\n    //     return lines;\n    // }\n    // getConnectedPins(boxId: string, io: number) {\n    //     let lines = this.getLinesByIo(boxId, io);\n\n    //     let all_boxes = lines.flatMap(line => [line.aIo, line.bIo]);\n    //     let unique_boxes = Array.from(new Set(all_boxes));\n\n    //     return unique_boxes.map(([id, io]) => this.boxes[id].meta.ios[io].pin);\n    // }\n    fn(data: any, inlet: number) {\n        // this.emit(\"dataInput\", { data, inlet });\n    }\n    inputAudio(input: number, buffer: Float32Array) {\n        this.emitSync(\"audioInput\", { input, buffer });\n    }\n    inputParam(param: string, buffer: Float32Array) {\n        this.emitSync(\"paramInput\", { param, buffer });\n    }\n    outputAudio(output: number, buffer: Float32Array) {\n        this.emitSync(\"audioOutput\", { output, buffer });\n    }\n    // outlet(outlet: number, data: any) {\n    //     this.emit(\"dataOutput\", { data, outlet });\n    // }\n    changeIO() {\n        this.emit(\"ioChanged\", this.meta);\n    }\n    get meta(): IHardwarePatcherMeta {\n        const { metaFromPatcher } = this;\n        return {\n            name: this.props.name || \"\",\n            icon: null,\n            version: this.props.version || \"\",\n            description: this.props.description || \"\",\n            ...metaFromPatcher\n        };\n    }\n    get metaFromPatcher(): Pick<IHardwarePatcherMeta, \"args\" | \"props\" | \"patcherInlets\" | \"patcherOutlets\"> {\n        const inlets: Map<[string, number], IInletMeta> = new Map();\n        const outlets: Map<[string, number], IOutletMeta> = new Map();\n        for (const boxId in this.boxes) {\n\n            const box = this.boxes[boxId];\n\n            if (box.meta.patcherInlets) {\n                for (const [index, inlet] of box.meta.patcherInlets.entries()) {\n                    inlets.set([boxId, index], inlet);\n                }\n            }\n\n            if (box.meta.patcherOutlets) {\n                for (const [index, outlet] of box.meta.patcherOutlets.entries()) {\n                    outlets.set([boxId, index], outlet);\n                }\n            }\n        }\n        // console.log(`inlets: ${JSON.stringify(Array.from(inlets.entries()))}, outlets: ${JSON.stringify(Array.from(outlets.entries()))}`);\n        return { args: [], props: {}, patcherInlets: inlets, patcherOutlets: outlets };\n    }\n    log(message: string) {\n        this.newLog(\"none\", \"Patcher\", message, this);\n    }\n    error(message: string) {\n        this.newLog(\"error\", \"Patcher\", message, this);\n    }\n    newLog(errorLevel: TErrorLevel, title: string, message: string, emitter?: any) {\n        this.env.newLog(errorLevel, title, message, emitter);\n    }\n    setProps(props: Partial<TPublicPatcherProps>) {\n        let changed = false;\n        const oldProps: Partial<TPublicPatcherProps> = {};\n        for (const keyIn in props) {\n            const key = keyIn as keyof TPublicPatcherProps;\n            if (this.props[key] === props[key]) continue;\n            changed = true;\n            (oldProps as any)[key] = this.props[key];\n            (this.props as any)[key] = props[key];\n            this.emit(key, props[key]);\n        }\n        if (changed) {\n            this.emit(\"propsChanged\", { props, oldProps });\n            this.emitChanged();\n        }\n    }\n    get publicProps() {\n        const { dependencies, bgColor, editingBgColor, grid, openInPresentation } = this.props;\n        return { dependencies, bgColor, editingBgColor, grid, openInPresentation } as TPublicPatcherProps;\n    }\n    toString(spacing?: number) {\n        const { props, meta } = this;\n        const boxes: RawHardwarePatcher[\"boxes\"] = {};\n        const lines: RawHardwarePatcher[\"lines\"] = {};\n\n        const inlets = Array.from(meta.patcherInlets.entries()).map(([key, _]) => key);\n        const outlets = Array.from(meta.patcherOutlets.entries()).map(([key, _]) => key);\n\n        for (const id in this.boxes) {\n            boxes[id] = this.boxes[id].toSerializable();\n        }\n        for (const id in this.lines) {\n            lines[id] = this.lines[id].toSerializable();\n        }\n        return JSON.stringify({ boxes, lines, props, inlets, outlets }, undefined, spacing);\n    }\n    toSerializable(): RawHardwarePatcher {\n        return JSON.parse(this.toString());\n    }\n    serialize() {\n        return new Blob([this.toString()]).arrayBuffer();\n    }\n}\n","import type { SemanticICONS } from \"semantic-ui-react\";\nimport TypedEventEmitter from \"../../../../utils/TypedEventEmitter\";\nimport { stringifyError } from \"../../../../utils/utils\";\nimport Line from \"../../Line\";\nimport type Box from \"../../Box\";\nimport type Patcher from \"../../Patcher\";\nimport type { ProjectItemType, TempItemByType, SharedItemByType, TempItemType, TAudioNodeInletConnection, TAudioNodeOutletConnection } from \"../../../types\";\nimport type AbstractUI from \"./AbstractHardwareUI\";\nimport type { IJSPatcherEnv } from \"../../../Env\";\nimport { BasePin, IoPosition } from \"../../types\";\n// import { TMetaType } from \"../../../objects/base/AbstractObject\";\nimport { IInletsMeta, IOutletsMeta } from \"../../../objects/base/AbstractObject\";\n\nexport const isJSPatcherObjectConstructor = (x: any): x is typeof AbstractObject => typeof x === \"function\" && x?.isJSPatcherObjectConstructor;\n\nexport const isJSPatcherObject = (x: any): x is AbstractObject => typeof x === \"object\" && x?.isJSPatcherObject;\n\nexport type THardwareMetaType = \"anything\" | \"signal\" | \"object\" | \"number\" | \"boolean\" | \"string\" | \"function\" | \"bang\" | \"color\" | \"enum\";\nexport interface IIoMeta {\n    type: THardwareMetaType;\n    pin: BasePin;\n    description: string;\n}\nexport type IIosMeta = IIoMeta[];\nexport interface IArgMeta {\n    type: THardwareMetaType;\n    enums?: string[];\n    optional: boolean;\n    default?: any;\n    varLength?: boolean;\n    description: string;\n}\nexport type IArgsMeta = IArgMeta[];\nexport interface IPropMeta<T extends any = any> {\n    type: THardwareMetaType;\n    enums?: T[];\n    default: T;\n    group?: string;\n    description: string;\n    isUIState?: boolean;\n    alwaysSerialize?: boolean;\n}\nexport type IPropsMeta<T extends Record<string, any> = Record<string, any>> = { [K in keyof T]: IPropMeta<T[K]> };\nexport interface IHardwarePatcherObjectMeta<P extends Record<string, any> = Record<string, any>> {\n    name: string;\n    icon: SemanticICONS; // semantic icon to display in UI\n    version: string;\n    description: string;\n    ios: IIosMeta;\n    args: IArgsMeta;\n    props: IPropsMeta<P>;\n    patcherInlets: IInletsMeta;\n    patcherOutlets: IOutletsMeta;\n    docs: string;\n    helpFiles: string[];\n}\n\nexport interface ObjectUpdateOptions {\n    /** The ID will be passed through update*, set* and *Updated events */\n    id?: string;\n    undoable?: boolean;\n}\n\nexport type Data<T> = T extends IHardwarePatcherObject<infer D, any, any, any, any, any, any, any, any> ? D : never;\nexport type State<T> = T extends IHardwarePatcherObject<any, infer S, any, any, any, any, any, any, any> ? S : never;\nexport type Ios<T> = T extends IHardwarePatcherObject<any, any, infer IO, any, any, any, any, any> ? IO : never;\nexport type PatcherInlets<T> = T extends IHardwarePatcherObject<any, any, any, infer I, any, any, any, any, any> ? I : never;\nexport type PatcherOutlets<T> = T extends IHardwarePatcherObject<any, any, any, any, any, infer O, any, any, any> ? O : never;\nexport type Args<T> = T extends IHardwarePatcherObject<any, any, any, any, any, infer A, any, any, any> ? A : never;\nexport type Props<T> = T extends IHardwarePatcherObject<any, any, any, any, any, any, infer P, any, any> ? P : never;\nexport type UIState<T> = T extends IHardwarePatcherObject<any, any, any, any, any, any, any, infer U, any> ? U : never;\nexport type EventMap<T> = T extends IHardwarePatcherObject<any, any, any, any, any, any, any, any, infer E> ? E : never;\nexport type TIoEvent<IO extends any[] = any[], $ extends keyof Pick<IO, number> = keyof Pick<IO, number>> = { io: $; data: IO[$] };\nexport type HardwarePatcherObjectEventMap<D, S, IO extends any[], I extends any[], O extends any[], A extends any[], P, U, E> = {\n    /** Emitted before any connection */\n    \"preInit\": never;\n    /** Emitted after connections */\n    \"postInit\": never;\n    /** Emitted immediately when the editor request changes to the args */\n    \"updateArgs\": Partial<A>;\n    /** Emitted immediately when the editor request changes to the props */\n    \"updateProps\": Partial<P>;\n    /** Emitted immediately when the editor request changes to the state */\n    \"updateState\": { id?: string; state: Partial<S> };\n    /** The UI will listen to this event type */\n    \"updateUI\": Partial<U> | never;\n    /** Emitted if data is sent through a cable */\n    \"io\": TIoEvent<IO>;\n    /** Emitted when a new connection/disconnection is made on any I/O */\n    // \"connectedIo\": { aIo: number; bIo: number; bBoxId: string; lineId: string; };\n    // \"disconnectedIo\": { aIo: number; bIo: number; bBoxId: string; lineId: string; };\n\n    \"connectedIo\": { io: number; otherIo: number; otherBox: string; lineId: string; };\n    \"disconnectedIo\": { io: number; otherIo: number; otherBox: string; lineId: string; };\n\n\n    /** Emitted when the object will be destroyed, attach a callback to clean up */\n    \"destroy\": never;\n    /** Emitted when the object's metadata is changed (by itself) */\n    \"metaUpdated\": { oldMeta: IHardwarePatcherObjectMeta; meta: IHardwarePatcherObjectMeta };\n    /** Emitted when the object's args is changed */\n    \"argsUpdated\": { oldArgs: A; args: A };\n    /** Emitted when the object's data is changed */\n    \"propsUpdated\": { oldProps: Partial<P>; props: Partial<P> };\n    /** Emitted when the object's data is changed (by itself) */\n    \"dataUpdated\": { oldData: D; data: D };\n    /** Emitted when the object's state is changed */\n    \"stateUpdated\": { oldState: S; state: S; id?: string };\n} & E;\n\n/**\n * All JSPatcher Object should extends this class\n *\n * @template D serializable, type of `data` property, use `setData` to update. Data will be stored with the box in the serialized patcher. Will mark the patcher `dirty`.\n * @template S serializable, type of `state` property, use `setState` to update. State is temporary to the object instance. Can be updated from the host.\n * @template IO type of I/O as an array.\n * @template I type of patcher inlets as an array.\n * @template O type of patcher outlets as an array.\n * @template A serializable, type of args as an array.\n * @template P serializable, type of props as a map.\n * @template U type of UI state as a map, the UI will listen to any update of this map. If the object can be running on another thread, this should be serializable.\n * @template E type of additional event map\n */\nexport interface IHardwarePatcherObject<\n    D extends {} = {},\n    S extends {} = {},\n    IO extends any[] = any[],\n    I extends any[] = any[],\n    O extends any[] = any[],\n    A extends any[] = any[],\n    P extends {} = {},\n    U extends {} = {},\n    E extends Partial<HardwarePatcherObjectEventMap<D, S, IO, I, O, A, P, U, {}>> & Record<string, any> = {}\n> extends TypedEventEmitter<HardwarePatcherObjectEventMap<D, S, IO, I, O, A, P, U, E>> {\n    /** Should be true */\n    readonly isHardwarePatcherObject: true;\n    /** Unique identifier of the object */\n    readonly id: string;\n    /** constructor (class) name */\n    readonly class: string;\n    /** the patcher that the object lives in */\n    readonly patcher: Patcher;\n    /** Patcher constructor */\n    readonly Patcher: typeof Patcher;\n    /** the box that the object lives in */\n    readonly box: Box<this>;\n    /** the env that the object lives in */\n    readonly env: IJSPatcherEnv;\n    readonly audioCtx?: AudioContext;\n    readonly meta: IHardwarePatcherObjectMeta<P>;\n    setMeta(metaIn: Partial<IHardwarePatcherObjectMeta>): void;\n    /** Serializable, use `setState` to update. State is temporary to the object instance. Can be updated from the host. */\n    state: S;\n    setState(stateIn: Partial<S>, id?: string): void;\n    /** Serializable, type of `data` property, use `setData` to update. Data will be stored with the box in the serialized patcher. */\n    readonly data: D;\n    setData(dataIn: Partial<D>): void;\n    /** Get all props from box, if not defined, get from metadata default */\n    readonly props: Partial<P>;\n    /** Get prop value from box, if not defined, get from metadata default. */\n    getProp<K extends keyof P = keyof P>(key: K): P[K];\n    setProps(props: Partial<P>): void;\n    readonly args: Partial<A>;\n    setArgs(args: Partial<A>): void;\n    ios: IoPosition[];\n    readonly ioLines: Set<Line>[];\n    // inletAudioConnections: TAudioNodeInletConnection<AudioNode | AudioParam>[];\n    // outletAudioConnections: TAudioNodeOutletConnection[];\n\n    // for box\n    /** Will be called just after constructed */\n    init(): Promise<void>;\n    /** Will be called after the object attached to box */\n    postInit(): Promise<void>;\n    /** Will be called when need to change arguments */\n    updateArgs(args: A, options?: ObjectUpdateOptions): Promise<void>;\n    /** Will be called when need to change properties */\n    updateProps(props: Partial<P>, options?: ObjectUpdateOptions): Promise<void>;\n    /** Will be called when need to change state */\n    updateState(state: Partial<S>, options?: ObjectUpdateOptions): Promise<void>;\n    /** Main function when receive data from an I/O (base 0). */\n    fn<$ extends number = number>(io: $, data: IO[$]): void;\n    /** Called when object will be destroyed. */\n    destroy(): Promise<void>;\n    // called when inlet or outlet are connected or disconnected\n    // connectedIo(aIo: number, bIo: number, bBoxId: string, lineId: string): void;\n    // disconnectedIo(aIo: number, bIo: number, bBoxId: string, lineId: string): void;\n\n    connectedIo(io: number, otherIo: number, otherBox: string, lineId: string): void;\n    disconnectedIo(io: number, otherIo: number, otherBox: string, lineId: string): void;\n    /** Highlight the UI box. */\n    highlight(): void;\n\n    // for developer\n    /** Update UI's React State. */\n    updateUI(state: Partial<U>): void;\n    // /**\n    //  * Outlet all values in an array with corresponding index,\n    //  * use sparse array to omit an outlet,\n    //  * `[, 1]` will outlet 1 on second outlet,\n    //  * but `[undefined, 1]` will also outlet undefined on first outlet\n    //  */\n    // outletAll(outputs: Partial<O>): void;\n    /** Record an undoable operation to the patcher history */\n    undoable(e: { oldArgs?: A; args?: A; oldProps?: Partial<P>; props?: Partial<P>; oldState?: S; state?: S }): void;\n    /**\n     * Get a shared item from files or temp\n     * If no ID provided, this will create a new key in temp\n     * if no such ID found in files or in temp, will put the result of data() into it.\n     */\n    getSharedItem<T extends ProjectItemType>(id?: string, type?: T, data?: () => Promise<TempItemByType<T>[\"data\"]>, onceCreate?: (aitem: SharedItemByType<T>) => any): Promise<{ id: string; item: SharedItemByType<T>; newItem: boolean; off?: () => any }>;\n    // output to console\n    post(data: any): void;\n    error(data: any): void;\n    info(data: any): void;\n    warn(data: any): void;\n    applyBPF(param: AudioParam, bpf: number[][]): void;\n}\nexport declare const IHardwarePatcherObject: {\n    /** Should be true */\n    readonly isHardwarePatcherObjectConstructor: true;\n    /** div will have class \"packageName\" \"packageNanumber */\n    description: string;\n    ios: IIosMeta;\n    args: IArgsMeta;\n    props: IPropsMeta;\n    patcherInlets: IInletsMeta;\n    patcherOutlets: IOutletsMeta;\n    // isPatcherInlet: \"data\" | \"audio\" | false;\n    // isPatcherOutlet: \"data\" | \"audio\" | false;\n    readonly meta: IHardwarePatcherObjectMeta;\n    /**\n     * The UI that the object uses to display in the patcher, not available in other threads.\n     * is `BaseUI` by default\n     */\n    UI?: typeof AbstractUI;\n    new(box: Box, patcher: Patcher): IHardwarePatcherObject;\n};\n\nexport interface AnyJSPatcherObject extends IHardwarePatcherObject<Record<string, any>, Record<string, any>, any[], any[], any[], any[], Record<string, any>, Record<string, any>, Record<string, any>> { }\n\nexport default abstract class AbstractObject<\n    D extends {} = {},\n    S extends {} = {},\n    IO extends any[] = any[],\n    I extends any[] = any[],\n    O extends any[] = any[],\n    A extends any[] = any[],\n    P extends {} = {},\n    U extends {} = {},\n    E extends Partial<HardwarePatcherObjectEventMap<D, S, IO, I, O, A, P, U, {}>> & Record<string, any> = {}\n> extends TypedEventEmitter<HardwarePatcherObjectEventMap<D, S, IO, I, O, A, P, U, E>> implements IHardwarePatcherObject<D, S, IO, I, O, A, P, U, E> {\n    static readonly isHardwarePatcherObjectConstructor = true as const;\n    static package = \"Base\";\n    static get _name() {\n        return this.name;\n    }\n    static icon = null as SemanticICONS;\n    static author = \"\";\n    static version = \"0.0.0\";\n    static description = \"\";\n    static ios: IIosMeta = [];\n    static args: IArgsMeta = [];\n    static props: IPropsMeta = {};\n    static patcherInlets: IInletsMeta = [];\n    static patcherOutlets: IOutletsMeta = [];\n    static docs: string = \"\";\n    static helpFiles: string[] = [];\n    static get meta(): IHardwarePatcherObjectMeta {\n        return {\n            name: this._name,\n            icon: this.icon, // semantic icon to display in UI\n            version: this.version,\n            description: this.description,\n            ios: this.ios,\n            args: this.args,\n            props: this.props,\n            patcherInlets: this.patcherInlets,\n            patcherOutlets: this.patcherOutlets,\n            docs: this.docs,\n            helpFiles: this.helpFiles,\n        };\n    }\n    static UI: typeof AbstractUI;\n\n    readonly isHardwarePatcherObject = true as const;\n    readonly id: string;\n    get class() {\n        return this.constructor.name;\n    }\n    protected readonly _patcher: Patcher;\n    get patcher() {\n        return this._patcher;\n    }\n    get Patcher() {\n        return this._patcher.constructor as typeof Patcher;\n    }\n    protected readonly _box: Box<this>;\n    get box() {\n        return this._box;\n    }\n    get env() {\n        return this.patcher.env;\n    }\n    get audioCtx() {\n        return this.patcher.audioCtx;\n    }\n    private _meta = (this.constructor as typeof AbstractObject).meta as IHardwarePatcherObjectMeta<P>;\n    get meta(): IHardwarePatcherObjectMeta<P> {\n        return this._meta;\n    }\n    setMeta(metaIn: Partial<IHardwarePatcherObjectMeta<P>>) {\n        const oldMeta = { ...this.meta };\n        this._meta = Object.assign(this.meta, metaIn);\n        this.emit(\"metaUpdated\", { oldMeta, meta: { ...this.meta } });\n    }\n    state: S;\n    setState = (stateIn: Partial<S>, id?: string) => {\n        const oldState = { ...this.state };\n        this.state = Object.assign(this.state, stateIn);\n        this.emit(\"stateUpdated\", { oldState, state: { ...this.state }, id });\n    };\n    get data(): D {\n        return this._box.data;\n    }\n    setData(dataIn: Partial<D>) {\n        const oldData = { ...this._box.data };\n        this._box.data = Object.assign(this.data, dataIn) as any;\n        this.emit(\"dataUpdated\", { oldData, data: { ...this.data } });\n    }\n    get props(): Partial<P> {\n        const props: Partial<P> = {};\n        for (const key in this.meta.props) {\n            props[key as keyof P] = this.getProp(key as keyof P);\n        }\n        return props;\n    }\n    getProp<K extends keyof P = keyof P>(key: K): P[K] {\n        if (key === \"rect\") return this.box.rect as any;\n        if (key === \"presentationRect\") return this.box.presentationRect as any;\n        if (key === \"background\") return this.box.background as any;\n        if (key === \"presentation\") return this.box.presentation as any;\n        return typeof this.box.props[key] === \"undefined\" ? this.meta.props[key].default : this.box.props[key];\n    }\n    setProps = (propsIn: Partial<P>) => {\n        const keys = Object.keys(propsIn);\n        const oldProps = { ...this.props } as Partial<P>;\n        this.box.update({ props: propsIn });\n        const props = { ...this.props } as Partial<P>;\n        for (const key in oldProps) {\n            if (keys.indexOf(key) === -1) {\n                delete oldProps[key];\n                delete props[key];\n            }\n        }\n        this.emit(\"propsUpdated\", { oldProps, props });\n    };\n    get args(): Partial<A> {\n        return this.box.args as any;\n    }\n    setArgs = (args: Partial<A>) => {\n        const oldArgs = this.args.slice() as A;\n        this.box.update({ args });\n        this.emit(\"argsUpdated\", { oldArgs, args: this.args.slice() as A });\n    };\n    get ios() {\n        return this._box.ios;\n    }\n    set ios(i: IoPosition[]) {\n        this._box.setIos(i);\n    }\n    get ioLines() {\n        return this._box.ioLines;\n    }\n    // inletAudioConnections: TAudioNodeInletConnection[] = [];\n    // outletAudioConnections: TAudioNodeOutletConnection[] = [];\n    constructor(box: Box, patcher: Patcher) {\n        super();\n        // line connected = metaChange event subscribed\n        // patcher object outside, use _ for prevent recursive stringify\n        this._patcher = patcher;\n        // the box which create this instance, use _ for prevent recursive stringify\n        this._box = box as Box<this>;\n        this.id = this.env.generateId(this);\n    }\n    async init() {\n        // process args and props\n        this.subscribe();\n        await this.emit(\"preInit\");\n    }\n    async postInit() {\n        await this.emit(\"postInit\");\n    }\n    /** Do everything here */\n    subscribe(): void { }\n    updateUI(state: Partial<U>) {\n        this.emit(\"updateUI\", state);\n    }\n    async updateArgs(args: A, options?: ObjectUpdateOptions) {\n        if (args?.length) {\n            const oldArgs = this.args.slice() as A;\n            await this.emit(\"updateArgs\", args);\n            if (options?.undoable) this.undoable({ oldArgs, args: this.args.slice() as A });\n        }\n    }\n    async updateProps(propsIn: Partial<P>, options?: ObjectUpdateOptions) {\n        if (propsIn && Object.keys(propsIn).length) {\n            const keys = Object.keys(propsIn);\n            const oldProps = { ...this.props };\n            await this.emit(\"updateProps\", propsIn);\n            const props = { ...this.props };\n            for (const key in oldProps) {\n                if (keys.indexOf(key) === -1) {\n                    delete oldProps[key];\n                    delete props[key];\n                }\n            }\n            if (options?.undoable) this.undoable({ oldProps, props });\n        }\n    }\n    async updateState(state: Partial<S>, options?: ObjectUpdateOptions) {\n        if (state && Object.keys(state).length) {\n            const oldState = { ...this.state };\n            await this.emit(\"updateState\", { id: options?.id, state });\n            if (options?.undoable) this.undoable({ oldState, state: { ...this.state } });\n        }\n    }\n    fn<$ extends keyof Pick<IO, number> = keyof Pick<IO, number>>(io: $, data: IO[$]) {\n        if (io === 0) { // allow change props via first inlet with an props object\n            if (data !== null && typeof data === \"object\") {\n                const propsInKeys = Object.keys(data);\n                const propsKeys = Object.keys(this.meta.props);\n                if (propsInKeys.length && propsInKeys.every(k => propsKeys.indexOf(k) !== -1)) {\n                    this.updateProps(data);\n                    return;\n                }\n            }\n        }\n        // this.emit(\"inlet\", { data, io });\n    }\n    outlet<$ extends keyof Pick<IO, number>>(io: $, data: IO[$]) {\n        if (io >= this.ios.length)\n            return;\n        Array.from(this.ioLines[io]).sort(Line.compare).map(line => line.pass(data));\n    }\n    // outletAll(outputs: Partial<O>) {\n    //     for (let i = outputs.length - 1; i >= 0; i--) {\n    //         if (i in outputs) this.outlet(i, outputs[i]);\n    //     }\n    // }\n    undoable(e: { oldArgs?: A; args?: A; oldProps?: Partial<P>; props?: Partial<P>; oldState?: S; state?: S }) {\n        this.box.undoable(e as any);\n    }\n    async destroy() {\n        await this.emit(\"destroy\");\n    }\n    connectedIo(io: number, otherIo: number, otherBox: string, lineId: string): void {\n        this.emit(\"connectedIo\", { io, otherIo, otherBox, lineId });\n    }\n    disconnectedIo(io: number, otherIo: number, otherBox: string, lineId: string): void {\n        this.emit(\"disconnectedIo\", { io, otherIo, otherBox, lineId });\n    }\n    // connectedIo(aIo: number, bIo: number, bBoxId: string, lineId: string): void {\n    //     this.emit(\"connectedIo\", { aIo, bIo, bBoxId, lineId })\n    // }\n    // disconnectedIo(aIo: number, bIo: number, bBoxId: string, lineId: string): void {\n    //     this.emit(\"disconnectedIo\", { aIo, bIo, bBoxId, lineId })\n    // }\n    post(data: any) {\n        this._patcher.newLog(\"none\", this.meta.name, stringifyError(data), this._box);\n    }\n    error(data: any) {\n        const s = stringifyError(data);\n        this._patcher.newLog(\"error\", this.meta.name, s, this._box);\n        this._box.error(s);\n    }\n    info(data: any) {\n        this._patcher.newLog(\"info\", this.meta.name, stringifyError(data), this._box);\n    }\n    warn(data: any) {\n        this._patcher.newLog(\"warn\", this.meta.name, stringifyError(data), this._box);\n    }\n    highlight() {\n        this._box.highlight();\n    }\n    applyBPF(param: AudioParam, bpf: number[][]) {\n        const { audioCtx } = this;\n        const { currentTime } = audioCtx;\n        param.cancelScheduledValues(currentTime);\n        param.setValueAtTime(param.value, currentTime);\n        let t = 0;\n        bpf.forEach((a) => {\n            if (a.length === 1) {\n                param.setValueAtTime(a[0], currentTime + t);\n            } else if (a.length > 1) {\n                t += a[1];\n                param.linearRampToValueAtTime(a[0], currentTime + t);\n            }\n        });\n    }\n    async getSharedItem<T extends ProjectItemType>(id = this.box.id, type: T = \"unknown\" as T, data?: () => Promise<TempItemByType<T>[\"data\"]>, onceCreate?: (aitem: SharedItemByType<T>) => any): Promise<{ id: string; item: SharedItemByType<T>; newItem: boolean; off?: () => any }> {\n        let item: SharedItemByType<T>;\n        let newItem = false;\n        const { fileMgr, tempMgr } = this.patcher.env;\n        try {\n            item = fileMgr.getProjectItemFromPath(id) as SharedItemByType<T>;\n        } catch {\n            try {\n                item = tempMgr.getProjectItemFromPath(id) as SharedItemByType<T>;\n            } catch {\n                if (data) {\n                    const d = await data();\n                    try {\n                        item = await tempMgr.root.addFile(id, d, type as TempItemType) as SharedItemByType<T>;\n                        newItem = true;\n                    } catch {\n                        item = tempMgr.getProjectItemFromPath(id) as SharedItemByType<T>;\n                    }\n                } else {\n                    if (onceCreate) {\n                        const off = () => {\n                            fileMgr.off(\"treeChanged\", handleFileMgrTreeChanged);\n                            tempMgr.off(\"treeChanged\", handleTempMgrTreeChanged);\n                        };\n                        const handleFileMgrTreeChanged = () => {\n                            try {\n                                item = fileMgr.getProjectItemFromPath(id) as SharedItemByType<T>;\n                                off();\n                                onceCreate(item);\n                            } catch { }\n                        };\n                        const handleTempMgrTreeChanged = () => {\n                            try {\n                                item = tempMgr.getProjectItemFromPath(id) as SharedItemByType<T>;\n                                off();\n                                onceCreate(item);\n                            } catch { }\n                        };\n                        fileMgr.on(\"treeChanged\", handleFileMgrTreeChanged);\n                        tempMgr.on(\"treeChanged\", handleTempMgrTreeChanged);\n                        return { id, item: null, newItem, off };\n                    }\n                    return { id, item: null, newItem };\n                }\n            }\n        }\n        if (item.type !== type) throw new Error(`Getting shared item ${id}, but returned item is of type ${item.type}, not of type ${type}.`);\n        return { id, item, newItem };\n    }\n}\n","import AbstractObject, { IHardwarePatcherObjectMeta, IPropsMeta } from \"./AbstractHardwareObject\";\nimport type { TRect } from \"../../../types\";\nimport type { BaseUIState } from \"./BaseHardwareUI\";\n\nexport interface BaseObjectAdditionalProps {\n    background: boolean;\n    presentation: boolean;\n    rect: TRect;\n    presentationRect: TRect;\n}\nexport interface BaseObjectProps extends BaseObjectAdditionalProps, BaseUIState { }\nexport default class BaseObject<\n    D extends {} = {},\n    S extends {} = {},\n    IO extends any[] = any[],\n    I extends any[] = any[],\n    O extends any[] = any[],\n    A extends any[] = any[],\n    P extends Partial<BaseObjectProps> & Record<string, any> = {},\n    U extends Partial<BaseUIState> & Record<string, any> = {},\n    E extends {} = {}\n> extends AbstractObject<D, S, IO, I, O, A, P & BaseObjectProps, U & BaseUIState, E> {\n    static package = \"base\";\n    static props: IPropsMeta = {\n        hidden: {\n            type: \"boolean\",\n            default: false,\n            description: \"Hide on lock\",\n            isUIState: true\n        },\n        background: {\n            type: \"boolean\",\n            default: false,\n            description: \"Include in background\"\n        },\n        presentation: {\n            type: \"boolean\",\n            default: false,\n            description: \"Include in presentation\"\n        },\n        rect: {\n            type: \"object\",\n            default: [0, 0, 90, 20],\n            description: \"Position and dimensions in patch\"\n        },\n        presentationRect: {\n            type: \"object\",\n            default: [0, 0, 90, 20],\n            description: \"Position and dimensions in presentation\"\n        },\n        ignoreClick: {\n            type: \"boolean\",\n            default: false,\n            description: \"Ignore Click\",\n            isUIState: true\n        },\n        hint: {\n            type: \"string\",\n            default: \"\",\n            description: \"Hint on hover\",\n            isUIState: true\n        }\n    };\n    static get meta(): IHardwarePatcherObjectMeta {\n        const thisName = this._name;\n        const superMeta = Object.getPrototypeOf(this).meta;\n        const superProps = superMeta.props;\n        const thisProps = this.props;\n        for (const key in thisProps) {\n            thisProps[key as keyof IPropsMeta<BaseObjectProps>].group = key in superProps ? superProps[key].group : thisName;\n        }\n        return {\n            name: this._name,\n            icon: this.icon,\n            version: this.version,\n            description: this.description,\n            ios: [...this.ios],\n            args: [...this.args],\n            props: {\n                ...superProps,\n                ...thisProps\n            },\n            patcherInlets: [...this.patcherInlets],\n            patcherOutlets: [...this.patcherOutlets],\n            docs: this.docs,\n            helpFiles: this.helpFiles,\n        };\n    }\n    isUIStateKey = (x: any) => this.meta.props[x] && this.meta.props[x].isUIState;\n    updateUIFromProps = (props: Partial<P & BaseObjectProps>) => {\n        if (props) {\n            const uiState: Partial<U & BaseUIState> = {};\n            for (const key in props) {\n                if (this.isUIStateKey(key)) uiState[key as keyof (U & BaseUIState)] = props[key] as any;\n            }\n            this.updateUI(uiState);\n        }\n    };\n    subscribe() {\n        super.subscribe();\n        this.on(\"metaUpdated\", e => this.box.emit(\"metaUpdated\", e));\n        this.on(\"argsUpdated\", e => this.box.emit(\"argsUpdated\", e));\n        this.on(\"propsUpdated\", e => this.box.emit(\"propsUpdated\", e));\n        this.on(\"dataUpdated\", e => this.box.emit(\"dataUpdated\", e));\n        this.on(\"stateUpdated\", e => this.box.emit(\"stateUpdated\", e));\n        this.on(\"updateArgs\", this.setArgs);\n        this.on(\"updateProps\", this.setProps);\n        this.on(\"updateProps\", this.updateUIFromProps);\n    }\n}\n","import BaseHardwareObject from \"./BaseHardwareObject\";\nimport EmptyObject from \"./EmptyObject\";\nimport InvalidObject from \"./InvalidObject\";\nimport ImageObject from \"./ImageObject\";\n// import { Func, New } from \"../importer/DefaultImporter\";\n// import Listen from \"./Listen\";\n// import _comment from \"./Comment\";\n// import getIO from \"../main/index.jspatpkg\";\n// import CommentUI from \"./CommentUI\";\n\nexport default {\n    BaseHardwareObject,\n    EmptyObject,\n    InvalidObject,\n    'image': ImageObject,\n};\n","import DefaultUI, { DefaultUIState } from \"./DefaultHardwareUI\";\nimport BaseObject, { BaseObjectProps } from \"./BaseHardwareObject\";\nimport type { IPropsMeta } from \"./AbstractHardwareObject\";\nimport type Env from \"../../../Env\";\n\nexport interface DefaultObjectUIProps {\n    bgColor: string;\n    borderColor: string;\n    textColor: string;\n    fontFamily: string;\n    fontSize: number;\n    fontStyle: \"normal\" | \"italic\" | \"oblique\";\n    fontWeight: \"normal\" | \"bold\" | \"lighter\" | \"bolder\" | number;\n    textAlign: \"center\" | \"left\" | \"right\";\n}\nexport interface DefaultObjectProps extends DefaultObjectUIProps, BaseObjectProps { }\nexport default class DefaultObject<\n    D extends {} = {},\n    S extends {} = {},\n    IO extends any[] = any[],\n    I extends any[] = any[],\n    O extends any[] = any[],\n    A extends any[] = any[],\n    P extends Partial<DefaultObjectProps> & Record<string, any> = {},\n    U extends Partial<DefaultUIState> & Record<string, any> = {},\n    E extends {} = {}\n> extends BaseObject<D, S, IO, I, O, A, P & DefaultObjectProps, U & DefaultUIState, E> {\n    static props: IPropsMeta = {\n        bgColor: {\n            type: \"color\",\n            default: \"rgb(41, 60, 71)\",\n            description: \"Background color\",\n            isUIState: true\n        },\n        borderColor: {\n            type: \"color\",\n            default: \"rgb(41, 60, 71)\",\n            description: \"Border color\",\n            isUIState: true\n        },\n        textColor: {\n            type: \"color\",\n            default: \"rgb(255, 255, 255)\",\n            description: \"Text color\",\n            isUIState: true\n        },\n        fontFamily: {\n            type: \"enum\",\n            enums: [\"Lato\", \"Georgia\", \"Times New Roman\", \"Arial\", \"Tahoma\", \"Verdana\", \"Courier New\", \"Roboto Mono\"],\n            default: \"Roboto Mono\",\n            description: \"Font family\",\n            isUIState: true\n        },\n        fontSize: {\n            type: \"number\",\n            default: 12,\n            description: \"Text font size\",\n            isUIState: true\n        },\n        fontStyle: {\n            type: \"enum\",\n            enums: [\"normal\", \"italic\", \"oblique\"],\n            default: \"normal\",\n            description: \"Text style\",\n            isUIState: true\n        },\n        fontWeight: {\n            type: \"string\",\n            default: \"normal\",\n            description: 'Text style: \"normal\" | \"bold\" | \"lighter\" | \"bolder\" | number',\n            isUIState: true\n        },\n        textAlign: {\n            type: \"enum\",\n            enums: [\"left\", \"center\", \"right\"],\n            default: \"left\",\n            description: \"Text style\",\n            isUIState: true\n        }\n    };\n    static UI = DefaultUI;\n    get env() {\n        return super.env as Env;\n    }\n}\n","import * as React from \"react\";\nimport * as Color from \"color-js\";\nimport { SemanticICONS, Icon } from \"semantic-ui-react\";\nimport { ImportedStaticMethodObject } from \"../../../../utils/symbols\";\nimport { selectElementRange, selectElementPos } from \"../../../../utils/utils\";\n// import StaticMethod from \"../../../importer/StaticMethod\";\nimport BaseUI, { BaseUIProps, BaseUIState } from \"./BaseHardwareUI\";\nimport type { TFlatPackage } from \"../../../types\";\nimport type { IHardwarePatcherObject, THardwareMetaType } from \"./AbstractHardwareObject\";\nimport type DefaultObject from \"./DefaultHardwareObject\";\nimport type { DefaultObjectUIProps } from \"./DefaultHardwareObject\";\nimport \"./DefaultHardwareUI.scss\";\n\nexport interface DefaultUIProps<T extends DefaultObject = DefaultObject> extends BaseUIProps<T> {\n    textContainerProps?: JSX.IntrinsicAttributes & React.ClassAttributes<HTMLDivElement> & React.HTMLAttributes<HTMLDivElement>;\n    prependProps?: JSX.IntrinsicAttributes & React.ClassAttributes<HTMLDivElement> & React.HTMLAttributes<HTMLDivElement>;\n    spanProps?: JSX.IntrinsicAttributes & React.ClassAttributes<HTMLSpanElement> & React.HTMLAttributes<HTMLSpanElement>;\n    appendProps?: JSX.IntrinsicAttributes & React.ClassAttributes<HTMLDivElement> & React.HTMLAttributes<HTMLDivElement>;\n}\nexport interface DefaultUIState extends BaseUIState, DefaultObjectUIProps {\n    text: string;\n    loading: boolean;\n}\ninterface DefaultUIDropdownObjectsItem { key: string; icon: SemanticICONS; description: string }\ninterface DefaultUIDropdownObjectsProps { lib: TFlatPackage; query: string; staticMethodOnly?: boolean; onSelect: (e: React.MouseEvent<HTMLTableRowElement>, value: string) => void }\ninterface DefaultUIDropdownObjectsState { $: number; items: DefaultUIDropdownObjectsItem[] }\nclass DefaultUIDropdownObjects extends React.Component<DefaultUIDropdownObjectsProps, DefaultUIDropdownObjectsState> {\n    state: DefaultUIDropdownObjectsState = { $: -1, items: [] };\n    refTBody = React.createRef<HTMLTableSectionElement>();\n    next() {\n        const { items, $ } = this.state;\n        this.setState({ $: Math.min(items.length - 1, $ + 1) });\n        if ($ >= 0 && this.refTBody.current && items[$ + 1]) {\n            const table = this.refTBody.current.parentElement;\n            const row = (this.refTBody.current.children[$ + 1] as HTMLTableRowElement);\n            if (row.offsetTop + row.offsetHeight > table.scrollTop + table.offsetHeight) row.scrollIntoView(false);\n        }\n    }\n    prev() {\n        const { items, $ } = this.state;\n        this.setState({ $: Math.max(-1, $ - 1) });\n        if ($ >= 0 && this.refTBody.current && items[$ - 1]) {\n            const table = this.refTBody.current.parentElement;\n            const row = (this.refTBody.current.children[$ - 1] as HTMLTableRowElement);\n            if (row.offsetTop < table.scrollTop) row.scrollIntoView(true);\n        }\n    }\n    get current() {\n        return this.state.items[this.state.$];\n    }\n    static getItems(propsIn: DefaultUIDropdownObjectsProps) {\n        const { lib, query, staticMethodOnly } = propsIn;\n        const keys = Object.keys(lib).sort();\n        const items: DefaultUIDropdownObjectsItem[] = [];\n        for (let i = 0; i < keys.length; i++) {\n            if (items.length >= 16) break;\n            const key = keys[i];\n            if (key.startsWith(query)) {\n                const o = lib[key];\n                const { icon, description } = o.meta;\n                if (staticMethodOnly) {\n                    if ((o as typeof StaticMethod)[ImportedStaticMethodObject]) {\n                        items.push({ key, icon, description });\n                    }\n                } else {\n                    items.push({ key, icon, description });\n                }\n            }\n        }\n        return items;\n    }\n    componentDidMount() {\n        this.setState({ items: DefaultUIDropdownObjects.getItems(this.props), $: -1 });\n    }\n    shouldComponentUpdate(nextProps: Readonly<DefaultUIDropdownObjectsProps>, nextState: Readonly<DefaultUIDropdownObjectsState>, context: any) {\n        if (nextProps.query !== this.props.query || nextProps.staticMethodOnly !== this.props.staticMethodOnly) {\n            this.setState({ items: DefaultUIDropdownObjects.getItems(nextProps), $: -1 });\n            return false;\n        }\n        if (nextState.$ !== this.state.$ || nextState.items !== this.state.items) return true;\n        return false;\n    }\n    render() {\n        return (\n            <div className=\"box-ui-text-dropdown\">\n                <table className=\"ui small inverted selectable striped unstackable very compact table box-ui-text-autocomplete\">\n                    <tbody ref={this.refTBody}>\n                        {this.state.items.map((option, i) => (\n                            <tr key={option.key} className={i === this.state.$ ? \"focused\" : \"\"} onMouseDown={e => this.props.onSelect(e, option.key)}>\n                                <td>{option.icon ? <Icon inverted={true} size=\"small\" name={option.icon} /> : undefined}</td>\n                                <td>{option.key}</td>\n                                <td>{option.description}</td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\ninterface DefaultUIDropdownArgvItem { key: string | number; type: THardwareMetaType; optional?: boolean; varLength?: boolean; description: string }\ninterface DefaultUIDropdownArgvProps { obj: typeof IHardwarePatcherObject; argv: string[]; onSelect: (e: React.MouseEvent<HTMLTableRowElement>, value: string | number) => void }\ninterface DefaultUIDropdownArgvState { $: number; items: DefaultUIDropdownArgvItem[] }\nclass DefaultUIDropdownArgv extends React.Component<DefaultUIDropdownArgvProps, DefaultUIDropdownArgvState> {\n    state: DefaultUIDropdownArgvState = { $: -1, items: [] };\n    refTBody = React.createRef<HTMLTableSectionElement>();\n    next() { }\n    prev() { }\n    get current() {\n        return this.state.items[this.state.$];\n    }\n    static getItems(propsIn: DefaultUIDropdownArgvProps) {\n        const { obj } = propsIn;\n        const { args, props } = obj.meta;\n        const items: DefaultUIDropdownArgvItem[] = [];\n        for (let i = 0; i < args.length; i++) {\n            const { type, optional, varLength, description } = args[i];\n            items.push({ key: i, type, optional, varLength, description });\n        }\n        Object.keys(props).reverse().forEach((key) => {\n            const { type, description } = props[key];\n            items.push({ key, type, description });\n        });\n        return items;\n    }\n    componentDidMount() {\n        this.setState({ items: DefaultUIDropdownArgv.getItems(this.props), $: -1 });\n    }\n    shouldComponentUpdate(nextProps: Readonly<DefaultUIDropdownArgvProps>, nextState: Readonly<DefaultUIDropdownArgvState>, context: any) {\n        if (nextProps.obj !== this.props.obj || nextProps.argv !== this.props.argv) {\n            this.setState({ items: DefaultUIDropdownArgv.getItems(nextProps), $: -1 });\n            return false;\n        }\n        if (nextState.$ !== this.state.$ || nextState.items !== this.state.items) return true;\n        return false;\n    }\n    render() {\n        return (\n            <div className=\"box-ui-text-dropdown\">\n                <table className=\"ui small inverted selectable striped unstackable very compact table box-ui-text-autocomplete\">\n                    <tbody ref={this.refTBody}>\n                        {this.state.items.map((option, i) => (\n                            <tr key={option.key} className={i === this.state.$ ? \"focused\" : \"\"} onMouseDown={e => this.props.onSelect(e, option.key)}>\n                                {\n                                    typeof option.key === \"number\"\n                                        ? <>\n                                            <td><Icon inverted={true} size=\"small\" name=\"ellipsis horizontal\" /></td>\n                                            <td>{option.optional ? `[${option.varLength ? \"...\" : \"\"}arg${option.key}]` : `${option.varLength ? \"...\" : \"\"}arg${option.key}`}</td>\n                                        </>\n                                        : <>\n                                            <td><Icon inverted={true} size=\"small\" name=\"at\" /></td>\n                                            <td>{option.key}</td>\n                                        </>\n                                }\n                                <td style={{ color: \"#30a0a0\" }}>{option.type}</td>\n                                <td>{option.description}</td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\nexport default class DefaultUI<T extends DefaultObject = DefaultObject, P extends Partial<DefaultUIProps> & Record<string, any> = {}, S extends Partial<DefaultUIState> & Record<string, any> = {}> extends BaseUI<T, P & DefaultUIProps<T>, S & DefaultUIState> {\n    static editableOnUnlock = true;\n    state: S & DefaultUIState = {\n        ...this.state,\n        text: this.box.text || \"\",\n        loading: false\n    };\n    refSpan = React.createRef<HTMLSpanElement>();\n    refDropdownObject = React.createRef<DefaultUIDropdownObjects>();\n    refDropdownArgv = React.createRef<DefaultUIDropdownArgv>();\n    componentDidMount() {\n        super.componentDidMount();\n        if (this.props.editing) this.toggleEdit(this.props.editing);\n    }\n    componentDidUpdate(prevProps: Readonly<P & DefaultUIProps>, prevState: Readonly<S & DefaultUIState>) {\n        if (this.props.editing !== prevProps.editing) this.toggleEdit(this.props.editing);\n    }\n    toggleEdit(toggle: boolean) {\n        const { patcher, box, editor } = this;\n        if (editor.state.locked) return;\n        if (!this.refSpan.current) return;\n        const span = this.refSpan.current;\n        if (toggle) {\n            editor.selectOnly(box.id);\n            this.setState({ text: span.textContent }, () => {\n                span.focus();\n                selectElementRange(span);\n            });\n        } else {\n            window.getSelection().removeAllRanges();\n            patcher.changeBoxText(box.id, span.textContent);\n            this.setState({ text: span.textContent });\n        }\n    }\n    handleMouseDown = (e: React.MouseEvent) => (this.props.editing ? e.stopPropagation() : null);\n    handleClick = (e: React.MouseEvent) => (this.props.editing ? e.stopPropagation() : null);\n    handleKeyDown = (e: React.KeyboardEvent) => { // propagate for parent for focus on boxUI\n        if (!this.props.editing) return;\n        if (e.key === \"Enter\") {\n            e.preventDefault();\n            if (this.refDropdownObject.current && this.refSpan.current) {\n                const { current } = this.refDropdownObject.current;\n                if (current) {\n                    const text = this.getApplied(current.key);\n                    this.refSpan.current.textContent = text;\n                    this.setState({ text });\n                    this.props.onContentsChanged();\n                }\n            }\n            return;\n        }\n        if (e.key === \"Tab\") {\n            if (this.refDropdownObject.current && this.refSpan.current) {\n                const span = this.refSpan.current;\n                const { current } = this.refDropdownObject.current;\n                if (current) {\n                    const text = this.getApplied(current.key);\n                    this.refSpan.current.textContent = text;\n                    selectElementPos(span, text.length);\n                    this.setState({ text });\n                    e.preventDefault();\n                    e.stopPropagation();\n                    e.nativeEvent.stopImmediatePropagation();\n                    this.props.onContentsChanged();\n                    return;\n                } else {\n                    const items = this.refDropdownObject.current.state.items;\n                    if (items.length) {\n                        const text = this.getApplied(items[0].key);\n                        this.refSpan.current.textContent = text;\n                        selectElementPos(span, text.length);\n                        this.setState({ text });\n                        e.preventDefault();\n                        e.stopPropagation();\n                        e.nativeEvent.stopImmediatePropagation();\n                        this.props.onContentsChanged();\n                        return;\n                    }\n                }\n            }\n        }\n        if (e.key === \" \") {\n            if (this.refDropdownObject.current && this.refSpan.current) {\n                const span = this.refSpan.current;\n                const { current } = this.refDropdownObject.current;\n                if (current) {\n                    const text = this.getApplied(current.key);\n                    this.refSpan.current.textContent = text;\n                    selectElementPos(span, text.length);\n                    this.setState({ text });\n                }\n            }\n        }\n        if (e.key === \"ArrowUp\" || e.key === \"ArrowDown\") {\n            e.preventDefault();\n            if (this.refDropdownObject.current) {\n                if (e.key === \"ArrowUp\") this.refDropdownObject.current.prev();\n                else if (e.key === \"ArrowDown\") this.refDropdownObject.current.next();\n            }\n        }\n        e.stopPropagation();\n        e.nativeEvent.stopImmediatePropagation();\n\n        if (e.key.length === 1 || e.key == \"Backspace\") {\n            this.props.onContentsChanged();\n        }\n    };\n    handleKeyUp = () => {\n        if (!this.refSpan.current) return;\n        if (this.refSpan.current.textContent === this.state.text) return;\n        this.setState({ text: this.refSpan.current.textContent });\n    };\n    get dropdownQuery() {\n        let { text } = this.state;\n        if (!this.props.editing || !text.length) return { Dropdown: undefined, query: undefined };\n        if (text.startsWith(\"new \")) text = text.slice(4);\n        else if (text.startsWith(\"func \")) text = text.slice(5);\n        const splitted = text.split(/\\s/);\n        if (splitted.length === 1) return { Dropdown: DefaultUIDropdownObjects, query: splitted[0] };\n        const [className, ...argv] = splitted;\n        const obj = this.patcher.activeLib[className];\n        if (!obj) return { Dropdown: undefined, query: undefined };\n        return { Dropdown: DefaultUIDropdownArgv, query: { obj, argv } };\n    }\n    getApplied(textIn: string) {\n        let { text } = this.state;\n        let keyword = \"\";\n        if (text.startsWith(\"new \")) {\n            keyword = \"new \";\n            text = text.slice(4);\n        } else if (text.startsWith(\"func \")) {\n            keyword = \"func \";\n            text = text.slice(5);\n        }\n        const splitted = text.split(/\\s/);\n        if (splitted.length === 1) {\n            return `${keyword}${textIn}`;\n        }\n        return textIn;\n    }\n    handlePaste = (e: React.ClipboardEvent) => {\n        e.preventDefault();\n        document.execCommand(\"insertHTML\", false, e.clipboardData.getData(\"text/plain\"));\n    };\n    handleSelect = (e: React.MouseEvent<HTMLTableRowElement>, textIn: string) => {\n        e.preventDefault();\n        if (this.refSpan.current) {\n            const span = this.refSpan.current;\n            const text = this.getApplied(textIn);\n            this.refSpan.current.textContent = text;\n            selectElementPos(span, text.length);\n            this.setState({ text });\n        }\n    };\n    render() {\n        const { object, dropdownQuery } = this;\n        const textContainerStyle: React.CSSProperties = {\n            borderColor: this.state.borderColor,\n            backgroundColor: this.state.bgColor\n        };\n        if (this.state.loading) {\n            const bgColor = Color(this.state.bgColor);\n            const gradIsWhite = bgColor.getLightness() < 0.5;\n            const gradColor = gradIsWhite ? bgColor.lightenByAmount(0.25) : bgColor.darkenByAmount(0.25);\n            textContainerStyle.backgroundImage = `linear-gradient(to right, ${this.state.bgColor} 0%, ${gradColor.toCSS()} 20%, ${this.state.bgColor} 40%, ${this.state.bgColor} 200%)`;\n        }\n        const spanStyle: React.CSSProperties = {\n            color: this.state.textColor,\n            fontFamily: `${this.state.fontFamily}, Tahoma, sans-serif`,\n            fontSize: this.state.fontSize,\n            fontWeight: this.state.fontWeight,\n            fontStyle: this.state.fontStyle,\n            textAlign: this.state.textAlign\n        };\n        const textContainerProps = { ...this.props.textContainerProps };\n        textContainerProps.style = { ...textContainerProps.style, ...textContainerStyle };\n        const spanProps = { ...this.props.spanProps };\n        spanProps.style = { ...spanProps.style, ...spanStyle };\n        const { Dropdown, query } = dropdownQuery;\n        return (\n            <BaseUI additionalClassName=\"box-ui-default\" {...this.props}>\n                <div className={\"box-ui-text-container\" + (this.state.loading ? \" loading\" : \"\")} {...textContainerProps}>\n                    <div className=\"box-ui-text-container-prepend\" {...this.props.prependProps}>\n                        {object.meta.icon ? <Icon inverted={true} size=\"small\" name={object.meta.icon} /> : null}\n                    </div>\n                    <span contentEditable={this.props.editing} className={\"editable\" + (this.props.editing ? \" editing\" : \"\")} ref={this.refSpan} onMouseDown={this.handleMouseDown} onClick={this.handleClick} onPaste={this.handlePaste} onKeyDown={this.handleKeyDown} onKeyUp={this.handleKeyUp} onBlur={this.props.onEditEnd} suppressContentEditableWarning={true} {...spanProps}>\n                        {object.box.text}\n                    </span>\n                    {\n                        Dropdown === DefaultUIDropdownObjects && typeof query === \"string\"\n                            ? <DefaultUIDropdownObjects lib={this.patcher.activeLib} query={query} onSelect={this.handleSelect} staticMethodOnly={this.state.text.startsWith(\"new \")} ref={this.refDropdownObject} />\n                            : Dropdown === DefaultUIDropdownArgv && typeof query === \"object\"\n                                ? <DefaultUIDropdownArgv obj={query.obj} argv={query.argv} onSelect={this.handleSelect} ref={this.refDropdownArgv} />\n                                : undefined\n                    }\n                    <div className=\"box-ui-text-container-append\" {...this.props.appendProps} />\n                </div>\n            </BaseUI>\n        );\n    }\n}\n","import DefaultObject from \"./DefaultHardwareObject\";\nimport type { IHardwarePatcherObjectMeta, IIoMeta } from \"./AbstractHardwareObject\";\nimport { BasePin, IoPosition } from \"../../types\";\n\nexport default class EmptyObject extends DefaultObject<{}, { editing: boolean }, [any], [any]> {\n    static author = \"Corvus Prudens\";\n    static version = \"1.0.0\";\n    static description = \"Bypass input\";\n    static ios: IHardwarePatcherObjectMeta[\"ios\"] = [\n        ...Array.from({length: 4}, (_, i) => ({\n            isHot: true,\n            pin: { pinName: \"\", tie: true},\n            type: \"anything\",\n            description: \"output same thing\"\n        } as IIoMeta)),\n    ];\n    state = { editing: false };\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.ios = [\n                ...['T', 'B', 'L', 'R'].map(edge => ({\n                    edge,\n                    position: 0.5,\n                } as IoPosition))\n            ]\n        });\n        // this.on(\"inlet\", ({ data }) => this.outlet(0, data));\n    }\n}\n","import type PersistentProjectFile from \"../../../file/PersistentProjectFile\";\nimport type PatcherImage from \"../../../image/PatcherImage\";\nimport type { IArgsMeta, IIosMeta, IPropsMeta } from \"./AbstractHardwareObject\";\nimport UIObject from \"./UIObject\";\nimport ImgUI, { ImgUIState } from \"./ImageObjectUI\";\n\ninterface IS {\n    key: string;\n    image: PatcherImage;\n    file: PersistentProjectFile;\n    url: string;\n    element: HTMLImageElement;\n    scale: number;\n}\n\nexport interface ImgProps {\n    scroll: boolean;\n    objectFit: \"fill\" | \"cover\" | \"contain\" | \"none\" | \"scale-down\";\n    objectPosition: string;\n    opacity: number;\n}\n\nasync function getImageDimensions(url: string): Promise<{ width: number, height: number }> {\n    return new Promise((resolve, reject) => {\n        const img = new Image();\n        img.onload = () => {\n            resolve({ width: img.width, height: img.height });\n        };\n        img.onerror = () => {\n            reject(new Error(`Could not load image at ${url}`));\n        };\n        img.src = url;\n    });\n}\n\nexport default class ImageObject<\n    D extends {} = {},\n    S extends {} = {},\n    IO extends any[] = any[],\n    I extends any[] = any[],\n    O extends any[] = any[],\n    A extends [HTMLImageElement] & any[] = [HTMLImageElement],\n    P extends Record<string, any> = {},\n    U extends ImgUIState & any = ImgUIState,\n    E extends {} = {}\n> extends UIObject<D, S, IO, I, O, A, P, U, E> {\n\n    static description = \"Display an image\";\n    // static inlets: IIosMeta = [{\n    //     isHot: true,\n    //     type: \"anything\",\n    //     description: \"Image file name or url\"\n    // }];\n    // static args: IArgsMeta = [{\n    //     type: \"string\",\n    //     optional: true,\n    //     description: \"Image file name or url\"\n    // }];\n    // static props: IPropsMeta<ImgProps> = {\n    //     scroll: {\n    //         type: \"boolean\",\n    //         default: false,\n    //         description: \"Allow overflow-scroll\",\n    //         isUIState: true\n    //     },\n    //     objectFit: {\n    //         type: \"enum\",\n    //         enums: [\"fill\", \"cover\", \"contain\", \"none\", \"scale-down\"],\n    //         default: \"contain\",\n    //         description: \"CSS object-fit property\",\n    //         isUIState: true\n    //     },\n    //     objectPosition: {\n    //         type: \"string\",\n    //         default: \"50% 50%\",\n    //         description: 'CSS object-position property, for example \"50% 50%\" or \"left top\"',\n    //         isUIState: true\n    //     },\n    //     opacity: {\n    //         type: \"number\",\n    //         default: 1,\n    //         description: \"Opacity of the image (0-1)\",\n    //         isUIState: true\n    //     }\n    // };\n    static UI = ImgUI;\n    _: IS = { key: this.box.args[0]?.toString(), image: undefined, file: undefined, url: \"\", element: undefined, scale: 1.0 };\n    subscribe() {\n        super.subscribe();\n        const handleFilePathChanged = () => {\n            this._.key = this._.file?.projectPath;\n        };\n        const subscribeItem = async () => {\n            const { image, file } = this._;\n            if (image) await image.addObserver(this);\n            if (file) {\n                file.on(\"destroyed\", reload);\n                file.on(\"nameChanged\", handleFilePathChanged);\n                file.on(\"pathChanged\", handleFilePathChanged);\n            }\n        };\n        const unsubscribeItem = async () => {\n            const { image, file } = this._;\n            if (file) {\n                file.off(\"destroyed\", reload);\n                file.off(\"nameChanged\", handleFilePathChanged);\n                file.off(\"pathChanged\", handleFilePathChanged);\n            }\n            if (image) await image.removeObserver(this);\n        };\n        const reload = async () => {\n            await unsubscribeItem();\n            const { key } = this._;\n            let image: PatcherImage;\n            let url: string;\n            try {\n                const { item } = await this.getSharedItem(key, \"image\");\n                image = await item.instantiate({ env: this.patcher.env, project: this.patcher.project }) as PatcherImage;\n                this._.image = image;\n                this._.file = item;\n                url = image.objectURL;\n            } catch {\n                url = key;\n            } finally {\n                this._.url = url;\n                this.updateUI({ url });\n                await subscribeItem();\n            }\n        };\n        // this.on(\"preInit\", () => {\n        //     this.ios = [{ edge: 'T', position: 0.5 }];\n        // });\n        this.on(\"postInit\", async () => {\n            await reload();\n            // console.log(this._.url);\n            const { width, height } = await getImageDimensions(this._.url);\n            this.box.setHeight(height * this._.scale || 100);\n            this.box.setWidth(width * this._.scale || 100);\n            this.patcher.changeIO();\n        });\n        // this.on(\"updateArgs\", (args) => {\n        //     if (typeof args[0] === \"string\") {\n        //         const oldKey = this._.key;\n        //         const key = args[0]?.toString();\n        //         this._.key = key;\n        //         if (key !== oldKey) reload();\n        //     }\n        // });\n        // this.on(\"inlet\", async ({ data, inlet }) => {\n        //     if (inlet === 0) {\n        //         if (isBang(data)) {\n        //             this.outlet(0, this._.element);\n        //         } else if (typeof data === \"string\") {\n        //             this._.key = data;\n        //             reload();\n        //         } else if (typeof data === \"object\" && data instanceof HTMLImageElement) {\n        //             this._.key = data.src;\n        //             reload();\n        //         }\n        //     }\n        // });\n        this.on(\"destroy\", () => { unsubscribeItem(); this.patcher.changeIO(); });\n    }\n}\n","import * as React from \"react\";\nimport type { BaseUIState } from \"./BaseHardwareUI\";\nimport BaseUI from \"./BaseHardwareUI\";\nimport type img from \"./ImageObject\";\nimport type { ImgProps } from \"./ImageObject\";\n\nexport interface ImgUIState extends ImgProps {\n    url: string;\n}\nexport default class ImgUI extends BaseUI<img, ImgProps, ImgUIState> {\n    static sizing: \"horizontal\" | \"vertical\" | \"both\" | \"ratio\" = \"both\";\n    static defaultSize: [number, number] = [210, 90];\n    state: ImgUIState & BaseUIState = { ...this.state, url: this.object._.url };\n    imgRef = React.createRef<HTMLImageElement>();\n    handleLoadedMetadata = () => this.object.outlet(0, this.imgRef.current);\n    componentDidMount() {\n        super.componentDidMount();\n        const image = this.imgRef.current;\n        if (image) {\n            this.object._.element = image;\n            this.object.outlet(0, image);\n            image.addEventListener(\"loadedmetadata\", this.handleLoadedMetadata);\n        }\n    }\n    componentWillUnmount() {\n        super.componentWillUnmount();\n        this.imgRef.current?.removeEventListener(\"loadedmetadata\", this.handleLoadedMetadata);\n    }\n    render() {\n        const { objectFit, objectPosition, scroll, opacity } = this.state;\n        return (\n            <BaseUI {...this.props}>\n                <div style={{ position: \"absolute\", width: \"100%\", height: \"100%\", display: \"block\", overflow: \"auto\" }}>\n                    <img ref={this.imgRef} src={this.state.url} style={{ position: \"absolute\", ...(scroll ? {} : { width: \"100%\", height: \"100%\" }), objectFit, objectPosition, opacity }} />\n                </div>\n            </BaseUI>\n        );\n    }\n}\n","import DefaultObject from \"./DefaultHardwareObject\";\nimport type { IHardwarePatcherObjectMeta } from \"./AbstractHardwareObject\";\nimport \"./InvalidObject.scss\";\n\nexport default class InvalidObject extends DefaultObject<{}, {}, [any], [undefined]> {\n    static description = \"invalid object\";\n    static inlets: IHardwarePatcherObjectMeta[\"ios\"] = [{\n        isHot: false,\n        type: \"anything\",\n        varLength: true,\n        description: \"nothing\"\n    }];\n    static props: IHardwarePatcherObjectMeta[\"props\"] = {\n        bgColor: {\n            type: \"color\",\n            default: \"rgb(128, 64, 64)\",\n            description: \"Background color\",\n            isUIState: true\n        }\n    };\n    subscribe() {\n        this.patcher.on(\"libChanged\", () => this.box.changeText(this.box.text, true));\n    }\n}\n","import BaseHardwareObject from \"./BaseHardwareObject\";\n\nexport default class UIObject<\n    D = {},\n    S = {},\n    IO extends any[] = any[],\n    I extends any[] = any[],\n    O extends any[] = any[],\n    A extends any[] = any[],\n    P = {},\n    U = {},\n    E = {}\n> extends BaseHardwareObject<D, S, IO, I, O, A, P, U, E> {\n    static author = \"Corvus Prudens\";\n    static version = \"v1.0.0\";\n    static description = \"Basic UI object\";\n}\n","import { IOutletsMeta } from \"../../../objects/base/AbstractObject\";\nimport type { IIosMeta, THardwareMetaType } from \"../base/AbstractHardwareObject\";\nimport ImageObject from \"../base/ImageObject\";\n\nexport default class Gpi extends ImageObject<{}, {}, any[], any[], []> {\n    static author = \"Corvus Prudens\";\n    static version = \"v1.1.0\";\n    static description = \"GPIO input\";\n    static ios: IIosMeta = [\n        {\n            pin: { pinName: \"gpio\", digitalOutput: true },\n            type: \"anything\",\n            description: \"GPIO pin\",\n        },\n        {\n            pin: { pinName: \"gpio\", digitalOutput: true },\n            type: \"anything\",\n            description: \"GPIO pin\",\n        }\n    ];\n\n    static patcherOutlets: IOutletsMeta = [\n        {\n            type: \"number\",\n            description: \"Get GPIO input\"\n        }\n    ];\n\n    subscribe() {\n        super.subscribe();\n\n        this.on(\"preInit\", () => {\n            this.ios = [\n                {\n                    edge: 'L',\n                    position: 0.5,\n                },\n                {\n                    edge: 'R',\n                    position: 0.5,\n                }\n            ]\n            this._.key = \"https://cdn.discordapp.com/attachments/1049762470694223903/1111057050366132224/pulse.png\";\n            this._.scale = 0.05;\n        });\n    }\n}\n","import { IInletsMeta } from \"../../../objects/base/AbstractObject\";\nimport type { IIosMeta, THardwareMetaType } from \"../base/AbstractHardwareObject\";\nimport ImageObject from \"../base/ImageObject\";\n\nexport default class Gpo extends ImageObject<{}, {}, any[], any[], []> {\n    static author = \"Corvus Prudens\";\n    static version = \"v1.1.0\";\n    static description = \"GPIO output\";\n    static ios: IIosMeta = [\n        {\n            pin: { pinName: \"gpio\", digitalOutput: true },\n            type: \"anything\",\n            description: \"GPIO pin\",\n        },\n        {\n            pin: { pinName: \"gpio\", digitalOutput: true },\n            type: \"anything\",\n            description: \"GPIO pin\",\n        }\n    ];\n\n    static patcherInlets: IInletsMeta = [\n        {\n            isHot: true,\n            type: \"number\",\n            description: \"Set GPIO output\"\n        }\n    ];\n\n    subscribe() {\n        super.subscribe();\n\n        this.on(\"preInit\", () => {\n            this.ios = [\n                {\n                    edge: 'L',\n                    position: 0.5,\n                },\n                {\n                    edge: 'R',\n                    position: 0.5,\n                }\n            ]\n            this._.key = \"https://cdn.discordapp.com/attachments/1049762470694223903/1111057050642960446/switch.png\";\n            this._.scale = 0.05;\n        });\n    }\n}\n","import Knob from \"./Knob\";\nimport Gpi from \"./Gpi\";\nimport Gpo from \"./Gpo\";\n\nexport default {\n    'knob': Knob,\n    'gpi': Gpi,\n    'gpo': Gpo,\n};\n","import { IInletsMeta, IOutletsMeta, TMetaType } from \"../../../objects/base/AbstractObject\";\nimport type { IIosMeta, IPropsMeta, THardwareMetaType } from \"../base/AbstractHardwareObject\";\nimport ImageObject from \"../base/ImageObject\";\n\nexport default class Knob extends ImageObject<{}, {}, any[], [], any[], [HTMLImageElement], Record<string, any>> {\n    static author = \"Corvus Prudens\";\n    static version = \"v1.0.0\";\n    static description = \"Unipolar Potentiometer\";\n    static ios: IIosMeta = [\n        {\n            pin: { pinName: \"signal\", analogOutput: true },\n            type: \"anything\",\n            description: \"knob signal\",\n        }\n    ];\n    static patcherOutlets: IOutletsMeta = [\n        {\n            type: \"number\",\n            description: \"Knob voltage\"\n        }\n    ];\n\n    static props: IPropsMeta = {\n        static_threshold: {\n            type: \"number\",\n            default: 0.01,\n            description: \"Threshold beyond which the knob is considered to be moving at rest\",\n            alwaysSerialize: true,\n        },\n        dynamic_threshold: {\n            type: \"number\",\n            default: 0.001,\n            description: \"Threshold beyond which the knob remains active while moving\",\n            alwaysSerialize: true,\n        },\n        timeout: {\n            type: \"number\",\n            default: 500,\n            description: \"Timeout in ms after which the knob is considered to be at rest\",\n            alwaysSerialize: true,\n        }\n    };\n\n    subscribe() {\n        super.subscribe();\n\n        this.on(\"preInit\", () => {\n            this.ios = [\n                {\n                    edge: 'B',\n                    position: 0.5,\n                }\n            ]\n            this._.key = \"https://cdn.discordapp.com/attachments/1049762470694223903/1111059092342063215/knob.png\";\n            this._.scale = 0.066;\n        });\n    }\n}\n","import { IInletsMeta, IOutletsMeta } from \"../../../objects/base/AbstractObject\";\nimport { BasePin } from \"../../types\";\nimport type { IIosMeta, THardwareMetaType } from \"../base/AbstractHardwareObject\";\nimport ImageObject from \"../base/ImageObject\";\n\n\nconst DaisyPins = [\n    {\n        pinName: \"D0\",\n        digitalInput: true,\n        digitalOutput: true,\n        pwmOutput: true,\n        busCapabilities: {\n            \"USB_HS\": { usb: true, id: true, dplus: false, dminus: false },\n            \"UART5\": { usart: true, rx: true, tx: false },\n            \"USART3\": { usart: true, cts: false, rts: false, tx: false, rx: false, ck: true },\n        }\n    },\n    {\n        pinName: \"D1\",\n        digitalInput: true,\n        digitalOutput: true,\n        busCapabilities: {\n            \"SDMMC1\": { sdmmc: true, cmd: false, clk: false, dat0: false, dat1: false, dat2: false, dat3: true },\n            \"USART3\": { usart: true, rx: true, tx: false },\n            \"UART4\": { usart: true, rx: true, tx: false },\n            \"SPI3\": { spi: true, miso: true, mosi: false, sck: false, ss: false },\n            \"I2S3\": { i2s: true, sd: true, ws: false, sck: false },\n        }\n    },\n    {\n        pinName: \"D2\",\n        digitalInput: true,\n        digitalOutput: true,\n        busCapabilities: {\n            \"SDMMC1\": { sdmmc: true, cmd: false, clk: false, dat0: false, dat1: false, dat2: true, dat3: false },\n            \"USART3\": { usart: true, rx: false, tx: true },\n            \"UART4\": { usart: true, rx: false, tx: true },\n            \"SPI3\": { spi: true, miso: false, mosi: false, sck: true, ss: false },\n            \"I2S3\": { i2s: true, sd: false, ws: false, sck: true },\n        }\n    },\n    {\n        pinName: \"D3\",\n        digitalInput: true,\n        digitalOutput: true,\n        busCapabilities: {\n            \"SDMMC1\": { sdmmc: true, cmd: false, clk: false, dat0: false, dat1: true, dat2: false, dat3: false },\n            \"UART5\": { usart: true, rx: false, tx: false, cts: true, rts: false },\n            \"I2S\": { i2s: true, sd: false, ws: false, sck: false },\n        }\n    },\n    {\n        pinName: \"D4\",\n        digitalInput: true,\n        digitalOutput: true,\n        busCapabilities: {\n            \"SDMMC1\": { sdmmc: true, cmd: false, clk: false, dat0: true, dat1: false, dat2: false, dat3: false },\n            \"UART5\": { usart: true, rx: false, tx: false, cts: false, rts: true },\n        }\n    },\n    {\n        pinName: \"D5\",\n        digitalInput: true,\n        digitalOutput: true,\n        busCapabilities: {\n            \"SDMMC1\": { sdmmc: true, cmd: true, clk: false, dat0: false, dat1: false, dat2: false, dat3: false },\n            \"UART5\": { usart: true, rx: true, tx: false },\n        }\n    },\n    {\n        pinName: \"D6\",\n        digitalInput: true,\n        digitalOutput: true,\n        busCapabilities: {\n            \"SDMMC1\": { sdmmc: true, cmd: false, clk: true, dat0: false, dat1: false, dat2: false, dat3: false },\n            \"UART5\": { usart: true, rx: false, tx: true },\n            \"USART3\": { usart: true, rx: false, tx: false, cts: false, rts: false, ck: true },\n            \"SPI3\": { spi: true, miso: false, mosi: true, sck: false, ss: false },\n            \"I2S3\": { i2s: true, sd: true, ws: false, sck: false },\n        }\n    },\n    {\n        pinName: \"D7\",\n        digitalInput: true,\n        digitalOutput: true,\n        busCapabilities: {\n            \"SPI1\": { spi: true, miso: false, mosi: false, sck: false, ss: true },\n            \"I2S1\": { i2s: true, sd: false, ws: true, sck: false },\n        }\n    },\n    {\n        pinName: \"D8\",\n        digitalInput: true,\n        digitalOutput: true,\n        busCapabilities: {\n            \"SPI1\": { spi: true, miso: false, mosi: false, sck: true, ss: false },\n            \"I2S1\": { i2s: true, sd: false, ws: false, sck: true },\n        }\n    },\n    {\n        pinName: \"D9\",\n        digitalInput: true,\n        digitalOutput: true,\n        busCapabilities: {\n            \"SPI1\": { spi: true, miso: true, mosi: false, sck: false, ss: false },\n            \"UART7\": { usart: true, rx: false, tx: true },\n            \"SPI3\": { spi: true, miso: true, mosi: false, sck: false, ss: false },\n            \"I2S1\": { i2s: true, sd: true, ws: false, sck: false },\n            \"SPI6\": { spi: true, miso: true, mosi: false, sck: false, ss: false },\n        }\n    },\n    {\n        pinName: \"D10\",\n        digitalInput: true,\n        digitalOutput: true,\n        busCapabilities: {\n            \"SPI1\": { spi: true, mosi: true },\n            \"UART5\": { usart: true, rx: true },\n            \"I2S1\": { i2s: true, sd: true },\n            \"SPI3\": { spi: true, mosi: true },\n            \"I2S3\": { i2s: true, sd: true },\n            \"SPI6\": { spi: true, mosi: true },\n            \"I2C4\": { i2c: true, sda: true }\n        }\n    },\n    {\n        pinName: \"D11\",\n        digitalInput: true,\n        digitalOutput: true,\n        busCapabilities: {\n            \"I2C1\": { i2c: true, scl: true },\n            \"UART4\": { usart: true, rx: true },\n            \"I2C4\": { i2c: true, scl: true }\n        }\n    },\n    {\n        pinName: \"D12\",\n        digitalInput: true,\n        digitalOutput: true,\n        busCapabilities: {\n            \"I2C1\": { i2c: true, sda: true },\n            \"UART4\": { usart: true, tx: true },\n            \"SPI2\": { spi: true, ss: true },\n            \"I2S2\": { i2s: true, ws: true },\n            \"I2C4\": { i2c: true, sda: true }\n        }\n    },\n    {\n        pinName: \"D13\",\n        digitalInput: true,\n        digitalOutput: true,\n        busCapabilities: {\n            \"USART1\": { usart: true, tx: true },\n            \"LPUART1\": { usart: true, tx: true },\n            \"UART5\": { usart: true, tx: true },\n            \"I2C1\": { i2c: true, scl: true },\n            \"I2C4\": { i2c: true, scl: true }\n        }\n    },\n    {\n        pinName: \"D14\",\n        digitalInput: true,\n        digitalOutput: true,\n        busCapabilities: {\n            \"USART1\": { usart: true, rx: true },\n            \"LPUART1\": { usart: true, rx: true },\n            \"I2C1\": { i2c: true, sda: true },\n            \"I2C4\": { i2c: true, sda: true }\n        }\n    },\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    {\n        pinName: \"A0\",\n        digitalInput: true,\n        digitalOutput: true,\n        analogInput: true\n    },\n    {\n        pinName: \"A1\",\n        digitalInput: true,\n        digitalOutput: true,\n        analogInput: true,\n        busCapabilities: {\n            \"USART2\": { usart: true, rx: true }\n        }\n    },\n    {\n        pinName: \"A2\",\n        digitalInput: true,\n        digitalOutput: true,\n        analogInput: true\n    },\n    {\n        pinName: \"A3\",\n        digitalInput: true,\n        digitalOutput: true,\n        analogInput: true,\n        busCapabilities: {\n            \"SPI1\": { spi: true, mosi: true },\n            \"I2S1\": { i2s: true, sd: true },\n            \"SPI6\": { spi: true, mosi: true }\n        }\n    },\n    {\n        pinName: \"A4\",\n        digitalInput: true,\n        digitalOutput: true,\n        analogInput: true,\n        busCapabilities: {\n            \"SPI1\": { spi: true, miso: true },\n            \"I2S1\": { i2s: true, sd: true },\n            \"SPI6\": { spi: true, miso: true }\n        }\n    },\n    {\n        pinName: \"A5\",\n        digitalInput: true,\n        digitalOutput: true,\n        analogInput: true\n    },\n    {\n        pinName: \"A6\",\n        digitalInput: true,\n        digitalOutput: true,\n        analogInput: true,\n        busCapabilities: {\n            \"I2S1\": { i2s: true, ws: false, sd: false, sck: true }\n        }\n    },\n    {\n        pinName: \"A7\",\n        digitalInput: true,\n        digitalOutput: true,\n        analogInput: true,\n        busCapabilities: {\n            \"SPI1\": { spi: true, mosi: false, miso: false, sck: true, ss: false },\n            \"SPI6\": { spi: true, mosi: false, miso: false, sck: true, ss: false },\n            \"I2S1\": { i2s: true, ws: false, sd: false, sck: true }\n        }\n    },\n    {\n        pinName: \"A8\",\n        digitalInput: true,\n        digitalOutput: true,\n        analogInput: true,\n        busCapabilities: {\n            \"SPI1\": { spi: true, mosi: false, miso: false, sck: false, ss: true },\n            \"SPI3\": { spi: true, mosi: false, miso: false, sck: false, ss: true },\n            \"SPI6\": { spi: true, mosi: false, miso: false, sck: false, ss: true },\n            \"I2S1\": { i2s: true, ws: true, sd: false, sck: false },\n            \"I2S3\": { i2s: true, ws: true, sd: false, sck: false }\n        }\n    },\n    {\n        pinName: \"A9\",\n        digitalInput: true,\n        digitalOutput: true,\n        analogInput: true,\n        busCapabilities: {\n            \"UART4\": { usart: true, rx: true, tx: false }\n        }\n    },\n    {\n        pinName: \"A10\",\n        digitalInput: true,\n        digitalOutput: true,\n        analogInput: true,\n        busCapabilities: {\n            \"UART4\": { usart: true, rx: false, tx: true }\n        }\n    },\n    {\n        pinName: \"D26\",\n        digitalInput: true,\n        digitalOutput: true,\n        busCapabilities: {\n            \"I2C4\": { i2c: true, sda: false, scl: false }\n        }\n    },\n    {\n        pinName: \"D27\",\n        digitalInput: true,\n        digitalOutput: true,\n        busCapabilities: {\n            \"SAI2\": { i2s: true, ws: false, sd: false, sck: false },\n            \"USART6\": { usart: true, rx: true, tx: false },\n            \"SPI1\": { spi: true, mosi: false, miso: true, sck: false, ss: false },\n            \"I2S1\": { i2s: true, ws: false, sd: true, sck: false }\n        }\n    },\n    {\n        pinName: \"A11\",\n        digitalInput: true,\n        digitalOutput: true,\n        analogInput: true,\n        busCapabilities: {\n            \"USART2\": { usart: true, rx: false, tx: true }\n        }\n    },\n    {\n        pinName: \"D29\",\n        digitalInput: true,\n        digitalOutput: true,\n        busCapabilities: {\n            \"USB_HS\": { usb: true, dplus: false, dminus: true },\n            \"USART1\": { usart: true, rx: false, tx: true }\n        }\n    },\n    {\n        pinName: \"D30\",\n        digitalInput: true,\n        digitalOutput: true,\n        busCapabilities: {\n            \"USB_HS\": { usb: true, dplus: true, dminus: false },\n            \"USART1\": { usart: true, rx: true, tx: false }\n        }\n    },\n    null,\n    null,\n    null,\n]\n\nexport class DaisySeed extends ImageObject<{}, {}, any[], any[], any[]> {\n    static author = \"Corvus Prudens\";\n    static version = \"v1.0.0\";\n    static description = \"Daisy Seed SOM\";\n    static ios: IIosMeta = [\n        ...DaisyPins.filter(pin => pin != null).map(pin => ({\n            type: \"anything\",\n            description: `Pin ${pin.pinName}`,\n            pin\n        }))\n    ];\n\n    static patcherInlets: IInletsMeta = [\n        {\n            isHot: true,\n            type: \"signal\",\n            description: \"Audio DAC left\"\n        },\n        {\n            isHot: true,\n            type: \"signal\",\n            description: \"Audio DAC right\"\n        },\n        {\n            isHot: false,\n            type: \"number\",\n            description: \"Set on-board LED\",\n        }\n    ];\n\n    static patcherOutlets: IOutletsMeta = [\n        {\n            type: \"signal\",\n            description: \"Audio ADC left\"\n        },\n        {\n            type: \"signal\",\n            description: \"Audio ADC right\"\n        }\n    ]\n\n    subscribe() {\n        super.subscribe();\n\n        this.on(\"preInit\", () => {\n\n            const spacing = 1.0 / 20.8;\n            const offset = 0.6 * spacing;\n\n            const right = [];\n            for (let i = 0; i < 20; i++) {\n                if (DaisyPins[i] != null) {\n                    right.push({\n                        edge: \"R\" as any,\n                        position: offset + spacing * (19 - i)\n                    });\n                }\n            }\n\n            const left = [];\n            for (let i = 0; i < 20; i++) {\n                if (DaisyPins[20 + i] != null) {\n                    left.push({\n                        edge: \"L\" as any,\n                        position: offset + spacing * i\n                    });\n                }\n            }\n\n            this.ios = [\n                ...right,\n                ...left,\n            ]\n            this._.key = \"https://cdn.discordapp.com/attachments/1049762470694223903/1111025669544095806/Daisy_Seed_illustrated_top.png\";\n            this._.scale = 0.28;\n        });\n    }\n}\n","import { DaisySeed } from \"./DaisySeed\";\n\nexport default {\n    'seed': DaisySeed,\n};\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js!./DefaultHardwareUI.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js!./DefaultHardwareUI.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js!./InvalidObject.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js!./InvalidObject.scss\";\n       export default content && content.locals ? content.locals : undefined;\n"],"names":["e","_a"],"sourceRoot":""}