{"version":3,"sources":["webpack://JSPatcher/./src/core/objects/Std.tsx"],"names":["StdObject","DefaultObject","print","title","subscribe","on","inlets","outlets","args","state","data","inlet","isBang","patcher","newLog","box","Util","isHot","type","description","optional","default","bang","outlet","Bang","loadbang","unloadbang","For","start","end","step","times","isFinite","error","i","ForIn","buffer","key","outletAll","gate","pass","set","undefined","value","e","message","get","keys","slice","length","resetIO","varLength","If","sel","array","testsCount","inletMeta0","inletMeta1","meta","outletMeta0","outletMeta1","foundIndex","indexOf","v","SharedDataNoValue","sharedDataKey","reload","sharedData","unsubscribe","shared","toString","lambda","argsCount","result","delay","time","ref","Set","add","window","setTimeout","forEach","clearTimeout","call","instance","inputs","initialInlets","initialOutlets","Math","max","getProp","props","execute","output","m","Promise","loading","then","r","callback","updateUI","sync","thispatcher","for","if"],"mappings":"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","file":"js/a447ca95fbbc2d4f10ab.js","sourcesContent":["import * as Util from \"util\";\nimport Patcher from \"../patcher/Patcher\";\nimport { DefaultObject, Bang, isBang } from \"./Base\";\nimport { TMeta } from \"../types\";\nimport { SharedDataNoValue } from \"../../utils/symbols\";\n\nclass StdObject<D = {}, S = {}, I extends any[] = any[], O extends any[] = any[], A extends any[] = any[], P = {}, U = {}> extends DefaultObject<D, S, I, O, A, P, U> {\n    static package = \"Std\";\n    static author = \"Fr0stbyteR\";\n    static version = \"1.0.0\";\n    static description = \"Standard Objects\";\n}\n\nclass print extends StdObject<{}, { title: string }, [any], [], [string]> {\n    static description = \"Print to console\";\n    static inlets: TMeta[\"inlets\"] = [{\n        isHot: true,\n        type: \"anything\",\n        description: \"Anything to stringify\"\n    }];\n    static args: TMeta[\"args\"] = [{\n        type: \"string\",\n        optional: true,\n        default: \"Print\",\n        description: \"Title\"\n    }];\n    state = { title: \"Print\" };\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 1;\n            this.outlets = 0;\n        });\n        this.on(\"updateArgs\", (args) => {\n            if (typeof args[0] !== \"undefined\") this.state.title = args[0];\n        });\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) {\n                if (isBang(data)) {\n                    this.patcher.newLog(\"none\", this.state.title, \"Bang\", this.box);\n                } else {\n                    this.patcher.newLog(\"none\", this.state.title, typeof data === \"string\" ? data : Util.inspect(data), this.box);\n                }\n            }\n        });\n    }\n}\nclass bang extends StdObject<{}, {}, [any], [Bang], []> {\n    static description = \"Transform to bang\";\n    static inlets: TMeta[\"inlets\"] = [{\n        isHot: true,\n        type: \"anything\",\n        description: \"Anything to transform to a bang\"\n    }];\n    static outlets: TMeta[\"outlets\"] = [{\n        type: \"bang\",\n        description: \"Bang when inlet\"\n    }];\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 1;\n            this.outlets = 1;\n        });\n        this.on(\"inlet\", ({ inlet }) => {\n            if (inlet === 0) this.outlet(0, new Bang());\n        });\n    }\n}\nclass loadbang extends StdObject<{}, {}, [], [Bang], []> {\n    static description = \"Bang when patcher is loaded\";\n    static inlets: TMeta[\"inlets\"] = [{\n        isHot: true,\n        type: \"anything\",\n        description: \"Anything to transform to a bang\"\n    }];\n    static outlets: TMeta[\"outlets\"] = [{\n        type: \"bang\",\n        description: \"Bang when inlet\"\n    }];\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 1;\n            this.outlets = 1;\n            this.patcher.on(\"postInited\", () => this.outlet(0, new Bang()));\n        });\n    }\n}\nclass unloadbang extends StdObject<{}, {}, [], [Bang], []> {\n    static description = \"Bang when patcher will be unloaded\";\n    static inlets: TMeta[\"inlets\"] = [{\n        isHot: true,\n        type: \"anything\",\n        description: \"Anything to transform to a bang\"\n    }];\n    static outlets: TMeta[\"outlets\"] = [{\n        type: \"bang\",\n        description: \"Bang when inlet\"\n    }];\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 1;\n            this.outlets = 1;\n            this.patcher.on(\"unload\", () => this.outlet(0, new Bang()));\n        });\n    }\n}\nclass For extends StdObject<{}, { start: number; end: number; step: number }, [Bang, number, number, number], [Bang, number], [number, number, number?]> {\n    static description = \"Number iterator\";\n    static inlets: TMeta[\"inlets\"] = [{\n        isHot: true,\n        type: \"bang\",\n        description: \"Do iterations\"\n    }, {\n        isHot: false,\n        type: \"number\",\n        description: \"Set the starting point\"\n    }, {\n        isHot: false,\n        type: \"number\",\n        description: \"Set the end point (excluded)\"\n    }, {\n        isHot: false,\n        type: \"number\",\n        description: \"Set the step\"\n    }];\n    static outlets: TMeta[\"outlets\"] = [{\n        type: \"bang\",\n        description: \"Bang when finished\"\n    }, {\n        type: \"number\",\n        description: \"Output all iterations one by one\"\n    }];\n    static args: TMeta[\"args\"] = [{\n        type: \"number\",\n        optional: false,\n        description: \"The starting point\"\n    }, {\n        type: \"number\",\n        optional: false,\n        description: \"The end point (excluded)\"\n    }, {\n        type: \"number\",\n        optional: true,\n        default: 1,\n        description: \"The step\"\n    }];\n    state = { start: 0, end: 0, step: 1 };\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 4;\n            this.outlets = 2;\n        });\n        this.on(\"updateArgs\", (args) => {\n            this.state.start = +args[0] || 0;\n            this.state.end = +args[1] || 0;\n            this.state.step = +args[2] || 1;\n        });\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) {\n                if (isBang(data)) {\n                    const { start, end, step } = this.state;\n                    const times = (end - start) / step;\n                    if (!isFinite(times) || times < 0) {\n                        this.error(`Infinite loop from ${start} to ${end} with step ${step}.`);\n                        return;\n                    }\n                    for (let i = start; i < end; i += step) {\n                        this.outlet(1, i);\n                    }\n                    this.outlet(0, new Bang());\n                }\n            } else if (inlet === 1) this.state.start = +data;\n            else if (inlet === 2) this.state.end = +data;\n            else if (inlet === 3) this.state.step = +data;\n        });\n    }\n}\nclass ForIn extends StdObject<{}, { buffer: any }, [any, any], [Bang, string | number | symbol, any], [Record<string, any>]> {\n    static description = \"Object key-value iterator\";\n    static inlets: TMeta[\"inlets\"] = [{\n        isHot: true,\n        type: \"anything\",\n        description: \"Iterate input, bang to redo\"\n    }, {\n        isHot: false,\n        type: \"object\",\n        description: \"Set the iteration object\"\n    }];\n    static outlets: TMeta[\"outlets\"] = [{\n        type: \"bang\",\n        description: \"Bang when finished\"\n    }, {\n        type: \"anything\",\n        description: \"Key\"\n    }, {\n        type: \"anything\",\n        description: \"Value\"\n    }];\n    static args: TMeta[\"args\"] = [{\n        type: \"object\",\n        optional: true,\n        description: \"Initial object to iterate\"\n    }];\n    state = { buffer: null as any };\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 2;\n            this.outlets = 3;\n        });\n        this.on(\"updateArgs\", args => this.state.buffer = args[0]);\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) {\n                if (!isBang(data)) this.state.buffer = data;\n                for (const key in this.state.buffer) {\n                    this.outletAll([, key, this.state.buffer[key]]);\n                }\n                this.outlet(0, new Bang());\n            } else if (inlet === 1) {\n                this.state.buffer = data;\n            }\n        });\n    }\n}\nclass gate extends StdObject<{}, { pass: boolean }, [any, any], [any], [any]> {\n    static description = \"Bypass or block incoming data\";\n    static inlets: TMeta[\"inlets\"] = [{\n        isHot: true,\n        type: \"anything\",\n        description: \"Anything to bypass\"\n    }, {\n        isHot: false,\n        type: \"anything\",\n        description: \"Test, falsable to block\"\n    }];\n    static outlets: TMeta[\"outlets\"] = [{\n        type: \"anything\",\n        description: \"Anything bypass\"\n    }];\n    static args: TMeta[\"args\"] = [{\n        type: \"anything\",\n        optional: true,\n        default: true,\n        description: \"default state\"\n    }];\n    state = { pass: true };\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 2;\n            this.outlets = 1;\n        });\n        this.on(\"updateArgs\", (args) => {\n            this.state.pass = args[0] === \"undefined\" || args[0] === \"\" || !!args[0];\n        });\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) {\n                if (this.state.pass) this.outlet(0, data);\n            } else if (inlet === 1) {\n                this.state.pass = !!data;\n            }\n        });\n    }\n}\nclass set extends StdObject<{}, { key: string | number; value: any }, [Record<string, any> | any[], string | number, any], [Record<string, any> | any[]], [string | number, any]> {\n    static description = \"Set a property of incoming object\";\n    static inlets: TMeta[\"inlets\"] = [{\n        isHot: true,\n        type: \"object\",\n        description: \"Object to set a property\"\n    }, {\n        isHot: false,\n        type: \"string\",\n        description: \"Key / name of the property\"\n    }, {\n        isHot: false,\n        type: \"anything\",\n        description: \"Value to set to the property\"\n    }];\n    static outlets: TMeta[\"outlets\"] = [{\n        type: \"anything\",\n        description: \"Object bypass\"\n    }];\n    static args: TMeta[\"args\"] = [{\n        type: \"anything\",\n        optional: false,\n        description: \"Initial key of the property\"\n    }, {\n        type: \"anything\",\n        optional: true,\n        default: undefined,\n        description: \"Initial value of the property\"\n    }];\n    state = { key: undefined as string | number, value: undefined as any };\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 3;\n            this.outlets = 1;\n        });\n        this.on(\"updateArgs\", (args) => {\n            if (typeof args[0] === \"string\" || typeof args[0] === \"number\") this.state.key = args[0];\n            if (typeof args[1] !== \"undefined\") this.state.value = args[1];\n        });\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) {\n                if (typeof this.state.key === \"string\" || typeof this.state.key === \"number\") {\n                    try {\n                        data[this.state.key] = this.state.value;\n                        this.outlet(0, data);\n                    } catch (e) {\n                        this.error((e as Error).message);\n                    }\n                } else {\n                    this.error(\"Key not defined\");\n                }\n            } else if (inlet === 1) {\n                if (typeof data === \"string\" || typeof data === \"number\") this.state.key = data;\n                else this.error(\"Key should be a number or a string\");\n            } else if (inlet === 2) {\n                this.state.value = data;\n            }\n        });\n    }\n}\nclass get extends StdObject<{}, { keys: (string | number)[] }, [Record<string, any> | any[], ...(string | number)[]], any[], (string | number)[]> {\n    static description = \"Get properties of incoming object\";\n    static inlets: TMeta[\"inlets\"] = [{\n        isHot: true,\n        type: \"object\",\n        description: \"Object to get a property\"\n    }, {\n        isHot: false,\n        type: \"string\",\n        varLength: true,\n        description: \"Key / name of the property\"\n    }];\n    static outlets: TMeta[\"outlets\"] = [{\n        type: \"anything\",\n        varLength: true,\n        description: \"Value got\"\n    }];\n    static args: TMeta[\"args\"] = [{\n        type: \"anything\",\n        optional: false,\n        varLength: true,\n        description: \"Initial key of the property\"\n    }];\n    state = { keys: [] as (string | number)[] };\n    resetIO = () => {\n        const { args } = this.box;\n        this.state.keys = args.slice();\n        this.inlets = 1 + args.length;\n        this.outlets = args.length;\n    };\n    subscribe() {\n        super.subscribe();\n        this.on(\"postInit\", this.resetIO);\n        this.on(\"updateArgs\", this.resetIO);\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) {\n                for (let i = this.state.keys.length - 1; i >= 0; i--) {\n                    const key = this.state.keys[i];\n                    if (typeof key === \"string\" || typeof key === \"number\") {\n                        try {\n                            this.outlet(i, (data as any)[key]);\n                        } catch (e) {\n                            this.error((e as Error).message);\n                        }\n                    }\n                }\n            } else {\n                if (typeof data === \"string\" || typeof data === \"number\") this.state.keys[inlet - 1] = data;\n                else this.error(\"Key should be a number or a string\");\n            }\n        });\n    }\n}\nclass If extends StdObject<{}, {}, [boolean], [Bang, Bang]> {\n    static description = \"Output a bang on true / false\";\n    static inlets: TMeta[\"inlets\"] = [{\n        isHot: true,\n        type: \"boolean\",\n        description: \"True for a bang to left outlet, false for right\"\n    }];\n    static outlets: TMeta[\"outlets\"] = [{\n        type: \"bang\",\n        description: \"True?\"\n    }, {\n        type: \"bang\",\n        description: \"False?\"\n    }];\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 1;\n            this.outlets = 2;\n        });\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) this.outlet(+!data, new Bang());\n        });\n    }\n}\nclass sel extends StdObject<{}, { array: any[] }, any[], (Bang | any)[], any[]> {\n    static description = \"Output a bang on a matched inlet\";\n    static inlets: TMeta[\"inlets\"] = [{\n        isHot: true,\n        type: \"anything\",\n        varLength: false,\n        description: \"Test for match\"\n    }, {\n        isHot: false,\n        type: \"anything\",\n        varLength: true,\n        description: \"Set value for match\"\n    }];\n    static outlets: TMeta[\"outlets\"] = [{\n        type: \"bang\",\n        varLength: false,\n        description: \"Bang if match\"\n    }, {\n        type: \"anything\",\n        varLength: false,\n        description: \"Bypass if not matched\"\n    }];\n    static args: TMeta[\"args\"] = [{\n        type: \"anything\",\n        optional: false,\n        varLength: true,\n        description: \"Initial value for match\"\n    }];\n    state = { array: [] as any[] };\n    resetIO = () => {\n        const { args } = this.box;\n        const testsCount = args.length;\n        const [inletMeta0, inletMeta1] = sel.meta.inlets;\n        const [outletMeta0, outletMeta1] = sel.meta.inlets;\n        const { meta } = this;\n        meta.inlets = [inletMeta0];\n        meta.outlets = [];\n        for (let i = 0; i < testsCount; i++) {\n            meta.outlets[i] = { ...outletMeta0 };\n            meta.outlets[i].description += ` index ${i}`;\n            meta.inlets[i + 1] = { ...inletMeta1 };\n            meta.inlets[i + 1].description += ` index ${i}`;\n        }\n        meta.outlets[testsCount] = outletMeta1;\n        this.meta = meta;\n        this.state.array = args.slice();\n        this.inlets = 1 + testsCount;\n        this.outlets = testsCount + 1;\n    };\n    subscribe() {\n        super.subscribe();\n        this.on(\"postInit\", this.resetIO);\n        this.on(\"updateArgs\", this.resetIO);\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) {\n                const foundIndex = this.state.array.indexOf(data);\n                if (foundIndex === -1) this.outlet(this.outlets - 1, data);\n                else this.outlet(foundIndex, new Bang());\n            } else {\n                this.state.array[inlet - 1] = data;\n            }\n        });\n    }\n}\nclass v extends StdObject<{}, { key: string; value: any }, [Bang | any, any, string | number], [any], [string | number, any]> {\n    static description = \"Store anything as named sharable variable\";\n    static inlets: TMeta[\"inlets\"] = [{\n        isHot: true,\n        type: \"anything\",\n        description: \"Bang to output stored value, anything to set the value then output it.\"\n    }, {\n        isHot: false,\n        type: \"anything\",\n        description: \"Anything to set the value.\"\n    }, {\n        isHot: false,\n        type: \"anything\",\n        description: \"Set variable name.\"\n    }];\n    static outlets: TMeta[\"outlets\"] = [{\n        type: \"anything\",\n        description: \"Value\"\n    }];\n    static args: TMeta[\"args\"] = [{\n        type: \"anything\",\n        optional: true,\n        description: \"Variable name\"\n    }, {\n        type: \"anything\",\n        optional: true,\n        description: \"Initial value\"\n    }];\n    state = { key: undefined as string, value: SharedDataNoValue as any };\n    subscribe() {\n        super.subscribe();\n        const sharedDataKey = \"_v\";\n        const reload = (key: string) => {\n            if (this.state.key) this.sharedData.unsubscribe(sharedDataKey, this.state.key, this);\n            const { args } = this.box;\n            this.state.key = key;\n            if (typeof args[1] !== \"undefined\") this.state.value = args[1];\n            if (key) {\n                const shared = this.sharedData.get(sharedDataKey, key);\n                if (shared !== SharedDataNoValue) this.state.value = shared;\n                else this.sharedData.set(sharedDataKey, key, this.state.value, this);\n                this.sharedData.subscribe(sharedDataKey, this.state.key, this);\n            }\n        };\n        this.on(\"preInit\", () => {\n            this.inlets = 3;\n            this.outlets = 1;\n        });\n        this.on(\"updateArgs\", (args) => {\n            const key = typeof args[0] === \"undefined\" ? args[0] : args[0].toString();\n            if (key !== this.state.key) {\n                reload(key);\n            } else {\n                if (typeof args[1] !== \"undefined\") {\n                    this.state.value = args[1];\n                    if (this.state.key) this.sharedData.set(sharedDataKey, this.state.key, this.state.value, this);\n                }\n            }\n        });\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) {\n                if (!isBang(data)) {\n                    this.state.value = data;\n                    if (this.state.key) this.sharedData.set(sharedDataKey, this.state.key, this.state.value, this);\n                }\n                this.outlet(0, this.state.value);\n            } else if (inlet === 1) {\n                this.state.value = data;\n                if (this.state.key) this.sharedData.set(sharedDataKey, this.state.key, this.state.value, this);\n            } else if (inlet === 2) {\n                if (typeof data === \"string\" || typeof data === \"number\") {\n                    const key = data.toString() || \"\";\n                    if (key !== this.state.key) {\n                        reload(key);\n                    }\n                }\n            }\n        });\n        this.on(\"sharedDataUpdated\", ({ data }) => this.state.value = data);\n        this.on(\"destroy\", () => {\n            if (this.state.key) this.sharedData.unsubscribe(sharedDataKey, this.state.key, this);\n        });\n    }\n}\nclass lambda extends StdObject<{}, { argsCount: number; result: any }, [Bang, any], [(...args: any[]) => any, ...any[]], [number]> {\n    static description = \"Generate anonymous function, output args when called\";\n    static inlets: TMeta[\"inlets\"] = [{\n        isHot: true,\n        type: \"bang\",\n        description: \"Output anonymous function\"\n    }, {\n        isHot: false,\n        type: \"anything\",\n        description: \"Result of the anonymous function\"\n    }];\n    static outlets: TMeta[\"outlets\"] = [{\n        type: \"function\",\n        description: \"Anonymous function\"\n    }, {\n        type: \"bang\",\n        description: \"bang while lambda is called\"\n    }, {\n        type: \"anything\",\n        varLength: true,\n        description: \"If args=0, outlet args as array, else argument of current index\"\n    }];\n    static args: TMeta[\"args\"] = [{\n        type: \"number\",\n        optional: true,\n        default: 0,\n        description: \"Arguments count\"\n    }];\n    state = { argsCount: 0, result: undefined as any };\n    lambda = (...args: any[]) => {\n        this.state.result = undefined;\n        if (this.state.argsCount === 0) {\n            this.outletAll([, new Bang(), args]);\n        } else {\n            this.outletAll([, new Bang(), ...args]);\n        }\n        return this.state.result; // After outlet, result will be received.\n    };\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 2;\n            this.outlets = 3;\n        });\n        this.on(\"updateArgs\", () => {\n            const { args } = this.box;\n            if (typeof args[0] === \"number\" && args[0] >= 0) {\n                this.state.argsCount = ~~args[0];\n                this.outlets = 2 + this.state.argsCount;\n            }\n        });\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) {\n                if (isBang(data)) this.outlet(0, this.lambda);\n            } else if (inlet === 1) this.state.result = data;\n        });\n    }\n}\nclass delay extends StdObject<{}, { time: number; ref: Set<number> }, [any, number], [any]> {\n    static description = \"Delay an input\";\n    static inlets: TMeta[\"inlets\"] = [{\n        isHot: true,\n        type: \"anything\",\n        description: \"Input to be delayed\"\n    }, {\n        isHot: false,\n        type: \"number\",\n        description: \"Delay time in seconds\"\n    }];\n    static outlets: TMeta[\"outlets\"] = [{\n        type: \"anything\",\n        description: \"Delayed input\"\n    }];\n    static args: TMeta[\"args\"] = [{\n        type: \"number\",\n        optional: true,\n        default: 0,\n        description: \"Default delay time\"\n    }];\n    state = { time: 0, ref: new Set<number>() };\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 2;\n            this.outlets = 1;\n        });\n        this.on(\"updateArgs\", () => {\n            const { args } = this.box;\n            if (typeof args[0] === \"number\") this.state.time = +args[0];\n        });\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) {\n                this.state.ref.add(window.setTimeout(() => this.outlet(0, data), this.state.time || 0));\n            } else if (inlet === 1) {\n                this.state.time = +data;\n            }\n        });\n        this.on(\"destroy\", () => {\n            this.state.ref.forEach(ref => window.clearTimeout(ref));\n        });\n    }\n}\n\ntype CallState = { instance: any; inputs: any[]; result: any };\nexport class call extends DefaultObject<{}, CallState, [any | Bang, ...any[]], any[], [string, ...any[]], { args: number; sync: boolean }, { loading: boolean }> {\n    static description = \"Call a method of current object\";\n    static inlets: TMeta[\"inlets\"] = [{\n        isHot: true,\n        type: \"anything\",\n        description: \"Instance to read\"\n    }, {\n        isHot: false,\n        type: \"anything\",\n        varLength: true,\n        description: \"Method argument\"\n    }];\n    static outlets: TMeta[\"outlets\"] = [{\n        type: \"anything\",\n        description: \"Method return value\"\n    }, {\n        type: \"anything\",\n        description: \"Instance bypass\"\n    }, {\n        type: \"anything\",\n        varLength: true,\n        description: \"Argument after method called\"\n    }];\n    static args: TMeta[\"args\"] = [{\n        type: \"string\",\n        optional: false,\n        description: \"Method name\"\n    }, {\n        type: \"anything\",\n        optional: true,\n        varLength: true,\n        description: \"Set arguments while loaded\"\n    }];\n    static props: TMeta[\"props\"] = {\n        args: {\n            type: \"number\",\n            default: 0,\n            description: \"arguments count for method\"\n        },\n        sync: {\n            type: \"boolean\",\n            default: false,\n            description: \"If true and in case the result is a Promise, instead of waiting for result, will output the Promise object\"\n        }\n    };\n    state: CallState = { instance: undefined, inputs: [], result: null };\n    initialInlets = 1;\n    initialOutlets = 2;\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = this.initialInlets;\n            this.outlets = this.initialOutlets;\n        });\n        this.on(\"updateArgs\", (args) => {\n            this.state.inputs = args.slice(1);\n            const argsCount = Math.max(args.length - 1, ~~+this.getProp(\"args\"));\n            this.inlets = Math.max(1, this.initialInlets + argsCount);\n            this.outlets = this.initialOutlets + argsCount;\n        });\n        this.on(\"updateProps\", (props) => {\n            if (props.args && typeof props.args === \"number\" && props.args >= 0) {\n                const argsCount = Math.max(this.box.args.length - 1, ~~props.args);\n                this.inlets = Math.max(1, this.initialInlets + argsCount);\n                this.outlets = this.initialOutlets + argsCount;\n            }\n        });\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) {\n                if (!isBang(data)) this.state.instance = data;\n                if (this.execute()) this.output();\n            } else {\n                this.state.inputs[inlet - 1] = data;\n            }\n        });\n    }\n    execute() {\n        const m = this.box.args[0];\n        try {\n            this.state.result = this.state.instance[m](...this.state.inputs);\n            return true;\n        } catch (e) {\n            this.error(e);\n            return false;\n        }\n    }\n    callback = () => this.outletAll([this.state.result, this.state.instance, ...this.state.inputs]);\n    output() {\n        if (this.state.result instanceof Promise && !this.getProp(\"sync\")) {\n            this.loading = true;\n            this.state.result.then((r) => {\n                this.loading = false;\n                this.state.result = r;\n                this.callback();\n            }, (r) => {\n                this.loading = false;\n                this.error(r);\n            });\n            return this;\n        }\n        return this.callback();\n    }\n    set loading(loading: boolean) {\n        this.updateUI({ loading });\n    }\n}\nclass thispatcher extends StdObject<{}, {}, [Bang], [Patcher]> {\n    static description = \"Current patcher instance\";\n    static inlets: TMeta[\"inlets\"] = [{\n        isHot: true,\n        type: \"bang\",\n        description: \"Bang to output patcher instance\"\n    }];\n    static outlets: TMeta[\"outlets\"] = [{\n        type: \"object\",\n        description: \"Patcher instance\"\n    }];\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 1;\n            this.outlets = 1;\n        });\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) {\n                this.outlet(0, this.patcher);\n            }\n        });\n    }\n}\n\nexport default { print, for: For, \"for-in\": ForIn, if: If, gate, sel, set, get, call, v, lambda, bang, loadbang, unloadbang, delay, thispatcher };\n"],"sourceRoot":""}