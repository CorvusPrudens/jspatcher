{"version":3,"sources":["webpack://JSPatcher/./src/core/objects/live/Base.tsx","webpack://JSPatcher/./src/core/objects/live/button.tsx","webpack://JSPatcher/./src/core/objects/live/dial.tsx","webpack://JSPatcher/./src/core/objects/live/exports.ts","webpack://JSPatcher/./src/core/objects/live/meter.tsx","webpack://JSPatcher/./src/core/objects/live/numbox.tsx","webpack://JSPatcher/./src/core/objects/live/slider.tsx","webpack://JSPatcher/./src/core/objects/live/tab.tsx","webpack://JSPatcher/./src/core/objects/live/text.tsx","webpack://JSPatcher/./src/core/objects/live/toggle.tsx"],"names":["getDisplayValue","value","type","unitstyle","units","enums","toFixed","Math","abs","toMIDI","LiveUI","CanvasUI","state","object","e","canvas","focus","rect","getBoundingClientRect","prevX","touches","clientX","prevY","clientY","fromX","left","fromY","top","prevValue","handlePointerDown","x","y","originalEvent","handleTouchMove","preventDefault","changedTouches","movementX","movementY","handlePointerDrag","handleTouchEnd","handlePointerUp","document","removeEventListener","addEventListener","passive","handleMouseMove","handleMouseUp","setState","props","onChangeFromUI","displayValue","$changeTimer","distance","getDistance","max","min","exponent","normalized","length","iNormExp","stepsCount","step","Number","MAX_SAFE_INTEGER","floor","round","unitStyle","setValueToOutput","scheduleChangeHandler","window","setTimeout","changeCallback","speedLim","paint","render","refCanvas","className","join","position","display","width","height","handleKeyDown","handleKeyUp","handleTouchStart","handleWheel","handleClick","handleMouseDown","handleMouseOver","handleMouseOut","handleContextMenu","handleFocusIn","handleFocusOut","canvasProps","LiveObject","BaseObject","toValidValue","getProp","v","toDisplayValue","validateValue","emit","subscribe","on","lastValue","updateUI","default","description","isUIState","active","shortName","longName","frameRate","LiveButtonUI","$resetTimer","inTouch","clearTimeout","resetCallback","bgColor","activeBgColor","bgOnColor","activeBgOnColor","borderColor","focusBorderColor","ctx","borderWidth","fullSize","clearRect","lineWidth","buttonBgColor","buttonBorderColor","fillStyle","beginPath","ellipse","PI","fill","strokeStyle","stroke","LiveButton","inlets","outlets","args","data","inlet","outlet","Bang","transition","b01","b10","isHot","optional","LiveDialUI","inputBuffer","interactionRect","newValue","getValueFromDelta","addStep","key","match","slice","fontFamily","fontSize","fontFace","appearance","triangle","showName","showNumber","panelColor","activeNeedleColor","needleColor","activeDialColor","dialColor","textColor","triBorderColor","triColor","triangleHeight","triangleLineWidth","start","end","valPos","dialHeight","toRad","dialRadius","dialCenterX","dialCenterY","arcStartX","cos","arcStartY","sin","arcEndX","arcEndY","valuePosX","valuePosY","endCapRadius","panelOffset","roundedRect","fillRoundedRect","arc","midpoint","moveTo","lineTo","font","textAlign","fillText","tinyOffset","tipPositionX","tipPositionY","totalPixels","stepPixels","prevPixels","pixels","steps","normExp","LiveDial","isBang","outletAll","numbox","LiveNumbox","button","dial","slider","LiveSlider","tab","LiveTab","toggle","LiveToggle","text","LiveText","LiveMeter","LiveGain","LiveMeterUI","mode","orientation","coldColor","warmColor","hotColor","overloadColor","inactiveColdColor","inactiveWarmColor","values","find","i","maxValues","maxTimer","undefined","schedulePaint","channels","clipValue","save","translate","rotate","$height","fgColor","$top","forEach","fillRect","histMax","histDistance","clipDistance","clip","hotStop","warmStop","gradient","createLinearGradient","addColorStop","restore","node","$requestTimer","startRequest","lastResult","request","destroyed","absMax","getAbsMax","thresh","result","map","atodb","every","scheduleRequest","windowSize","applyBPF","parameters","get","TemporalAnalyserNode","register","audioCtx","audioWorklet","disconnectAudioInlet","inletAudioConnections","index","connectAudioInlet","destroy","package","author","version","thresholdDB","thresholdLinear","LiveNumboxUI","activeTriColor","triColor2","activeTriColor2","activeSliderColor","closePath","textBaseline","LiveSliderUI","relative","getValueFromPos","sliderColor","triOnColor","padding","interactionWidth","triOrigin","LiveTabUI","tabRects","getTabRects","multiline","spacingX","spacingXIn","spacingY","spacingYIn","margin","minHeight","count","countPerLine","lines","interval","rectWidth","ceil","textWidths","total","space","j","textDimensions","measureText","used","rectSpace","textOnColor","activeTextColor","activeTextOnColor","LiveTextUI","textOn","LiveToggleUI"],"mappings":"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","file":"js/af5e3f305a170b4b5e54.js","sourcesContent":["import * as React from \"react\";\nimport { toMIDI, iNormExp } from \"../../../utils/math\";\nimport { BaseObject } from \"../Base\";\nimport { TMeta } from \"../../types\";\nimport { BaseUI, BaseUIState, CanvasUI } from \"../BaseUI\";\n\nexport const getDisplayValue = (value: number, type: string, unitstyle: string, units: string, enums: string[]) => {\n    if (type === \"enum\") return enums[value];\n    if (unitstyle === \"int\") return value.toFixed(0);\n    if (unitstyle === \"float\") return value.toFixed(2);\n    if (unitstyle === \"time\") return value.toFixed(type === \"int\" ? 0 : 2) + \" ms\";\n    if (unitstyle === \"hertz\") return value.toFixed(type === \"int\" ? 0 : 2) + \" Hz\";\n    if (unitstyle === \"decibel\") return value.toFixed(type === \"int\" ? 0 : 2) + \" dB\";\n    if (unitstyle === \"%\") return value.toFixed(type === \"int\" ? 0 : 2) + \" %\";\n    if (unitstyle === \"pan\") return value === 0 ? \"C\" : (type === \"int\" ? Math.abs(value) : Math.abs(value).toFixed(2)) + (value < 0 ? \" L\" : \" R\");\n    if (unitstyle === \"semitones\") return value.toFixed(type === \"int\" ? 0 : 2) + \" st\";\n    if (unitstyle === \"midi\") return toMIDI(value);\n    if (unitstyle === \"custom\") return value.toFixed(type === \"int\" ? 0 : 2) + \" \" + units;\n    if (unitstyle === \"native\") return value.toFixed(type === \"int\" ? 0 : 2);\n    return \"N/A\";\n};\nexport type LiveUIState = LiveUIProps & BaseUIState;\nexport class LiveUI<T extends LiveObject, S extends Partial<LiveUIState> & Record<string, any> = {}> extends CanvasUI<T, {}, S & LiveUIState> {\n    className: string;\n    $changeTimer = -1;\n    state: S & LiveUIState = {\n        ...this.state,\n        value: this.object.state.value\n    };\n    handleKeyDown = (e: React.KeyboardEvent) => {};\n    handleKeyUp = (e: React.KeyboardEvent) => {};\n    private handleTouchStart = (e: React.TouchEvent) => {\n        this.canvas.focus();\n        const rect = this.canvas.getBoundingClientRect();\n        let prevX = e.touches[0].clientX;\n        let prevY = e.touches[0].clientY;\n        const fromX = prevX - rect.left;\n        const fromY = prevY - rect.top;\n        const prevValue = this.state.value;\n        this.handlePointerDown({ x: fromX, y: fromY, originalEvent: e });\n        const handleTouchMove = (e: TouchEvent) => {\n            e.preventDefault();\n            const clientX = e.changedTouches[0].clientX;\n            const clientY = e.changedTouches[0].clientY;\n            const movementX = clientX - prevX;\n            const movementY = clientY - prevY;\n            prevX = clientX;\n            prevY = clientY;\n            const x = clientX - rect.left;\n            const y = clientY - rect.top;\n            this.handlePointerDrag({ prevValue, x, y, fromX, fromY, movementX, movementY, originalEvent: e });\n        };\n        const handleTouchEnd = (e: TouchEvent) => {\n            e.preventDefault();\n            const x = e.changedTouches[0].clientX - rect.left;\n            const y = e.changedTouches[0].clientY - rect.top;\n            this.handlePointerUp({ x, y, originalEvent: e });\n            document.removeEventListener(\"touchmove\", handleTouchMove);\n            document.removeEventListener(\"touchend\", handleTouchEnd);\n        };\n        document.addEventListener(\"touchmove\", handleTouchMove, { passive: false });\n        document.addEventListener(\"touchend\", handleTouchEnd, { passive: false });\n    };\n    handleWheel = (e: React.WheelEvent) => {};\n    handleClick = (e: React.MouseEvent) => {};\n    private handleMouseDown = (e: React.MouseEvent) => {\n        e.preventDefault();\n        this.canvas.focus();\n        const rect = this.canvas.getBoundingClientRect();\n        const fromX = e.clientX - rect.left;\n        const fromY = e.clientY - rect.top;\n        const prevValue = this.state.value;\n        this.handlePointerDown({ x: fromX, y: fromY, originalEvent: e });\n        const handleMouseMove = (e: MouseEvent) => {\n            e.preventDefault();\n            const x = e.clientX - rect.left;\n            const y = e.clientY - rect.top;\n            this.handlePointerDrag({ prevValue, x, y, fromX, fromY, movementX: e.movementX, movementY: e.movementY, originalEvent: e });\n        };\n        const handleMouseUp = (e: MouseEvent) => {\n            e.preventDefault();\n            const x = e.clientX - rect.left;\n            const y = e.clientY - rect.top;\n            this.handlePointerUp({ x, y, originalEvent: e });\n            document.removeEventListener(\"mousemove\", handleMouseMove);\n            document.removeEventListener(\"mouseup\", handleMouseUp);\n        };\n        document.addEventListener(\"mousemove\", handleMouseMove);\n        document.addEventListener(\"mouseup\", handleMouseUp);\n    };\n    handleMouseOver = (e: React.MouseEvent) => {};\n    handleMouseOut = (e: React.MouseEvent) => {};\n    handleContextMenu = (e: React.MouseEvent) => {};\n    handlePointerDown = (e: PointerDownEvent) => {};\n    handlePointerDrag = (e: PointerDragEvent) => {};\n    handlePointerUp = (e: PointerUpEvent) => {};\n    handleFocusIn = (e: React.FocusEvent) => this.setState({ focus: true });\n    handleFocusOut = (e: React.FocusEvent) => this.setState({ focus: false });\n    /**\n     * Normalized value between 0 - 1.\n     *\n     * @readonly\n     * @memberof LiveUI\n     */\n    get distance() {\n        return LiveUI.getDistance(this.state);\n    }\n    static getDistance(state: { type: \"enum\" | \"int\" | \"float\"; value: number; min: number; max: number; exponent: number; enums?: string[] }) {\n        const { type, max, min, value, exponent, enums } = state;\n        const normalized = type === \"enum\" ? Math.max(0, Math.min(enums.length - 1, value)) / (enums.length - 1) : (Math.max(min, Math.min(max, value)) - min) / (max - min);\n        return iNormExp(normalized || 0, exponent);\n    }\n    /**\n     * Count steps in range min-max with step\n     *\n     * @readonly\n     * @memberof LiveUI\n     */\n    get stepsCount() {\n        const { type, max, min, step, enums } = this.state;\n        if (type === \"enum\") return enums.length - 1;\n        if (type === \"float\") return Math.min(Number.MAX_SAFE_INTEGER, Math.floor((max - min) / step));\n        return Math.min(Math.floor((max - min) / (Math.round(step) || 1)), max - min);\n    }\n    get displayValue() {\n        const { value, type, unitStyle, units, enums } = this.state;\n        return getDisplayValue(value, type, unitStyle, units, enums);\n    }\n    setValueToOutput(value: number) {\n        this.setState({ value });\n        this.scheduleChangeHandler();\n    }\n    changeCallback = () => {\n        this.props.object.onChangeFromUI({ value: this.state.value, displayValue: this.displayValue });\n        this.$changeTimer = -1;\n    };\n    scheduleChangeHandler() {\n        if (this.$changeTimer === -1) this.$changeTimer = window.setTimeout(this.changeCallback, this.state.speedLim);\n    }\n    paint() {}\n    render() {\n        return (\n            <BaseUI {...this.props}>\n                <canvas\n                    ref={this.refCanvas}\n                    className={[\"live-component\", this.className].join(\" \")}\n                    style={{ position: \"absolute\", display: \"inline-block\", width: \"100%\", height: \"100%\" }}\n                    tabIndex={1}\n                    onKeyDown={this.handleKeyDown}\n                    onKeyUp={this.handleKeyUp}\n                    onTouchStart={this.handleTouchStart}\n                    onWheel={this.handleWheel}\n                    onClick={this.handleClick}\n                    onMouseDown={this.handleMouseDown}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onContextMenu={this.handleContextMenu}\n                    onFocus={this.handleFocusIn}\n                    onBlur={this.handleFocusOut}\n                    {...this.props.canvasProps}\n                />\n            </BaseUI>\n        );\n    }\n}\nexport type LiveObjectState = { value: number; displayValue: string };\nexport type LiveObjectEventMap = { \"changeFromUI\": { value: number; displayValue: string } };\nexport class LiveObject<D = {}, S extends Partial<LiveObjectState> & Record<string, any> = {}, I extends any[] = any[], O extends any[] = any[], A extends any[] = any[], P extends Partial<Omit<LiveUIState, \"value\">> & Record<string, any> = {}, U extends Partial<LiveUIState> & Record<string, any> = {}> extends BaseObject<D, S & LiveObjectState, I, O, A, P & Omit<LiveUIState, \"value\">, U & LiveUIState, LiveObjectEventMap> {\n    static package = \"live\";\n    static author = \"Fr0stbyteR\";\n    static version = \"1.0.0\";\n    static description = \"Ab**ton Live User ?\";\n    static props: TMeta[\"props\"] = { /*\n        value: {\n            type: \"number\",\n            default: 0,\n            description: \"Initial value\",\n            isUIState: true\n        },*/\n        min: {\n            type: \"number\",\n            default: 0,\n            description: \"Minimum value\",\n            isUIState: true\n        },\n        max: {\n            type: \"number\",\n            default: 127,\n            description: \"Maximum value\",\n            isUIState: true\n        },\n        step: {\n            type: \"number\",\n            default: 1,\n            description: \"Value change step\",\n            isUIState: true\n        },\n        type: {\n            type: \"enum\",\n            enums: [\"enum\", \"float\", \"int\"],\n            default: \"int\",\n            description: \"Value type\",\n            isUIState: true\n        },\n        enums: {\n            type: \"object\",\n            default: [\"\"],\n            description: \"Enum values\",\n            isUIState: true\n        },\n        active: {\n            type: \"boolean\",\n            default: true,\n            description: \"Active state\",\n            isUIState: true\n        },\n        focus: {\n            type: \"boolean\",\n            default: false,\n            description: \"Focus state\",\n            isUIState: true\n        },\n        shortName: {\n            type: \"string\",\n            default: \"\",\n            description: \"Short name to display\",\n            isUIState: true\n        },\n        longName: {\n            type: \"string\",\n            default: \"\",\n            description: \"Long name to display\",\n            isUIState: true\n        },\n        unitStyle: {\n            type: \"enum\",\n            enums: [\"float\", \"int\", \"time\", \"hertz\", \"decibel\", \"%\", \"pan\", \"semitones\", \"midi\", \"custom\", \"native\"],\n            default: \"int\",\n            description: \"Style of unit to display\",\n            isUIState: true\n        },\n        units: {\n            type: \"string\",\n            default: \"\",\n            description: \"If unitStyle set to custom, display this as unit\",\n            isUIState: true\n        },\n        exponent: {\n            type: \"number\",\n            default: 0,\n            description: \"UI modulation bpf, 0 for linear\",\n            isUIState: true\n        },\n        speedLim: {\n            type: \"number\",\n            default: 16,\n            description: \"Value output speed limit in ms\",\n            isUIState: true\n        },\n        frameRate: {\n            type: \"number\",\n            default: 60,\n            description: \"UI refresh rate\",\n            isUIState: true\n        }\n    };\n    state = { value: 0, displayValue: \"0\" } as S & LiveObjectState;\n    static UI: typeof LiveUI;\n    /**\n     * Get a nearest valid number\n     *\n     * @returns {number}\n     * @memberof LiveObject\n     */\n    toValidValue(value: number): number {\n        const min = this.getProp(\"min\");\n        const max = this.getProp(\"max\");\n        const step = this.getProp(\"step\");\n        const v = Math.min(max, Math.max(min, value));\n        return min + Math.floor((v - min) / step) * step;\n    }\n    toDisplayValue(value: number): string {\n        const { type, unitStyle, units, enums } = this.props;\n        return getDisplayValue(value, type, unitStyle, units, enums);\n    }\n    validateValue() {\n        this.state.value = this.toValidValue(this.state.value);\n        this.state.displayValue = this.toDisplayValue(this.state.value);\n    }\n    onChangeFromUI(e: { value: number; displayValue: string }) {\n        this.emit(\"changeFromUI\", e);\n    }\n    subscribe() {\n        super.subscribe();\n        this.on(\"updateProps\", (props) => {\n            if (typeof props.max !== \"undefined\" || typeof props.min !== \"undefined\" || typeof props.step !== \"undefined\") {\n                const lastValue = this.state.value;\n                this.validateValue();\n                if (lastValue !== this.state.value) this.updateUI({ value: this.state.value } as any);\n            }\n        });\n    }\n}\n","import { LiveUI, LiveObject, LiveUIState } from \"./Base\";\nimport { TMeta } from \"../../types\";\nimport { Bang } from \"../Base\";\n\ninterface LiveButtonProps extends LiveUIProps {\n    bgColor: string;\n    activeBgColor: string;\n    bgOnColor: string;\n    activeBgOnColor: string;\n    borderColor: string;\n    focusBorderColor: string;\n    transition: \"Zero->One\" | \"One->Zero\" | \"Both\";\n}\ninterface LiveButtonUIState extends Omit<LiveButtonProps, \"transition\">, LiveUIState {}\n\nclass LiveButtonUI extends LiveUI<LiveButton, LiveButtonUIState> {\n    static defaultSize: [number, number] = [30, 30];\n    className = \"live-button\";\n    inTouch = false;\n    $resetTimer = -1;\n    resetCallback = () => {\n        this.setValueToOutput(0);\n        this.$resetTimer = -1;\n    };\n    paint() {\n        if (this.$resetTimer !== -1) {\n            window.clearTimeout(this.$resetTimer);\n            this.resetCallback();\n        }\n        const {\n            // width,\n            // height,\n            active,\n            focus,\n            bgColor,\n            activeBgColor,\n            bgOnColor,\n            activeBgOnColor,\n            borderColor,\n            focusBorderColor,\n            value\n        } = this.state;\n        const ctx = this.ctx;\n        if (!ctx) return;\n        const borderWidth = 1;\n\n        const [width, height] = this.fullSize();\n        ctx.clearRect(0, 0, width, height);\n\n        ctx.lineWidth = borderWidth;\n        const buttonBgColor = active ? (value ? activeBgOnColor : activeBgColor) : (value ? bgOnColor : bgColor);\n        const buttonBorderColor = focus ? focusBorderColor : borderColor;\n\n        ctx.fillStyle = buttonBgColor;\n        ctx.beginPath();\n        ctx.ellipse(width * 0.5, height * 0.5, width * 0.5 - 2 * borderWidth, height * 0.5 - 2 * borderWidth, 0, 0, 2 * Math.PI);\n        ctx.fill();\n        ctx.strokeStyle = buttonBorderColor;\n        ctx.stroke();\n\n        if (value && !this.inTouch) this.$resetTimer = window.setTimeout(this.resetCallback, 100);\n    }\n    handlePointerDown = () => {\n        this.inTouch = true;\n        this.setValueToOutput(1);\n    };\n    handlePointerUp = () => {\n        this.inTouch = false;\n        this.setValueToOutput(0);\n    };\n}\n\nexport class LiveButton extends LiveObject<{}, {}, [any], [Bang, number], [number], LiveButtonProps, LiveButtonUIState> {\n    static description = \"Button\";\n    static inlets: TMeta[\"inlets\"] = [{\n        isHot: true,\n        type: \"number\",\n        description: \"Output a bang following transition prop.\"\n    }];\n    static outlets: TMeta[\"outlets\"] = [{\n        type: \"bang\",\n        description: \"Bang\"\n    }, {\n        type: \"number\",\n        description: \"Current value\"\n    }];\n    static args: TMeta[\"args\"] = [{\n        type: \"number\",\n        optional: true,\n        default: 0,\n        description: \"Initial value\"\n    }];\n    static props: TMeta[\"props\"] = {\n        shortName: {\n            type: \"string\",\n            default: \"live.button\",\n            description: \"Short name to display\",\n            isUIState: true\n        },\n        longName: {\n            type: \"string\",\n            default: \"live.button\",\n            description: \"Long name to display\",\n            isUIState: true\n        },\n        max: {\n            type: \"number\",\n            default: 1,\n            description: \"Maximum value\",\n            isUIState: true\n        },\n        bgColor: {\n            type: \"color\",\n            default: \"rgba(90, 90, 90, 1)\",\n            description: \"Background color (inactive)\",\n            isUIState: true\n        },\n        activeBgColor: {\n            type: \"color\",\n            default: \"rgba(195, 195, 195, 1)\",\n            description: \"Background color (active)\",\n            isUIState: true\n        },\n        bgOnColor: {\n            type: \"color\",\n            default: \"rgba(195, 195, 195, 1)\",\n            description: \"Background color (on / inactive)\",\n            isUIState: true\n        },\n        activeBgOnColor: {\n            type: \"color\",\n            default: \"rgba(109, 215, 255, 1)\",\n            description: \"Background color (on / active)\",\n            isUIState: true\n        },\n        borderColor: {\n            type: \"color\",\n            default: \"rgba(80, 80, 80, 1)\",\n            description: \"Border color (unfocus)\",\n            isUIState: true\n        },\n        focusBorderColor: {\n            type: \"color\",\n            default: \"rgba(80, 80, 80, 1)\",\n            description: \"Border color (focus)\",\n            isUIState: true\n        },\n        transition: {\n            type: \"enum\",\n            enums: [\"Zero->One\", \"One->Zero\", \"Both\"],\n            default: \"Zero->One\",\n            description: \"Specifies when a bang message will be sent to the outlet\"\n        }\n    };\n    static UI = LiveButtonUI;\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 1;\n            this.outlets = 2;\n        });\n        this.on(\"updateArgs\", (args) => {\n            this.state.value = +!!args[0];\n            this.validateValue();\n            this.updateUI({ value: this.state.value });\n        });\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) {\n                this.state.value = +!!data;\n                this.validateValue();\n                this.updateUI({ value: this.state.value });\n                this.outlet(1, this.state.value);\n                if (this.state.value && this.getProp(\"transition\") !== \"One->Zero\") this.outlet(0, new Bang());\n            }\n        });\n        this.on(\"changeFromUI\", ({ value }) => {\n            const lastValue = this.state.value;\n            this.state.value = value;\n            this.validateValue();\n            this.outlet(1, value);\n            const transition = this.getProp(\"transition\");\n            const b01 = transition !== \"One->Zero\";\n            const b10 = transition !== \"Zero->One\";\n            if ((b01 && lastValue < this.state.value) || (b10 && lastValue > this.state.value)) this.outlet(0, new Bang());\n        });\n    }\n}\n","import { LiveUI, LiveObject, LiveUIState } from \"./Base\";\nimport { TMeta } from \"../../types\";\nimport { Bang, isBang } from \"../Base\";\nimport { roundedRect, fillRoundedRect } from \"../../../utils/utils\";\nimport { normExp, toRad } from \"../../../utils/math\";\n\ninterface LiveDialProps extends LiveUIProps {\n    borderColor: string;\n    focusBorderColor: string;\n    dialColor: string;\n    activeDialColor: string;\n    needleColor: string;\n    activeNeedleColor: string;\n    panelColor: string;\n    triBorderColor: string;\n    triColor: string;\n    textColor: string;\n    fontFamily: string;\n    fontSize: number;\n    fontFace: \"regular\" | \"bold\" | \"italic\" | \"bold italic\";\n    appearance: \"vertical\" | \"tiny\" | \"panel\";\n    showName: boolean;\n    showNumber: boolean;\n    triangle: boolean;\n}\ninterface LiveDialUIState extends LiveDialProps, LiveUIState {\n    inputBuffer: string;\n}\nclass LiveDialUI extends LiveUI<LiveDial, LiveDialUIState> {\n    static defaultSize: [number, number] = [45, 60];\n    state: LiveDialUIState = {\n        ...this.state,\n        inputBuffer: \"\"\n    };\n    className = \"live-dial\";\n    interactionRect = [0, 0, 0, 0];\n    inTouch = false;\n    paint() {\n        const {\n            // width,\n            // height,\n            active,\n            focus,\n            fontFamily,\n            fontSize,\n            fontFace,\n            appearance,\n            triangle,\n            showName,\n            showNumber,\n            borderColor,\n            focusBorderColor,\n            panelColor,\n            activeNeedleColor,\n            needleColor,\n            activeDialColor,\n            dialColor,\n            textColor,\n            triBorderColor,\n            triColor,\n            shortName,\n            inputBuffer\n        } = this.state;\n        const ctx = this.ctx;\n        if (!ctx) return;\n        const distance = this.distance;\n        const displayValue = inputBuffer ? inputBuffer + \"_\" : this.displayValue;\n\n        const [width, height] = this.fullSize();\n        ctx.clearRect(0, 0, width, height);\n\n        const triangleHeight = 4;\n        const triangleLineWidth = 0.6;\n\n        let start: number;\n        let end: number;\n        let valPos: number;\n        let dialHeight: number;\n\n        if (appearance === \"tiny\") {\n            dialHeight = 18;\n            start = -3 * Math.PI * 0.5;\n            end = 0;\n            valPos = start + toRad(this.distance * 270);\n        } else {\n            dialHeight = 25;\n            start = Math.PI - 3 * Math.PI / 8;\n            end = 2 * Math.PI + 3 * Math.PI / 8;\n            valPos = start + toRad(this.distance * 315);\n        }\n        const dialRadius = dialHeight * 0.5;\n\n        let dialCenterX = width * 0.5;\n        let dialCenterY = height * 0.5 + 1;\n        if (appearance === \"panel\") {\n            dialCenterY += 10;\n        } else if (appearance === \"vertical\") {\n            if (showNumber) dialCenterY -= fontSize - 5;\n            if (showName) dialCenterY += fontSize - 5;\n            if (triangle) dialCenterY += triangleHeight - 1;\n        } else if (appearance === \"tiny\") {\n            if (showName) {\n                dialCenterY += 6;\n                dialCenterX = 10;\n            }\n        }\n        this.interactionRect = [0, dialCenterY - dialHeight * 0.5, width, dialHeight];\n        const arcStartX = dialCenterX + (dialHeight * 0.5 * Math.cos(start));\n        const arcStartY = dialCenterY + (dialHeight * 0.5 * Math.sin(start));\n        const arcEndX = dialCenterX + (dialHeight * 0.5 * Math.cos(end));\n        const arcEndY = dialCenterY + (dialHeight * 0.5 * Math.sin(end));\n        const valuePosX = dialCenterX + (dialHeight * 0.5 * Math.cos(valPos));\n        const valuePosY = dialCenterY + (dialHeight * 0.5 * Math.sin(valPos));\n        const endCapRadius = 1;\n        const lineWidth = 2;\n        let panelOffset = 0;\n\n        if (appearance === \"panel\") {\n            panelOffset = 5;\n            ctx.strokeStyle = focus ? focusBorderColor : borderColor;\n            ctx.lineWidth = 0.4;\n            roundedRect(ctx, 1, 1, width - 2, height - 2, 5);\n            ctx.fillStyle = panelColor;\n            fillRoundedRect(ctx, 1.2, 1.2, width - 2.4, 30 - 0.4, [5, 5, 0, 0]);\n        }\n\n        ctx.strokeStyle = active ? activeNeedleColor : needleColor;\n        ctx.fillStyle = ctx.strokeStyle;\n        ctx.lineWidth = lineWidth;\n        // draw background arc endcaps\n        ctx.beginPath();\n        ctx.arc(arcStartX, arcStartY, endCapRadius, 0, 2 * Math.PI);\n        ctx.fill();\n        ctx.beginPath();\n        ctx.arc(arcEndX, arcEndY, endCapRadius, 0, 2 * Math.PI);\n        ctx.fill();\n        // draw background arc\n        ctx.beginPath();\n        ctx.arc(dialCenterX, dialCenterY, dialRadius, start, end);\n        ctx.stroke();\n\n        // draw value arc, which changes if triangle is enabled\n        ctx.strokeStyle = active ? activeDialColor : dialColor;\n        ctx.fillStyle = ctx.strokeStyle;\n        if (triangle) {\n            const midpoint = (start + end) * 0.5;\n            ctx.strokeStyle = active ? activeDialColor : dialColor;\n            ctx.beginPath();\n            if (distance > 0.5) ctx.arc(dialCenterX, dialCenterY, dialRadius, midpoint, valPos);\n            else ctx.arc(dialCenterX, dialCenterY, dialRadius, valPos, midpoint);\n            ctx.stroke();\n        } else {\n            // draw value arc endcap\n            ctx.beginPath();\n            ctx.arc(arcStartX, arcStartY, endCapRadius, 0, 2 * Math.PI);\n            ctx.fill();\n            // draw value arc\n            ctx.beginPath();\n            ctx.arc(dialCenterX, dialCenterY, dialRadius, start, valPos);\n            ctx.stroke();\n        }\n        // draw dial\n        // draw dial round endcaps\n        ctx.strokeStyle = active ? activeNeedleColor : needleColor;\n        ctx.fillStyle = ctx.strokeStyle;\n        ctx.beginPath();\n        ctx.arc(dialCenterX, dialCenterY, endCapRadius, 0, 2 * Math.PI);\n        ctx.fill();\n        ctx.beginPath();\n        ctx.arc(valuePosX, valuePosY, endCapRadius, 0, 2 * Math.PI);\n        ctx.fill();\n        // draw dial line\n        ctx.beginPath();\n        ctx.moveTo(dialCenterX, dialCenterY);\n        ctx.lineTo(valuePosX, valuePosY);\n        ctx.stroke();\n        // add text if it is enabled\n        ctx.font = `${fontFace === \"regular\" ? \"\" : fontFace} ${fontSize}px ${fontFamily}, sans-serif`;\n        ctx.fillStyle = textColor;\n        if (showName) {\n            if (appearance === \"tiny\") {\n                ctx.textAlign = \"left\";\n                ctx.fillText(shortName, 0, panelOffset + fontSize, width);\n            } else {\n                ctx.textAlign = \"center\";\n                ctx.fillText(shortName, width * 0.5, panelOffset + fontSize, width);\n            }\n        }\n        if (showNumber) {\n            const tinyOffset = appearance === \"tiny\" ? 12 : 0;\n            if (appearance === \"tiny\") {\n                ctx.textAlign = \"left\";\n                ctx.fillText(displayValue, tinyOffset, height - 2, width);\n            } else {\n                ctx.textAlign = \"center\";\n                ctx.fillText(displayValue, width * 0.5, height - 2, width);\n            }\n        }\n        // draw triangle if it is enabled\n        if (triangle) {\n            if (!distance) ctx.fillStyle = triColor;\n            else if (!active) ctx.fillStyle = dialColor;\n            else ctx.fillStyle = activeDialColor;\n            ctx.beginPath();\n            if (appearance === \"tiny\") {\n                const tipPositionX = dialCenterX + dialHeight * 0.5 * Math.cos(-3 * Math.PI / 4) - 1;\n                const tipPositionY = dialCenterY + dialHeight * 0.5 * Math.sin(-3 * Math.PI / 4) - 1;\n                ctx.moveTo(tipPositionX, tipPositionY);\n                ctx.lineTo(tipPositionX - triangleHeight, tipPositionY);\n                ctx.lineTo(tipPositionX, tipPositionY - triangleHeight);\n                ctx.lineTo(tipPositionX, tipPositionY);\n            } else {\n                ctx.moveTo(dialCenterX, dialCenterY - dialRadius - 1);\n                ctx.lineTo(dialCenterX - triangleHeight, dialCenterY - dialRadius - 1 - triangleHeight);\n                ctx.lineTo(dialCenterX + triangleHeight, dialCenterY - dialRadius - 1 - triangleHeight);\n                ctx.lineTo(dialCenterX, dialCenterY - dialRadius - 1);\n            }\n            ctx.fill();\n            ctx.strokeStyle = triBorderColor || \"transparent\";\n            ctx.lineWidth = triangleLineWidth;\n            ctx.stroke();\n        }\n    }\n    getValueFromDelta(e: PointerDragEvent) {\n        const { type, min, max, enums, exponent } = this.state;\n        const step = type === \"enum\" ? 1 : (this.state.step || 1);\n        const totalPixels = 100;\n        const stepsCount = this.stepsCount;\n        const stepPixels = totalPixels / stepsCount;\n        const prevPixels = LiveUI.getDistance({ value: e.prevValue, type, min, max, enums, exponent }) * totalPixels;\n        const pixels = prevPixels + e.fromY - e.y;\n        let steps = Math.round(normExp(pixels / totalPixels, exponent) * totalPixels / stepPixels);\n        steps = Math.min(stepsCount, Math.max(0, steps));\n        if (type === \"enum\") return steps;\n        if (type === \"int\") return Math.round(steps * step + min);\n        return steps * step + min;\n    }\n    handlePointerDown = (e: PointerDownEvent) => {\n        if (\n            e.x < this.interactionRect[0]\n            || e.x > this.interactionRect[0] + this.interactionRect[2]\n            || e.y < this.interactionRect[1]\n            || e.y > this.interactionRect[1] + this.interactionRect[3]\n        ) return;\n        this.inTouch = true;\n    };\n    handlePointerDrag = (e: PointerDragEvent) => {\n        if (!this.inTouch) return;\n        const newValue = this.getValueFromDelta(e);\n        if (newValue !== this.state.value) this.setValueToOutput(newValue);\n    };\n    handlePointerUp = () => {\n        this.inTouch = false;\n    };\n    handleKeyDown = (e: React.KeyboardEvent) => {\n        if (!this.state.inputBuffer) {\n            let addStep = 0;\n            if (e.key === \"ArrowUp\" || e.key === \"ArrowRight\") addStep = 1;\n            if (e.key === \"ArrowDown\" || e.key === \"ArrowLeft\") addStep = -1;\n            if (addStep !== 0) {\n                const newValue = this.object.toValidValue(this.state.value + this.state.step * addStep);\n                if (newValue !== this.state.value) this.setValueToOutput(newValue);\n            }\n        }\n        if (e.key.match(/[0-9.-]/)) {\n            this.setState({ inputBuffer: this.state.inputBuffer + e.key });\n            return;\n        }\n        if (e.key === \"Backspace\") {\n            this.setState({ inputBuffer: this.state.inputBuffer.slice(0, -1) });\n            return;\n        }\n        if (e.key === \"Enter\") {\n            const newValue = this.object.toValidValue(+this.state.inputBuffer);\n            this.setState({ inputBuffer: \"\" });\n            if (newValue !== this.state.value) this.setValueToOutput(newValue);\n        }\n    };\n    handleFocusOut = () => {\n        if (this.state.inputBuffer) {\n            const newValue = this.object.toValidValue(+this.state.inputBuffer);\n            this.setState({ inputBuffer: \"\" });\n            if (newValue !== this.state.value) this.setValueToOutput(newValue);\n        }\n        this.setState({ focus: false });\n    };\n}\n\nexport class LiveDial extends LiveObject<{}, {}, [number | Bang, number], [number, string], [number], LiveDialProps, LiveDialUIState> {\n    static description = \"Dial knob\";\n    static inlets: TMeta[\"inlets\"] = [{\n        isHot: true,\n        type: \"number\",\n        description: \"Set and output the value\"\n    }, {\n        isHot: false,\n        type: \"number\",\n        description: \"Set without output the value\"\n    }];\n    static outlets: TMeta[\"outlets\"] = [{\n        type: \"number\",\n        description: \"Number value\"\n    }, {\n        type: \"string\",\n        description: \"Display value\"\n    }];\n    static args: TMeta[\"args\"] = [{\n        type: \"number\",\n        optional: true,\n        default: 0,\n        description: \"Initial value\"\n    }];\n    static props: TMeta[\"props\"] = {\n        shortName: {\n            type: \"string\",\n            default: \"live.dial\",\n            description: \"Short name to display\",\n            isUIState: true\n        },\n        longName: {\n            type: \"string\",\n            default: \"live.dial\",\n            description: \"Long name to display\",\n            isUIState: true\n        },\n        borderColor: {\n            type: \"color\",\n            default: \"rgba(90, 90, 90, 1)\",\n            description: \"Border color (unfocus)\",\n            isUIState: true\n        },\n        focusBorderColor: {\n            type: \"color\",\n            default: \"rgba(80, 80, 80, 1)\",\n            description: \"Border color (focus)\",\n            isUIState: true\n        },\n        dialColor: {\n            type: \"color\",\n            default: \"rgba(109, 215, 255, 1)\",\n            description: \"Dial color (inactive)\",\n            isUIState: true\n        },\n        activeDialColor: {\n            type: \"color\",\n            default: \"rgba(109, 215, 255, 1)\",\n            description: \"Dial color (active)\",\n            isUIState: true\n        },\n        needleColor: {\n            type: \"color\",\n            default: \"rgba(105, 105, 105, 1)\",\n            description: \"Needle color (inactive)\",\n            isUIState: true\n        },\n        activeNeedleColor: {\n            type: \"color\",\n            default: \"rgba(195, 195, 195, 1)\",\n            description: \"Needle color (active)\",\n            isUIState: true\n        },\n        panelColor: {\n            type: \"color\",\n            default: \"rgba(165, 165, 165, 1)\",\n            description: \"Panel color\",\n            isUIState: true\n        },\n        triBorderColor: {\n            type: \"color\",\n            default: \"rgba(50, 50, 50, 1)\",\n            description: \"Triangle border color\",\n            isUIState: true\n        },\n        triColor: {\n            type: \"color\",\n            default: \"rgba(40, 40, 40, 1)\",\n            description: \"Triangle color (inactive)\",\n            isUIState: true\n        },\n        textColor: {\n            type: \"color\",\n            default: \"rgba(255, 255, 255, 1)\",\n            description: \"Text color\",\n            isUIState: true\n        },\n        fontFamily: {\n            type: \"enum\",\n            enums: [\"Lato\", \"Georgia\", \"Times New Roman\", \"Arial\", \"Tahoma\", \"Verdana\", \"Courier New\"],\n            default: \"Arial\",\n            description: \"Font family\",\n            isUIState: true\n        },\n        fontSize: {\n            type: \"number\",\n            default: 10,\n            description: \"Text font size\",\n            isUIState: true\n        },\n        fontFace: {\n            type: \"enum\",\n            enums: [\"regular\", \"bold\", \"italic\", \"bold italic\"],\n            default: \"regular\",\n            description: \"Text style\",\n            isUIState: true\n        },\n        appearance: {\n            type: \"enum\",\n            enums: [\"vertical\", \"tiny\", \"panel\"],\n            default: \"vertical\",\n            description: \"Dial style\",\n            isUIState: true\n        },\n        showName: {\n            type: \"boolean\",\n            default: true,\n            description: \"Display name\",\n            isUIState: true\n        },\n        showNumber: {\n            type: \"boolean\",\n            default: true,\n            description: \"Display number as text\",\n            isUIState: true\n        },\n        triangle: {\n            type: \"boolean\",\n            default: false,\n            description: \"Display yriangle\",\n            isUIState: true\n        }\n    };\n    static UI = LiveDialUI;\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 2;\n            this.outlets = 2;\n        });\n        this.on(\"updateArgs\", (args) => {\n            if (typeof args[0] === \"number\") {\n                this.state.value = args[0];\n                this.validateValue();\n                this.updateUI({ value: this.state.value });\n            }\n        });\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) {\n                if (!isBang(data)) {\n                    const value = +data;\n                    this.state.value = value;\n                    this.validateValue();\n                    this.updateUI({ value: this.state.value });\n                }\n                this.outletAll([this.state.value, this.state.displayValue]);\n            } else if (inlet === 1) {\n                const value = +data;\n                this.state.value = value;\n                this.validateValue();\n                this.updateUI({ value: this.state.value });\n            }\n        });\n        this.on(\"changeFromUI\", ({ value, displayValue }) => {\n            this.state.value = value;\n            this.state.displayValue = displayValue;\n            this.outletAll([this.state.value, this.state.displayValue]);\n        });\n    }\n}\n","import { LiveNumbox } from \"./numbox\";\nimport { LiveButton } from \"./button\";\nimport { LiveDial } from \"./dial\";\nimport { LiveSlider } from \"./slider\";\nimport { LiveTab } from \"./tab\";\nimport { LiveToggle } from \"./toggle\";\nimport { LiveText } from \"./text\";\nimport { LiveMeter } from \"./meter\";\nimport { LiveGain } from \"./gain\";\n\nexport default {\n    numbox: LiveNumbox,\n    button: LiveButton,\n    dial: LiveDial,\n    slider: LiveSlider,\n    tab: LiveTab,\n    toggle: LiveToggle,\n    text: LiveText,\n    \"meter~\": LiveMeter,\n    \"gain~\": LiveGain\n};\n","import { LiveObject, LiveUI } from \"./Base\";\nimport { BaseObject } from \"../Base\";\nimport { TMeta } from \"../../types\";\nimport { atodb } from \"../../../utils/math\";\nimport { CanvasUI, CanvasUIState } from \"../BaseUI\";\nimport TemporalAnalyserNode from \"../../worklets/TemporalAnalyser\";\n\nexport interface LiveMeterProps {\n    active: boolean;\n    orientation: \"vertical\" | \"horizontal\";\n    mode: \"deciBel\" | \"linear\";\n    min: number;\n    max: number;\n    thresholdLinear: number;\n    thresholdDB: number;\n    speedLim: number;\n    frameRate: number;\n    windowSize: number;\n    bgColor: string;\n    inactiveColdColor: string;\n    inactiveWarmColor: string;\n    coldColor: string;\n    warmColor: string;\n    hotColor: string;\n    overloadColor: string;\n}\ninterface LiveMeterUIState extends Omit<LiveMeterProps, \"thresholdLinear\" | \"thresholdDB\" | \"windowSize\" | \"speedLim\">, CanvasUIState {\n    value: number[];\n}\nexport class LiveMeterUI extends CanvasUI<LiveMeter, {}, LiveMeterUIState> {\n    state: LiveMeterUIState = {\n        ...this.state,\n        value: []\n    };\n    values: number[] = [];\n    maxValues: number[] = [];\n    maxTimer: number;\n    paint() {\n        const {\n            // width,\n            // height,\n            active,\n            mode,\n            value,\n            min,\n            max,\n            orientation,\n            bgColor,\n            coldColor,\n            warmColor,\n            hotColor,\n            overloadColor,\n            inactiveColdColor,\n            inactiveWarmColor\n        } = this.state;\n        const ctx = this.ctx;\n        if (!ctx) return;\n\n        let [width, height] = this.fullSize();\n        ctx.clearRect(0, 0, width, height);\n\n        this.values = value.slice();\n        if (this.values.length === 0) this.values = [min];\n        if (this.values.find((v, i) => typeof this.maxValues[i] === \"undefined\" || v > this.maxValues[i])) {\n            this.maxValues = [...this.values];\n            if (this.maxTimer) window.clearTimeout(this.maxTimer);\n            this.maxTimer = window.setTimeout(() => {\n                this.maxValues = [...this.values];\n                this.maxTimer = undefined;\n                this.schedulePaint();\n            }, 1000);\n        } else if (this.values.find((v, i) => v < this.maxValues[i]) && typeof this.maxTimer === \"undefined\") {\n            this.maxTimer = window.setTimeout(() => {\n                this.maxValues = [...this.values];\n                this.maxTimer = undefined;\n                this.schedulePaint();\n            }, 1000);\n        }\n        const channels = this.values.length;\n        const clipValue = +(mode === \"linear\");\n        if (orientation === \"vertical\") {\n            ctx.save();\n            ctx.translate(0, height);\n            ctx.rotate(-Math.PI * 0.5);\n            [height, width] = [width, height];\n        }\n        const $height = (height - channels - 1) / this.values.length;\n        ctx.fillStyle = bgColor;\n        if (min >= clipValue || clipValue >= max) {\n            const fgColor = min >= clipValue ? active ? overloadColor : inactiveWarmColor : active ? coldColor : inactiveColdColor;\n            let $top = 0;\n            this.values.forEach((v) => {\n                if (v < max) ctx.fillRect(0, $top, width, $height);\n                $top += $height + 1;\n            });\n            $top = 0;\n            ctx.fillStyle = fgColor;\n            this.values.forEach((v, i) => {\n                const distance = LiveUI.getDistance({ type: \"float\", value: v, min, max, exponent: 0 });\n                if (distance > 0) ctx.fillRect(0, $top, distance * width, $height);\n                const histMax = this.maxValues[i];\n                if (typeof histMax === \"number\" && histMax > v) {\n                    const histDistance = LiveUI.getDistance({ type: \"float\", value: histMax, min, max, exponent: 0 });\n                    ctx.fillRect(Math.min(width - 1, histDistance * width), $top, 1, $height);\n                }\n                $top += $height + 1;\n            });\n        } else {\n            const clipDistance = LiveUI.getDistance({ type: \"float\", value: clipValue, min, max, exponent: 0 });\n            const clip = width - clipDistance * width;\n            const hotStop = width - clip;\n            const warmStop = hotStop - 1;\n            const gradient = ctx.createLinearGradient(0, 0, width, 0);\n            gradient.addColorStop(0, active ? coldColor : inactiveColdColor);\n            gradient.addColorStop(warmStop / width, active ? warmColor : inactiveWarmColor);\n            gradient.addColorStop(hotStop / width, active ? hotColor : inactiveWarmColor);\n            gradient.addColorStop(1, active ? overloadColor : inactiveWarmColor);\n            let $top = 0;\n            this.values.forEach((v) => {\n                if (v < clipValue) ctx.fillRect(0, $top, warmStop, $height);\n                if (v < max) ctx.fillRect(hotStop, $top, clip, $height);\n                $top += $height + 1;\n            });\n            $top = 0;\n            ctx.fillStyle = gradient;\n            this.values.forEach((v, i) => {\n                const distance = LiveUI.getDistance({ type: \"float\", value: v, min, max, exponent: 0 });\n                if (distance > 0) ctx.fillRect(0, $top, Math.min(warmStop, distance * width), $height);\n                if (distance > clipDistance) ctx.fillRect(hotStop, $top, Math.min(clip, (distance - clipDistance) * width), $height);\n                const histMax = this.maxValues[i];\n                if (typeof histMax === \"number\" && histMax > v) {\n                    const histDistance = LiveUI.getDistance({ type: \"float\", value: histMax, min, max, exponent: 0 });\n                    if (histDistance <= clipDistance) ctx.fillRect(histDistance * width, $top, 1, $height);\n                    else ctx.fillRect(Math.min(width - 1, histDistance * width), $top, 1, $height);\n                }\n                $top += $height + 1;\n            });\n        }\n        if (orientation === \"vertical\") ctx.restore();\n    }\n}\nexport interface LiveMeterState {\n    node: TemporalAnalyserNode;\n    $requestTimer: number;\n}\n\nexport class LiveMeter extends BaseObject<{}, LiveMeterState, [], [number[]], [], LiveMeterProps, LiveMeterUIState> {\n    static package = LiveObject.package;\n    static author = LiveObject.author;\n    static version = LiveObject.version;\n    static description = \"Meter\";\n    static inlets: TMeta[\"inlets\"] = [{\n        isHot: true,\n        type: \"signal\",\n        description: \"Signal to measure\"\n    }];\n    static outlets: TMeta[\"outlets\"] = [{\n        type: \"object\",\n        description: \"Amplitude value: number[]\"\n    }];\n    static props: TMeta[\"props\"] = {\n        min: {\n            type: \"number\",\n            default: -70,\n            description: \"Minimum value (dB)\",\n            isUIState: true\n        },\n        max: {\n            type: \"number\",\n            default: 6,\n            description: \"Maximum value (dB)\",\n            isUIState: true\n        },\n        active: {\n            type: \"boolean\",\n            default: true,\n            description: \"Active state\",\n            isUIState: true\n        },\n        bgColor: {\n            type: \"color\",\n            default: \"rgb(40, 40, 40)\",\n            description: \"Background color\",\n            isUIState: true\n        },\n        inactiveColdColor: {\n            type: \"color\",\n            default: \"rgb(130, 130, 130)\",\n            description: \"Cold color (inactive)\",\n            isUIState: true\n        },\n        inactiveWarmColor: {\n            type: \"color\",\n            default: \"rgb(149, 149, 149)\",\n            description: \"Warm color (inactive)\",\n            isUIState: true\n        },\n        coldColor: {\n            type: \"color\",\n            default: \"rgb(12, 248, 100)\",\n            description: \"Cold color (active)\",\n            isUIState: true\n        },\n        warmColor: {\n            type: \"color\",\n            default: \"rgb(195, 248, 100)\",\n            description: \"Warm color (active)\",\n            isUIState: true\n        },\n        hotColor: {\n            type: \"color\",\n            default: \"rgb(255, 193, 10)\",\n            description: \"Hot color (active)\",\n            isUIState: true\n        },\n        overloadColor: {\n            type: \"color\",\n            default: \"rgb(255, 10, 10)\",\n            description: \"Overload color (active)\",\n            isUIState: true\n        },\n        orientation: {\n            type: \"enum\",\n            enums: [\"vertical\", \"horizontal\"],\n            default: \"horizontal\",\n            description: \"Meter orientation\",\n            isUIState: true\n        },\n        mode: {\n            type: \"enum\",\n            enums: [\"deciBel\", \"linear\"],\n            default: \"deciBel\",\n            description: \"Display mode\",\n            isUIState: true\n        },\n        speedLim: {\n            type: \"number\",\n            default: 16,\n            description: \"Value output speed limit in ms\"\n        },\n        frameRate: {\n            type: \"number\",\n            default: 60,\n            description: \"UI refresh rate\",\n            isUIState: true\n        },\n        windowSize: {\n            type: \"number\",\n            default: 1024,\n            description: \"RMS window size\"\n        },\n        thresholdDB: {\n            type: \"number\",\n            default: 0.1,\n            description: \"Redraw Threshold in dB\"\n        },\n        thresholdLinear: {\n            type: \"number\",\n            default: 0.01,\n            description: \"Redraw Threshold in Linear\"\n        }\n    };\n    static UI = LiveMeterUI;\n    state: LiveMeterState = { node: undefined, $requestTimer: -1 };\n    subscribe() {\n        super.subscribe();\n        const startRequest = () => {\n            let lastResult: number[] = [];\n            const request = async () => {\n                if (this.state.node && !this.state.node.destroyed) {\n                    const absMax = await this.state.node.getAbsMax();\n                    const mode = this.getProp(\"mode\");\n                    const thresh = this.getProp(mode === \"deciBel\" ? \"thresholdDB\" : \"thresholdLinear\");\n                    const result = mode === \"deciBel\" ? absMax.map(v => atodb(v)) : absMax;\n                    if (!lastResult.every((v, i) => v === result[i] || Math.abs(v - result[i]) < thresh) || lastResult.length !== result.length) {\n                        this.outlet(0, result);\n                        this.updateUI({ value: result });\n                        lastResult = result;\n                    }\n                }\n                scheduleRequest();\n            };\n            const scheduleRequest = () => {\n                this.state.$requestTimer = window.setTimeout(request, this.getProp(\"speedLim\"));\n            };\n            request();\n        };\n        this.on(\"preInit\", () => {\n            this.inlets = 1;\n            this.outlets = 1;\n        });\n        this.on(\"updateProps\", (props) => {\n            if (props.windowSize && this.state.node) this.applyBPF(this.state.node.parameters.get(\"windowSize\"), [[props.windowSize]]);\n        });\n        this.on(\"postInit\", async () => {\n            await TemporalAnalyserNode.register(this.audioCtx.audioWorklet);\n            this.state.node = new TemporalAnalyserNode(this.audioCtx);\n            this.applyBPF(this.state.node.parameters.get(\"windowSize\"), [[this.getProp(\"windowSize\")]]);\n            this.disconnectAudioInlet();\n            this.inletAudioConnections[0] = { node: this.state.node, index: 0 };\n            this.connectAudioInlet();\n            startRequest();\n        });\n        this.on(\"destroy\", () => {\n            window.clearTimeout(this.state.$requestTimer);\n            if (this.state.node) this.state.node.destroy();\n        });\n    }\n}\n","import { LiveUI, LiveObject, LiveUIState } from \"./Base\";\nimport { TMeta } from \"../../types\";\nimport { Bang, isBang } from \"../Base\";\nimport { normExp } from \"../../../utils/math\";\n\ninterface LiveNumboxProps extends LiveUIProps {\n    bgColor: string;\n    activeBgColor: string;\n    borderColor: string;\n    focusBorderColor: string;\n    textColor: string;\n    fontFamily: string;\n    fontSize: number;\n    fontFace: \"regular\" | \"bold\" | \"italic\" | \"bold italic\";\n    appearance: \"slider\" | \"triangle\" | \"default\";\n    triColor: string;\n    activeTriColor: string;\n    triColor2: string;\n    activeTriColor2: string;\n    activeSliderColor: string;\n}\ninterface LiveNumboxUIState extends LiveNumboxProps, LiveUIState {\n    inputBuffer: string;\n}\nclass LiveNumboxUI extends LiveUI<LiveNumbox, LiveNumboxUIState> {\n    state: LiveNumboxUIState = {\n        ...this.state,\n        inputBuffer: \"\"\n    };\n    className = \"live-numbox\";\n    paint() {\n        const {\n            // width,\n            // height,\n            active,\n            focus,\n            fontFamily,\n            fontSize,\n            fontFace,\n            appearance,\n            bgColor,\n            activeBgColor,\n            borderColor,\n            focusBorderColor,\n            textColor,\n            triColor,\n            activeTriColor,\n            triColor2,\n            activeTriColor2,\n            activeSliderColor,\n            inputBuffer\n        } = this.state;\n        const ctx = this.ctx;\n        if (!ctx) return;\n        const distance = this.distance;\n        const displayValue = inputBuffer ? inputBuffer + \"_\" : this.displayValue;\n\n        const [width, height] = this.fullSize();\n        ctx.clearRect(0, 0, width, height);\n\n        // draw background\n        ctx.fillStyle = active ? activeBgColor : bgColor;\n        ctx.rect(0, 0, width, height);\n        ctx.fill();\n\n        if (appearance === \"slider\" && active && distance) {\n            ctx.fillStyle = activeSliderColor;\n            ctx.fillRect(0, 0, distance * width, height);\n        }\n\n        // draw border (eventually we might need to redefine the shape)\n        ctx.lineWidth = 1;\n        ctx.strokeStyle = focus ? focusBorderColor : borderColor;\n        ctx.stroke();\n\n        if (appearance === \"triangle\") {\n            const triangleHeight = 8;\n            ctx.fillStyle = active ? (distance ? activeTriColor2 : activeTriColor) : (distance ? triColor2 : triColor);\n            ctx.beginPath();\n            ctx.moveTo(width - triangleHeight - 1, height * 0.5);\n            ctx.lineTo(width - 1, 1);\n            ctx.lineTo(width - 1, height - 1);\n            ctx.closePath();\n            ctx.fill();\n        }\n        // display the text\n        ctx.font = `${fontFace === \"regular\" ? \"\" : fontFace} ${fontSize}px ${fontFamily}, sans-serif`;\n        ctx.fillStyle = textColor;\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"middle\";\n        ctx.fillText(displayValue, width * 0.5, height * 0.5, width);\n    }\n    getValueFromDelta(e: PointerDragEvent) {\n        const { type, min, max, enums, exponent } = this.state;\n        const step = type === \"enum\" ? 1 : (this.state.step || 1);\n        const totalPixels = 100;\n        const stepsCount = this.stepsCount;\n        const stepPixels = totalPixels / stepsCount;\n        const prevPixels = LiveUI.getDistance({ value: e.prevValue, type, min, max, enums, exponent }) * totalPixels;\n        const pixels = prevPixels + e.fromY - e.y;\n        let steps = Math.round(normExp(pixels / totalPixels, exponent) * totalPixels / stepPixels);\n        steps = Math.min(stepsCount, Math.max(0, steps));\n        if (type === \"enum\") return steps;\n        if (type === \"int\") return Math.round(steps * step + min);\n        return steps * step + min;\n    }\n    handlePointerDrag = (e: PointerDragEvent) => {\n        const newValue = this.getValueFromDelta(e);\n        if (newValue !== this.state.value) this.setValueToOutput(newValue);\n    };\n    handleKeyDown = (e: React.KeyboardEvent) => {\n        if (!this.state.inputBuffer) {\n            let addStep = 0;\n            if (e.key === \"ArrowUp\" || e.key === \"ArrowRight\") addStep = 1;\n            if (e.key === \"ArrowDown\" || e.key === \"ArrowLeft\") addStep = -1;\n            if (addStep !== 0) {\n                const newValue = this.object.toValidValue(this.state.value + this.state.step * addStep);\n                if (newValue !== this.state.value) this.setValueToOutput(newValue);\n            }\n        }\n        if (e.key.match(/[0-9.-]/)) {\n            this.setState({ inputBuffer: this.state.inputBuffer + e.key });\n            return;\n        }\n        if (e.key === \"Backspace\") {\n            this.setState({ inputBuffer: this.state.inputBuffer.slice(0, -1) });\n            return;\n        }\n        if (e.key === \"Enter\") {\n            const newValue = this.object.toValidValue(+this.state.inputBuffer);\n            this.setState({ inputBuffer: \"\" });\n            if (newValue !== this.state.value) this.setValueToOutput(newValue);\n        }\n    };\n    handleFocusOut = () => {\n        if (this.state.inputBuffer) {\n            const newValue = this.object.toValidValue(+this.state.inputBuffer);\n            this.setState({ inputBuffer: \"\" });\n            if (newValue !== this.state.value) this.setValueToOutput(newValue);\n        }\n        this.setState({ focus: false });\n    };\n}\n\nexport class LiveNumbox extends LiveObject<{}, {}, [number | Bang, number], [number, string], [number], LiveNumboxProps, LiveNumboxUIState> {\n    static description = \"Number box\";\n    static inlets: TMeta[\"inlets\"] = [{\n        isHot: true,\n        type: \"number\",\n        description: \"Set and output the value\"\n    }, {\n        isHot: false,\n        type: \"number\",\n        description: \"Set without output the value\"\n    }];\n    static outlets: TMeta[\"outlets\"] = [{\n        type: \"number\",\n        description: \"Number value\"\n    }, {\n        type: \"string\",\n        description: \"Display value\"\n    }];\n    static args: TMeta[\"args\"] = [{\n        type: \"number\",\n        optional: true,\n        default: 0,\n        description: \"Initial value\"\n    }];\n    static props: TMeta[\"props\"] = {\n        bgColor: {\n            type: \"color\",\n            default: \"rgba(195, 195, 195, 1)\",\n            description: \"Background color (inactive)\",\n            isUIState: true\n        },\n        activeBgColor: {\n            type: \"color\",\n            default: \"rgba(195, 195, 195, 1)\",\n            description: \"Background color (active)\",\n            isUIState: true\n        },\n        borderColor: {\n            type: \"color\",\n            default: \"rgba(80, 80, 80, 1)\",\n            description: \"Border color (unfocus)\",\n            isUIState: true\n        },\n        focusBorderColor: {\n            type: \"color\",\n            default: \"rgba(80, 80, 80, 1)\",\n            description: \"Border color (focus)\",\n            isUIState: true\n        },\n        textColor: {\n            type: \"color\",\n            default: \"rgba(0, 0, 0, 1)\",\n            description: \"Text color\",\n            isUIState: true\n        },\n        fontFamily: {\n            type: \"enum\",\n            enums: [\"Lato\", \"Georgia\", \"Times New Roman\", \"Arial\", \"Tahoma\", \"Verdana\", \"Courier New\"],\n            default: \"Arial\",\n            description: \"Font family\",\n            isUIState: true\n        },\n        fontSize: {\n            type: \"number\",\n            default: 10,\n            description: \"Text font size\",\n            isUIState: true\n        },\n        fontFace: {\n            type: \"enum\",\n            enums: [\"regular\", \"bold\", \"italic\", \"bold italic\"],\n            default: \"regular\",\n            description: \"Text style\",\n            isUIState: true\n        },\n        appearance: {\n            type: \"enum\",\n            enums: [\"default\", \"slider\", \"triangle\"],\n            default: \"default\",\n            description: \"Text style\",\n            isUIState: true\n        },\n        triColor: {\n            type: \"color\",\n            default: \"rgba(195, 195, 195, 1)\",\n            description: \"Triangle color (inactive)\",\n            isUIState: true\n        },\n        activeTriColor: {\n            type: \"color\",\n            default: \"rgba(165, 165, 165, 1)\",\n            description: \"Triangle color (active)\",\n            isUIState: true\n        },\n        triColor2: {\n            type: \"color\",\n            default: \"rgba(165, 165, 165, 1)\",\n            description: \"Triangle color on positive value (inactive)\",\n            isUIState: true\n        },\n        activeTriColor2: {\n            type: \"color\",\n            default: \"rgba(109, 215, 255, 1)\",\n            description: \"Triangle color on positive value (active)\",\n            isUIState: true\n        },\n        activeSliderColor: {\n            type: \"color\",\n            default: \"rgba(109, 215, 255, 1)\",\n            description: \"Slider color\",\n            isUIState: true\n        }\n    };\n    static UI = LiveNumboxUI;\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 2;\n            this.outlets = 2;\n        });\n        this.on(\"updateArgs\", (args) => {\n            if (typeof args[0] === \"number\") {\n                this.state.value = args[0];\n                this.validateValue();\n                this.updateUI({ value: this.state.value });\n            }\n        });\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) {\n                if (!isBang(data)) {\n                    const value = +data;\n                    this.state.value = value;\n                    this.validateValue();\n                    this.updateUI({ value: this.state.value });\n                }\n                this.outletAll([this.state.value, this.state.displayValue]);\n            } else if (inlet === 1) {\n                const value = +data;\n                this.state.value = value;\n                this.validateValue();\n                this.updateUI({ value: this.state.value });\n            }\n        });\n        this.on(\"changeFromUI\", ({ value, displayValue }) => {\n            this.state.value = value;\n            this.state.displayValue = displayValue;\n            this.outletAll([this.state.value, this.state.displayValue]);\n        });\n    }\n}\n","import { LiveUI, LiveObject, LiveUIState } from \"./Base\";\nimport { TMeta } from \"../../types\";\nimport { Bang, isBang } from \"../Base\";\nimport { normExp } from \"../../../utils/math\";\n\nexport interface LiveSliderProps extends LiveUIProps {\n    relative: boolean;\n    sliderColor: string;\n    triBorderColor: string;\n    triColor: string;\n    triOnColor: string;\n    textColor: string;\n    fontFamily: string;\n    fontSize: number;\n    fontFace: \"regular\" | \"bold\" | \"italic\" | \"bold italic\";\n    orientation: \"vertical\" | \"horizontal\";\n    showName: boolean;\n    showNumber: boolean;\n}\ninterface LiveSliderUIState extends LiveSliderProps, LiveUIState {\n    inputBuffer: string;\n}\nclass LiveSliderUI extends LiveUI<LiveSlider, LiveSliderUIState> {\n    static defaultSize: [number, number] = [120, 45];\n    state: LiveSliderUIState = {\n        ...this.state,\n        inputBuffer: \"\"\n    };\n    className = \"live-slider\";\n    interactionRect: number[] = [0, 0, 0, 0];\n    inTouch = false;\n    paint() {\n        const {\n            // width,\n            // height,\n            fontFamily,\n            fontSize,\n            fontFace,\n            orientation,\n            showName,\n            showNumber,\n            sliderColor,\n            textColor,\n            triBorderColor,\n            triOnColor,\n            triColor,\n            shortName,\n            inputBuffer\n        } = this.state;\n        const ctx = this.ctx;\n        if (!ctx) return;\n        const lineWidth = 0.5;\n        const padding = 8;\n        const distance = this.distance;\n        const displayValue = inputBuffer ? inputBuffer + \"_\" : this.displayValue;\n\n        const [width, height] = this.fullSize();\n        ctx.clearRect(0, 0, width, height);\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = sliderColor;\n\n        if (orientation === \"vertical\") {\n            ctx.beginPath();\n            ctx.moveTo(width * 0.5, fontSize + padding);\n            ctx.lineTo(width * 0.5, height - (fontSize + padding));\n            ctx.stroke();\n\n            const interactionWidth = width * 0.5;\n            this.interactionRect = [\n                width * 0.5 - interactionWidth * 0.5,\n                fontSize + padding,\n                interactionWidth,\n                height - 2 * (fontSize + padding)\n            ];\n\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = triBorderColor;\n            const triOrigin: [number, number] = [\n                width * 0.5 + lineWidth * 0.5 + 0.5,\n                this.interactionRect[1] - 4 + this.interactionRect[3] * (1 - distance)\n            ];\n            ctx.beginPath();\n            ctx.moveTo(triOrigin[0], triOrigin[1] + 4);\n            ctx.lineTo(triOrigin[0] + 8, triOrigin[1]);\n            ctx.lineTo(triOrigin[0] + 8, triOrigin[1] + 8);\n            ctx.lineTo(triOrigin[0], triOrigin[1] + 4);\n            ctx.stroke();\n\n            ctx.fillStyle = this.inTouch ? triOnColor : triColor;\n            ctx.fill();\n\n            ctx.font = `${fontFace === \"regular\" ? \"\" : fontFace} ${fontSize}px ${fontFamily}, sans-serif`;\n            ctx.textAlign = \"center\";\n            ctx.fillStyle = textColor;\n            if (showName) ctx.fillText(shortName, width * 0.5, fontSize, width);\n            if (showNumber) ctx.fillText(displayValue, width * 0.5, height - 2, width);\n        } else {\n            ctx.beginPath();\n            ctx.moveTo(padding, height * 0.5);\n            ctx.lineTo(width - padding, height * 0.5);\n            ctx.stroke();\n\n            const interactionWidth = height * 0.5;\n            this.interactionRect = [\n                padding,\n                height * 0.5 - interactionWidth * 0.5,\n                width - 2 * padding,\n                interactionWidth\n            ];\n\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = triBorderColor;\n            const triOrigin: [number, number] = [\n                this.interactionRect[0] + this.interactionRect[2] * distance - 4,\n                height * 0.5 + lineWidth * 0.5 + 2\n            ];\n            ctx.beginPath();\n            ctx.moveTo(triOrigin[0], triOrigin[1] + 8);\n            ctx.lineTo(triOrigin[0] + 4, triOrigin[1]);\n            ctx.lineTo(triOrigin[0] + 8, triOrigin[1] + 8);\n            ctx.lineTo(triOrigin[0], triOrigin[1] + 8);\n            ctx.stroke();\n\n            ctx.fillStyle = this.inTouch ? triOnColor : triColor;\n            ctx.fill();\n\n            ctx.font = `${fontFace === \"regular\" ? \"\" : fontFace} ${fontSize}px ${fontFamily}, sans-serif`;\n            ctx.textAlign = \"center\";\n            ctx.fillStyle = textColor;\n            if (showName) ctx.fillText(shortName, width * 0.5, fontSize, width);\n            ctx.textAlign = \"left\";\n            if (showNumber) ctx.fillText(displayValue, 4, height - 2, width);\n        }\n    }\n    getValueFromPos(e: PointerDownEvent) {\n        const { orientation, type, min, exponent } = this.state;\n        const step = type === \"enum\" ? 1 : (this.state.step || 1);\n        const totalPixels = orientation === \"vertical\" ? this.interactionRect[3] : this.interactionRect[2];\n        const stepsCount = this.stepsCount;\n        const stepPixels = totalPixels / stepsCount;\n        const pixels = orientation === \"vertical\" ? this.interactionRect[3] - (e.y - this.interactionRect[1]) : e.x - this.interactionRect[0];\n        let steps = Math.round(normExp(pixels / totalPixels, exponent) * totalPixels / stepPixels);\n        steps = Math.min(stepsCount, Math.max(0, steps));\n        if (type === \"enum\") return steps;\n        if (type === \"int\") return Math.round(steps * step + min);\n        return steps * step + min;\n    }\n    getValueFromDelta(e: PointerDragEvent) {\n        const { type, min, max, enums, exponent, orientation } = this.state;\n        const step = type === \"enum\" ? 1 : (this.state.step || 1);\n        const totalPixels = orientation === \"horizontal\" ? this.interactionRect[2] : this.interactionRect[3];\n        const stepsCount = this.stepsCount;\n        const stepPixels = totalPixels / stepsCount;\n        const prevPixels = LiveUI.getDistance({ value: e.prevValue, type, min, max, enums, exponent }) * totalPixels;\n        const pixels = prevPixels + (orientation === \"horizontal\" ? e.x - e.fromX : e.fromY - e.y);\n        let steps = Math.round(normExp(pixels / totalPixels, exponent) * totalPixels / stepPixels);\n        steps = Math.min(stepsCount, Math.max(0, steps));\n        if (type === \"enum\") return steps;\n        if (type === \"int\") return Math.round(steps * step + min);\n        return steps * step + min;\n    }\n    handlePointerDown = (e: PointerDownEvent) => {\n        if (\n            e.x < this.interactionRect[0]\n            || e.x > this.interactionRect[0] + this.interactionRect[2]\n            || e.y < this.interactionRect[1]\n            || e.y > this.interactionRect[1] + this.interactionRect[3]\n        ) return;\n        if (!this.state.relative) {\n            const newValue = this.getValueFromPos(e);\n            if (newValue !== this.state.value) this.setValueToOutput(newValue);\n        }\n        this.inTouch = true;\n    };\n    handlePointerDrag = (e: PointerDragEvent) => {\n        if (!this.inTouch) return;\n        let newValue;\n        if (this.state.relative) newValue = this.getValueFromDelta(e);\n        else newValue = this.getValueFromPos(e);\n        if (newValue !== this.state.value) this.setValueToOutput(newValue);\n    };\n    handlePointerUp = () => {\n        this.inTouch = false;\n    };\n    handleKeyDown = (e: React.KeyboardEvent) => {\n        if (!this.state.inputBuffer) {\n            let addStep = 0;\n            if (e.key === \"ArrowUp\" || e.key === \"ArrowRight\") addStep = 1;\n            if (e.key === \"ArrowDown\" || e.key === \"ArrowLeft\") addStep = -1;\n            if (addStep !== 0) {\n                const newValue = this.object.toValidValue(this.state.value + this.state.step * addStep);\n                if (newValue !== this.state.value) this.setValueToOutput(newValue);\n            }\n        }\n        if (e.key.match(/[0-9.-]/)) {\n            this.setState({ inputBuffer: this.state.inputBuffer + e.key });\n            return;\n        }\n        if (e.key === \"Backspace\") {\n            this.setState({ inputBuffer: this.state.inputBuffer.slice(0, -1) });\n            return;\n        }\n        if (e.key === \"Enter\") {\n            const newValue = this.object.toValidValue(+this.state.inputBuffer);\n            this.setState({ inputBuffer: \"\" });\n            if (newValue !== this.state.value) this.setValueToOutput(newValue);\n        }\n    };\n    handleFocusOut = () => {\n        if (this.state.inputBuffer) {\n            const newValue = this.object.toValidValue(+this.state.inputBuffer);\n            this.setState({ inputBuffer: \"\" });\n            if (newValue !== this.state.value) this.setValueToOutput(newValue);\n        }\n        this.setState({ focus: false });\n    };\n}\n\nexport class LiveSlider extends LiveObject<{}, {}, [number | Bang, number], [number, string], [number], LiveSliderProps, LiveSliderUIState> {\n    static description = \"Slider\";\n    static inlets: TMeta[\"inlets\"] = [{\n        isHot: true,\n        type: \"number\",\n        description: \"Set and output the value\"\n    }, {\n        isHot: false,\n        type: \"number\",\n        description: \"Set without output the value\"\n    }];\n    static outlets: TMeta[\"outlets\"] = [{\n        type: \"number\",\n        description: \"Number value\"\n    }, {\n        type: \"string\",\n        description: \"Display value\"\n    }];\n    static args: TMeta[\"args\"] = [{\n        type: \"number\",\n        optional: true,\n        default: 0,\n        description: \"Initial value\"\n    }];\n    static props: TMeta[\"props\"] = {\n        shortName: {\n            type: \"string\",\n            default: \"live.slider\",\n            description: \"Short name to display\",\n            isUIState: true\n        },\n        longName: {\n            type: \"string\",\n            default: \"live.slider\",\n            description: \"Long name to display\",\n            isUIState: true\n        },\n        relative: {\n            type: \"boolean\",\n            default: false,\n            description: \"Modify value use relative mouse move\",\n            isUIState: true\n        },\n        sliderColor: {\n            type: \"color\",\n            default: \"rgba(195, 195, 195, 1)\",\n            description: \"Slider color\",\n            isUIState: true\n        },\n        triBorderColor: {\n            type: \"color\",\n            default: \"rgba(80, 80, 80, 1)\",\n            description: \"Triangle border color\",\n            isUIState: true\n        },\n        triColor: {\n            type: \"color\",\n            default: \"rgba(165, 165, 165, 1)\",\n            description: \"Triangle color\",\n            isUIState: true\n        },\n        triOnColor: {\n            type: \"color\",\n            default: \"rgba(195, 195, 195, 1)\",\n            description: \"Triangle color while on\",\n            isUIState: true\n        },\n        textColor: {\n            type: \"color\",\n            default: \"rgba(255, 255, 255, 1)\",\n            description: \"Text color\",\n            isUIState: true\n        },\n        fontFamily: {\n            type: \"enum\",\n            enums: [\"Lato\", \"Georgia\", \"Times New Roman\", \"Arial\", \"Tahoma\", \"Verdana\", \"Courier New\"],\n            default: \"Arial\",\n            description: \"Font family\",\n            isUIState: true\n        },\n        fontSize: {\n            type: \"number\",\n            default: 10,\n            description: \"Text font size\",\n            isUIState: true\n        },\n        fontFace: {\n            type: \"enum\",\n            enums: [\"regular\", \"bold\", \"italic\", \"bold italic\"],\n            default: \"regular\",\n            description: \"Text style\",\n            isUIState: true\n        },\n        orientation: {\n            type: \"enum\",\n            enums: [\"vertical\", \"horizontal\"],\n            default: \"horizontal\",\n            description: \"Slider orientation\",\n            isUIState: true\n        },\n        showName: {\n            type: \"boolean\",\n            default: true,\n            description: \"Display name\",\n            isUIState: true\n        },\n        showNumber: {\n            type: \"boolean\",\n            default: true,\n            description: \"Display number as text\",\n            isUIState: true\n        }\n    };\n    static UI = LiveSliderUI;\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 2;\n            this.outlets = 2;\n        });\n        this.on(\"updateArgs\", (args) => {\n            if (typeof args[0] === \"number\") {\n                this.state.value = args[0];\n                this.validateValue();\n                this.updateUI({ value: this.state.value });\n            }\n        });\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) {\n                if (!isBang(data)) {\n                    const value = +data;\n                    this.state.value = value;\n                    this.validateValue();\n                    this.updateUI({ value: this.state.value });\n                }\n                this.outletAll([this.state.value, this.state.displayValue]);\n            } else if (inlet === 1) {\n                const value = +data;\n                this.state.value = value;\n                this.validateValue();\n                this.updateUI({ value: this.state.value });\n            }\n        });\n        this.on(\"changeFromUI\", ({ value, displayValue }) => {\n            this.state.value = value;\n            this.state.displayValue = displayValue;\n            this.outletAll([this.state.value, this.state.displayValue]);\n        });\n    }\n}\n","import { LiveUI, LiveObject, LiveUIState } from \"./Base\";\nimport { TMeta, TRect } from \"../../types\";\nimport { Bang, isBang } from \"../Base\";\n\ninterface LiveTabProps extends LiveUIProps {\n    bgColor: string;\n    bgOnColor: string;\n    activeBgColor: string;\n    activeBgOnColor: string;\n    borderColor: string;\n    focusBorderColor: string;\n    textColor: string;\n    textOnColor: string;\n    activeTextColor: string;\n    activeTextOnColor: string;\n    fontFamily: string;\n    fontSize: number;\n    fontFace: \"regular\" | \"bold\" | \"italic\" | \"bold italic\";\n    mode: \"equal\" | \"proportional\";\n    spacingX: number;\n    spacingY: number;\n    multiline: boolean;\n}\ninterface LiveTabUIState extends LiveTabProps, LiveUIState {}\nclass LiveTabUI extends LiveUI<LiveTab, LiveTabUIState> {\n    static defaultSize: [number, number] = [120, 15];\n    className = \"live-tab\";\n    tabRects: TRect[] = [];\n    inTouch = false;\n    getTabRects(width: number, height: number) {\n        const {\n            // width,\n            // height,\n            multiline,\n            mode,\n            enums,\n            spacingX: spacingXIn,\n            spacingY: spacingYIn\n        } = this.state;\n        const margin = 4;\n        const minHeight = 10;\n        const count = enums.length;\n        let countPerLine = count;\n        let lines = 1;\n        let step = height / lines;\n        let interval = 0;\n        let rectWidth = 0;\n        const spacingX = spacingXIn * 0.5;\n        const spacingY = spacingYIn * 0.5;\n\n        if (multiline && height >= 2 * minHeight) {\n            lines = Math.max(1, Math.min(count, Math.floor(height / minHeight)));\n            countPerLine = Math.ceil(count / lines);\n            // if there's not enough height, increase the number of tabs per row\n            while (lines * countPerLine < count) {\n                countPerLine++;\n                if (lines > 1) lines--;\n            }\n            // if there's extra height, reduce the number of rows\n            while (lines * countPerLine > count && (lines - 1) * countPerLine >= count) {\n                lines--;\n            }\n            step = height / lines;\n        }\n        if (mode === \"equal\") {\n            interval = width / countPerLine;\n            rectWidth = interval - spacingX;\n            for (let i = 0; i < count; i++) {\n                this.tabRects[i] = [\n                    (i % countPerLine) * interval + spacingX * 0.5,\n                    Math.floor(i / countPerLine) * step + spacingY * 0.5,\n                    rectWidth,\n                    (height / lines) - spacingY\n                ];\n            }\n        } else {\n            const textWidths = [];\n            for (let i = 0; i < lines; i++) {\n                let total = 0;\n                let space = width;\n                for (let j = i * countPerLine; j < Math.min((i + 1) * countPerLine, count); j++) {\n                    const textDimensions = this.ctx.measureText(enums[j]);\n                    textWidths[j] = textDimensions.width;\n                    total += textWidths[j];\n                    space -= 2 * margin + spacingX;\n                }\n                let used = 0;\n                for (let j = i * countPerLine; j < Math.min((i + 1) * countPerLine, count); j++) {\n                    const rectSpace = textWidths[j] / total;\n                    this.tabRects[j] = [\n                        used + spacingX * 0.5,\n                        i * step + spacingY * 0.5,\n                        space * rectSpace + 2 * margin,\n                        height / lines - spacingY\n                    ];\n                    used += this.tabRects[j][2] + spacingX;\n                }\n            }\n        }\n        return this.tabRects;\n    }\n    paint() {\n        const {\n            active,\n            focus,\n            fontFamily,\n            fontSize,\n            fontFace,\n            activeBgColor,\n            activeBgOnColor,\n            bgColor,\n            bgOnColor,\n            borderColor,\n            focusBorderColor,\n            textColor,\n            textOnColor,\n            activeTextColor,\n            activeTextOnColor,\n            enums,\n            value\n        } = this.state;\n        const ctx = this.ctx;\n        if (!ctx) return;\n        const [width, height] = this.fullSize();\n        const tabRects = this.getTabRects(width, height);\n\n        const borderWidth = 0.5;\n\n        ctx.clearRect(0, 0, width, height);\n        ctx.lineWidth = borderWidth;\n\n        const buttonBorderColor = focus ? focusBorderColor : borderColor;\n        for (let i = 0; i < enums.length; i++) {\n            const buttonBgColor = active ? (value === i ? activeBgOnColor : activeBgColor) : (value === i ? bgOnColor : bgColor);\n            ctx.fillStyle = buttonBgColor;\n            ctx.beginPath();\n            ctx.rect(...tabRects[i]);\n            ctx.fill();\n            ctx.strokeStyle = buttonBorderColor;\n            ctx.stroke();\n\n            ctx.font = `${fontFace === \"regular\" ? \"\" : fontFace} ${fontSize}px ${fontFamily}, sans-serif`;\n            ctx.textAlign = \"center\";\n            ctx.textBaseline = \"middle\";\n            ctx.fillStyle = active ? (value === i ? activeTextOnColor : activeTextColor) : (value === i ? textOnColor : textColor);\n            ctx.fillText(enums[i], tabRects[i][0] + tabRects[i][2] * 0.5, tabRects[i][1] + tabRects[i][3] * 0.5);\n        }\n    }\n    handlePointerDown = (e: PointerDownEvent) => {\n        this.inTouch = true;\n        for (let i = 0; i < this.tabRects.length; i++) {\n            const rect = this.tabRects[i];\n            if (e.x >= rect[0] && e.x <= rect[2] + rect[0] && e.y >= rect[1] && e.y <= rect[3] + rect[1]) {\n                this.setValueToOutput(i);\n                return;\n            }\n        }\n    };\n    handlePointerDrag = (e: PointerDragEvent) => {\n        this.handlePointerDown(e);\n    };\n    handleKeyDown = (e: React.KeyboardEvent) => {\n        let addStep = 0;\n        if (e.key === \"ArrowUp\" || e.key === \"ArrowRight\") addStep = 1;\n        if (e.key === \"ArrowDown\" || e.key === \"ArrowLeft\") addStep = -1;\n        if (addStep !== 0) {\n            const newValue = this.object.toValidValue(this.state.value + this.state.step * addStep);\n            if (newValue !== this.state.value) this.setValueToOutput(newValue);\n        }\n    };\n}\n\nexport class LiveTab extends LiveObject<{}, {}, [number | Bang, number], [number, string], [number], LiveTabProps, LiveTabUIState> {\n    static description = \"Buttons as tab\";\n    static inlets: TMeta[\"inlets\"] = [{\n        isHot: true,\n        type: \"number\",\n        description: \"Set and output the value\"\n    }, {\n        isHot: false,\n        type: \"number\",\n        description: \"Set without output the value\"\n    }];\n    static outlets: TMeta[\"outlets\"] = [{\n        type: \"number\",\n        description: \"Number value\"\n    }, {\n        type: \"string\",\n        description: \"Display value\"\n    }];\n    static args: TMeta[\"args\"] = [{\n        type: \"number\",\n        optional: true,\n        default: 0,\n        description: \"Initial value\"\n    }];\n    static props: TMeta[\"props\"] = {\n        bgColor: {\n            type: \"color\",\n            default: \"rgba(165, 165, 165, 1)\",\n            description: \"Background color (inactive / off)\",\n            isUIState: true\n        },\n        activeBgColor: {\n            type: \"color\",\n            default: \"rgba(165, 165, 165, 1)\",\n            description: \"Background color (active / off)\",\n            isUIState: true\n        },\n        bgOnColor: {\n            type: \"color\",\n            default: \"rgba(165, 165, 165, 1)\",\n            description: \"Background color (inactive / on)\",\n            isUIState: true\n        },\n        activeBgOnColor: {\n            type: \"color\",\n            default: \"rgba(255, 181, 50, 1)\",\n            description: \"Background color (active / on)\",\n            isUIState: true\n        },\n        borderColor: {\n            type: \"color\",\n            default: \"rgba(80, 80, 80, 1)\",\n            description: \"Border color (unfocus)\",\n            isUIState: true\n        },\n        focusBorderColor: {\n            type: \"color\",\n            default: \"rgba(80, 80, 80, 1)\",\n            description: \"Border color (focus)\",\n            isUIState: true\n        },\n        textColor: {\n            type: \"color\",\n            default: \"rgba(90, 90, 90, 1)\",\n            description: \"Text color (inactive / off)\",\n            isUIState: true\n        },\n        textOnColor: {\n            type: \"color\",\n            default: \"rgba(90, 90, 90, 1)\",\n            description: \"Text color (inactive / on)\",\n            isUIState: true\n        },\n        activeTextColor: {\n            type: \"color\",\n            default: \"rgba(0, 0, 0, 1)\",\n            description: \"Text color (active / off)\",\n            isUIState: true\n        },\n        activeTextOnColor: {\n            type: \"color\",\n            default: \"rgba(0, 0, 0, 1)\",\n            description: \"Text color (active / on)\",\n            isUIState: true\n        },\n        fontFamily: {\n            type: \"enum\",\n            enums: [\"Lato\", \"Georgia\", \"Times New Roman\", \"Arial\", \"Tahoma\", \"Verdana\", \"Courier New\"],\n            default: \"Arial\",\n            description: \"Font family\",\n            isUIState: true\n        },\n        fontSize: {\n            type: \"number\",\n            default: 10,\n            description: \"Text font size\",\n            isUIState: true\n        },\n        fontFace: {\n            type: \"enum\",\n            enums: [\"regular\", \"bold\", \"italic\", \"bold italic\"],\n            default: \"regular\",\n            description: \"Text style\",\n            isUIState: true\n        },\n        mode: {\n            type: \"enum\",\n            enums: [\"equal\", \"proportional\"],\n            default: \"equal\",\n            description: \"Spacing mode\",\n            isUIState: true\n        },\n        spacingX: {\n            type: \"number\",\n            default: 6,\n            description: \"Tab horizontal spacing\",\n            isUIState: true\n        },\n        spacingY: {\n            type: \"number\",\n            default: 6,\n            description: \"Tab vertical spacing\",\n            isUIState: true\n        },\n        multiline: {\n            type: \"boolean\",\n            default: true,\n            description: \"Multi-line tabs\",\n            isUIState: true\n        },\n        enums: {\n            type: \"object\",\n            default: [\"one\", \"two\", \"three\"],\n            description: \"Enum values\",\n            isUIState: true\n        }\n    };\n    static UI = LiveTabUI;\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 2;\n            this.outlets = 2;\n        });\n        this.on(\"updateArgs\", (args) => {\n            if (typeof args[0] === \"number\") {\n                this.state.value = args[0];\n                this.validateValue();\n                this.updateUI({ value: this.state.value });\n            }\n        });\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) {\n                if (!isBang(data)) {\n                    const value = +data;\n                    this.state.value = value;\n                    this.validateValue();\n                    this.updateUI({ value: this.state.value });\n                }\n                this.outletAll([this.state.value, this.state.displayValue]);\n            } else if (inlet === 1) {\n                const value = +data;\n                this.state.value = value;\n                this.validateValue();\n                this.updateUI({ value: this.state.value });\n            }\n        });\n        this.on(\"changeFromUI\", ({ value, displayValue }) => {\n            this.state.value = value;\n            this.state.displayValue = displayValue;\n            this.outletAll([this.state.value, this.state.displayValue]);\n        });\n    }\n}\n","import { LiveUI, LiveObject, LiveUIState } from \"./Base\";\nimport { TMeta } from \"../../types\";\nimport { Bang, isBang } from \"../Base\";\nimport { fillRoundedRect } from \"../../../utils/utils\";\n\ninterface LiveTextProps extends LiveUIProps {\n    bgColor: string;\n    bgOnColor: string;\n    activeBgColor: string;\n    activeBgOnColor: string;\n    borderColor: string;\n    focusBorderColor: string;\n    textColor: string;\n    textOnColor: string;\n    activeTextColor: string;\n    activeTextOnColor: string;\n    fontFamily: string;\n    fontSize: number;\n    fontFace: \"regular\" | \"bold\" | \"italic\" | \"bold italic\";\n    mode: \"button\" | \"toggle\";\n    text: string;\n    textOn: string;\n}\ninterface LiveTextUIState extends LiveTextProps, LiveUIState {}\nclass LiveTextUI extends LiveUI<LiveText, LiveTextUIState> {\n    className = \"live-text\";\n    inTouch = false;\n    paint() {\n        const {\n            // width,\n            // height,\n            active,\n            focus,\n            fontFamily,\n            fontSize,\n            fontFace,\n            activeBgColor,\n            activeBgOnColor,\n            bgColor,\n            bgOnColor,\n            borderColor,\n            focusBorderColor,\n            textColor,\n            textOnColor,\n            activeTextColor,\n            activeTextOnColor,\n            mode,\n            text,\n            textOn,\n            value\n        } = this.state;\n        const ctx = this.ctx;\n        if (!ctx) return;\n\n        const borderWidth = 0.5;\n\n        const [width, height] = this.fullSize();\n        ctx.clearRect(0, 0, width, height);\n        ctx.lineWidth = borderWidth;\n\n        const buttonBgColor = active ? (value ? activeBgOnColor : activeBgColor) : (value ? bgOnColor : bgColor);\n        const buttonBorderColor = focus ? focusBorderColor : borderColor;\n\n        ctx.fillStyle = buttonBgColor;\n        if (mode === \"button\") {\n            fillRoundedRect(ctx, 0.5, 0.5, width - 1, height - 1, height * 0.5 - 1);\n        } else {\n            ctx.beginPath();\n            ctx.rect(0.5, 0.5, width - 1, height - 1);\n            ctx.fill();\n        }\n        ctx.lineWidth = 0.5;\n        ctx.strokeStyle = buttonBorderColor;\n        ctx.stroke();\n\n        ctx.font = `${fontFace === \"regular\" ? \"\" : fontFace} ${fontSize}px ${fontFamily}, sans-serif`;\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"middle\";\n        ctx.fillStyle = active ? (value ? activeTextOnColor : activeTextColor) : (value ? textOnColor : textColor);\n        ctx.fillText(value && mode === \"toggle\" ? textOn : text, width * 0.5, height * 0.5);\n    }\n    handlePointerDown = (e: PointerDownEvent) => {\n        const { value, mode } = this.state;\n        this.inTouch = true;\n        this.setValueToOutput(mode === \"button\" ? 1 : 1 - +!!value);\n    };\n    handlePointerUp = () => {\n        const { mode } = this.state;\n        this.inTouch = false;\n        if (mode === \"button\") this.setValueToOutput(0);\n    };\n}\n\nexport class LiveText extends LiveObject<{}, {}, [number | Bang, number], [number, string], [number], LiveTextProps, LiveTextUIState> {\n    static description = \"Button or toggle with text\";\n    static inlets: TMeta[\"inlets\"] = [{\n        isHot: true,\n        type: \"number\",\n        description: \"Set and output the value\"\n    }, {\n        isHot: false,\n        type: \"number\",\n        description: \"Set without output the value\"\n    }];\n    static outlets: TMeta[\"outlets\"] = [{\n        type: \"number\",\n        description: \"Number value\"\n    }, {\n        type: \"string\",\n        description: \"Display value\"\n    }];\n    static args: TMeta[\"args\"] = [{\n        type: \"number\",\n        optional: true,\n        default: 0,\n        description: \"Initial value\"\n    }];\n    static props: TMeta[\"props\"] = {\n        bgColor: {\n            type: \"color\",\n            default: \"rgba(165, 165, 165, 1)\",\n            description: \"Background color (inactive / off)\",\n            isUIState: true\n        },\n        activeBgColor: {\n            type: \"color\",\n            default: \"rgba(165, 165, 165, 1)\",\n            description: \"Background color (active / off)\",\n            isUIState: true\n        },\n        bgOnColor: {\n            type: \"color\",\n            default: \"rgba(165, 165, 165, 1)\",\n            description: \"Background color (inactive / on)\",\n            isUIState: true\n        },\n        activeBgOnColor: {\n            type: \"color\",\n            default: \"rgba(255, 181, 50, 1)\",\n            description: \"Background color (active / on)\",\n            isUIState: true\n        },\n        borderColor: {\n            type: \"color\",\n            default: \"rgba(80, 80, 80, 1)\",\n            description: \"Border color (unfocus)\",\n            isUIState: true\n        },\n        focusBorderColor: {\n            type: \"color\",\n            default: \"rgba(80, 80, 80, 1)\",\n            description: \"Border color (focus)\",\n            isUIState: true\n        },\n        textColor: {\n            type: \"color\",\n            default: \"rgba(90, 90, 90, 1)\",\n            description: \"Text color (inactive / off)\",\n            isUIState: true\n        },\n        textOnColor: {\n            type: \"color\",\n            default: \"rgba(90, 90, 90, 1)\",\n            description: \"Text color (inactive / on)\",\n            isUIState: true\n        },\n        activeTextColor: {\n            type: \"color\",\n            default: \"rgba(0, 0, 0, 1)\",\n            description: \"Text color (active / off)\",\n            isUIState: true\n        },\n        activeTextOnColor: {\n            type: \"color\",\n            default: \"rgba(0, 0, 0, 1)\",\n            description: \"Text color (active / on)\",\n            isUIState: true\n        },\n        fontFamily: {\n            type: \"enum\",\n            enums: [\"Lato\", \"Georgia\", \"Times New Roman\", \"Arial\", \"Tahoma\", \"Verdana\", \"Courier New\"],\n            default: \"Arial\",\n            description: \"Font family\",\n            isUIState: true\n        },\n        fontSize: {\n            type: \"number\",\n            default: 10,\n            description: \"Text font size\",\n            isUIState: true\n        },\n        fontFace: {\n            type: \"enum\",\n            enums: [\"regular\", \"bold\", \"italic\", \"bold italic\"],\n            default: \"regular\",\n            description: \"Text style\",\n            isUIState: true\n        },\n        mode: {\n            type: \"enum\",\n            enums: [\"button\", \"toggle\"],\n            default: \"toggle\",\n            description: \"Trigger mode\",\n            isUIState: true\n        },\n        text: {\n            type: \"string\",\n            default: \"A\",\n            description: \"Text (off)\",\n            isUIState: true\n        },\n        textOn: {\n            type: \"string\",\n            default: \"B\",\n            description: \"Text (off)\",\n            isUIState: true\n        }\n    };\n    static UI = LiveTextUI;\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 2;\n            this.outlets = 2;\n        });\n        this.on(\"updateArgs\", (args) => {\n            if (typeof args[0] === \"number\") {\n                this.state.value = args[0];\n                this.validateValue();\n                this.updateUI({ value: this.state.value });\n            }\n        });\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) {\n                if (!isBang(data)) {\n                    const value = +data;\n                    this.state.value = value;\n                    this.validateValue();\n                    this.updateUI({ value: this.state.value });\n                }\n                this.outletAll([this.state.value, this.state.displayValue]);\n            } else if (inlet === 1) {\n                const value = +data;\n                this.state.value = value;\n                this.validateValue();\n                this.updateUI({ value: this.state.value });\n            }\n        });\n        this.on(\"changeFromUI\", ({ value, displayValue }) => {\n            this.state.value = value;\n            this.state.displayValue = displayValue;\n            this.outletAll([this.state.value, this.state.displayValue]);\n        });\n    }\n}\n","import { LiveUI, LiveObject, LiveUIState } from \"./Base\";\nimport { TMeta } from \"../../types\";\nimport { Bang, isBang } from \"../Base\";\n\ninterface LiveToggleProps extends LiveUIProps {\n    bgColor: string;\n    activeBgColor: string;\n    bgOnColor: string;\n    activeBgOnColor: string;\n    borderColor: string;\n    focusBorderColor: string;\n}\n\ninterface LiveToggleUIState extends LiveToggleProps, LiveUIState {}\nclass LiveToggleUI extends LiveUI<LiveToggle, LiveToggleUIState> {\n    static defaultSize: [number, number] = [30, 30];\n    className = \"live-toggle\";\n    paint() {\n        const {\n            // width,\n            // height,\n            active,\n            focus,\n            bgColor,\n            activeBgColor,\n            bgOnColor,\n            activeBgOnColor,\n            borderColor,\n            focusBorderColor,\n            value\n        } = this.state;\n        const ctx = this.ctx;\n        if (!ctx) return;\n        const borderWidth = 1;\n\n        const [width, height] = this.fullSize();\n        ctx.clearRect(0, 0, width, height);\n\n        ctx.lineWidth = borderWidth;\n\n        const buttonBgColor = active ? (value ? activeBgOnColor : activeBgColor) : (value ? bgOnColor : bgColor);\n        const buttonBorderColor = focus ? focusBorderColor : borderColor;\n\n        ctx.fillStyle = buttonBgColor;\n        ctx.beginPath();\n        ctx.rect(borderWidth, borderWidth, width - 2 * borderWidth, height - 2 * borderWidth);\n        ctx.fill();\n        ctx.strokeStyle = buttonBorderColor;\n        ctx.stroke();\n    }\n    handlePointerDown = () => {\n        this.setValueToOutput(1 - +!!this.state.value);\n    };\n}\n\nexport class LiveToggle extends LiveObject<{}, {}, [number | Bang, number], [number, string], [number], LiveToggleProps, LiveToggleUIState> {\n    static description = \"Toggle\";\n    static inlets: TMeta[\"inlets\"] = [{\n        isHot: true,\n        type: \"number\",\n        description: \"Set and output the value\"\n    }, {\n        isHot: false,\n        type: \"number\",\n        description: \"Set without output the value\"\n    }];\n    static outlets: TMeta[\"outlets\"] = [{\n        type: \"number\",\n        description: \"Number value\"\n    }, {\n        type: \"string\",\n        description: \"Display value\"\n    }];\n    static args: TMeta[\"args\"] = [{\n        type: \"number\",\n        optional: true,\n        default: 0,\n        description: \"Initial value\"\n    }];\n    static props: TMeta[\"props\"] = {\n        max: {\n            type: \"number\",\n            default: 1,\n            description: \"Maximum value\",\n            isUIState: true\n        },\n        bgColor: {\n            type: \"color\",\n            default: \"rgba(90, 90, 90, 1)\",\n            description: \"Background color (inactive)\",\n            isUIState: true\n        },\n        activeBgColor: {\n            type: \"color\",\n            default: \"rgba(195, 195, 195, 1)\",\n            description: \"Background color (active)\",\n            isUIState: true\n        },\n        bgOnColor: {\n            type: \"color\",\n            default: \"rgba(195, 195, 195, 1)\",\n            description: \"Background color (on / inactive)\",\n            isUIState: true\n        },\n        activeBgOnColor: {\n            type: \"color\",\n            default: \"rgba(109, 215, 255, 1)\",\n            description: \"Background color (on / active)\",\n            isUIState: true\n        },\n        borderColor: {\n            type: \"color\",\n            default: \"rgba(80, 80, 80, 1)\",\n            description: \"Border color (unfocus)\",\n            isUIState: true\n        },\n        focusBorderColor: {\n            type: \"color\",\n            default: \"rgba(80, 80, 80, 1)\",\n            description: \"Border color (focus)\",\n            isUIState: true\n        }\n    };\n    static UI = LiveToggleUI;\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 2;\n            this.outlets = 2;\n        });\n        this.on(\"updateArgs\", (args) => {\n            this.state.value = +!!args[0];\n            this.validateValue();\n            this.updateUI({ value: this.state.value });\n        });\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) {\n                if (!isBang(data)) {\n                    const value = +data;\n                    this.state.value = value;\n                    this.validateValue();\n                    this.updateUI({ value: this.state.value });\n                }\n                this.outletAll([this.state.value, this.state.displayValue]);\n            } else if (inlet === 1) {\n                const value = +data;\n                this.state.value = value;\n                this.validateValue();\n                this.updateUI({ value: this.state.value });\n            }\n        });\n        this.on(\"changeFromUI\", ({ value, displayValue }) => {\n            this.state.value = value;\n            this.state.displayValue = displayValue;\n            this.outletAll([this.state.value, this.state.displayValue]);\n        });\n    }\n}\n"],"sourceRoot":""}