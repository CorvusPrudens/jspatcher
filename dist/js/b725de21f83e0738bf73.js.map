{"version":3,"file":"js/b725de21f83e0738bf73.js","mappings":"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","sources":["webpack://JSPatcher/./src/core/objects/faust/Diagram.scss","webpack://JSPatcher/./src/core/objects/faust/Diagram.ts","webpack://JSPatcher/./src/core/objects/faust/faustCompiler.ts","webpack://JSPatcher/./src/core/objects/faust/faustUI.ts","webpack://JSPatcher/./src/core/objects/faust/index.jspatpkg.ts","webpack://JSPatcher/./src/core/objects/faust/Diagram.scss?56d3"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".patcher div.box-ui > div.package-faust-diagram > div > div > svg {\\n  height: 100%;\\n  width: 100%;\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/core/objects/faust/Diagram.scss\"],\"names\":[],\"mappings\":\"AACI;EACI,YAAA;EACA,WAAA;AAAR\",\"sourcesContent\":[\".patcher div.box-ui > div.package-faust-diagram {\\n    & > div > div > svg {\\n        height: 100%;\\n        width: 100%;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import BaseObject from \"../base/BaseObject\";\nimport Bang, { isBang } from \"../base/Bang\";\nimport DOMUI, { DOMUIState } from \"../base/DOMUI\";\nimport type Env from \"../../Env\";\nimport type { IInletsMeta, IOutletsMeta } from \"../base/AbstractObject\";\nimport type { FaustNodeInternalState } from \"./FaustNode\";\nimport \"./Diagram.scss\";\n\nexport default class diagram extends BaseObject<{}, {}, [Bang | string | FaustNodeInternalState[\"node\"]], [Record<string, string>], [], {}, DOMUIState> {\n    static package = \"Faust\";\n    static description = \"Get Faust code diagram\";\n    static inlets: IInletsMeta = [{\n        isHot: true,\n        type: \"string\",\n        description: \"Code or FaustNode to compile, bang to output only\"\n    }];\n    static outlets: IOutletsMeta = [{\n        type: \"string\",\n        description: \"SVG file - SVG code pairs\"\n    }];\n    static UI = class extends DOMUI<diagram> {\n        state: DOMUIState = { ...this.state, children: this.props.object._.container ? [this.props.object._.container] : [] };\n    };\n    _ = { svgs: {} as Record<string, string>, container: undefined as HTMLDivElement };\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 1;\n            this.outlets = 1;\n        });\n        this.on(\"inlet\", async ({ data, inlet }) => {\n            const faustCompiler = await (this.env as Env).getFaustCompiler();\n            const faustSvgDiagrams = new (this.env as Env).Faust.FaustSvgDiagrams(faustCompiler);\n            if (inlet === 0) {\n                if (!isBang(data)) {\n                    try {\n                        this._.svgs = faustSvgDiagrams.from(\"FaustDSP\", typeof data === \"string\" ? data : data.dspCode, \"\");\n                    } catch (e) {\n                        this.error(e);\n                        return;\n                    }\n                }\n                if (this._.svgs) {\n                    this.outlet(0, this._.svgs);\n                    const template = document.createElement(\"template\");\n                    const container = document.createElement(\"div\");\n                    template.appendChild(container);\n                    const mountSvg = (svgStr: string) => {\n                        container.innerHTML = svgStr;\n                        container.querySelectorAll(\".link\").forEach((e: HTMLElement) => {\n                            if (!e.onclick) return;\n                            const fileName = e.onclick.toString().match(/'.+\\/(.+)'/)[1];\n                            e.onclick = () => mountSvg(this._.svgs[fileName]);\n                        });\n                    };\n                    mountSvg(this._.svgs[\"process.svg\"]);\n                    this._.container = container;\n                    this.updateUI({ children: [container] });\n                }\n            }\n        });\n    }\n}\n","import type { FaustCompiler } from \"@shren/faustwasm\";\nimport Bang, { isBang } from \"../base/Bang\";\nimport type { IInletsMeta, IOutletsMeta } from \"../base/AbstractObject\";\n\nimport DefaultObject from \"../base/DefaultObject\";\n\nexport default class faustCompiler extends DefaultObject<{}, {}, [Bang], [FaustCompiler]> {\n    static package = \"Faust\";\n    static description = \"Get FaustCompiler instance\";\n    static inlets: IInletsMeta = [{\n        isHot: true,\n        type: \"bang\",\n        description: \"Output FaustCompiler instance\"\n    }];\n    static outlets: IOutletsMeta = [{\n        type: \"object\",\n        description: \"FaustCompiler instance\"\n    }];\n    state = {};\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 1;\n            this.outlets = 1;\n        });\n        this.on(\"inlet\", async ({ data, inlet }) => {\n            if (inlet === 0) {\n                if (isBang(data)) this.outlet(0, await this.env.getFaustCompiler());\n            }\n        });\n    }\n}\n","import type { FaustAudioWorkletNode } from \"@shren/faustwasm\";\nimport type { FaustUI } from \"@shren/faust-ui\";\nimport DOMUI, { DOMUIState } from \"../base/DOMUI\";\nimport BaseObject from \"../base/BaseObject\";\nimport type { IInletsMeta, IOutletsMeta } from \"../base/AbstractObject\";\n\ninterface IS {\n    node: FaustAudioWorkletNode;\n    faustUI: FaustUI;\n    root: HTMLDivElement;\n}\n\nexport default class ui extends BaseObject<{}, {}, [FaustAudioWorkletNode], [Record<string, number>], [], {}, DOMUIState> {\n    static package = \"faust\";\n    static description = \"Display a Faust UI\";\n    static inlets: IInletsMeta = [{\n        isHot: false,\n        type: \"object\",\n        description: \"Compiled Faust AudioWorkletNode\"\n    }];\n    static outlets: IOutletsMeta = [{\n        type: \"object\",\n        description: \"Changed parameter name-value map\"\n    }];\n    static UI = class extends DOMUI<ui> {\n        state: DOMUIState = { ...this.state, children: this.props.object._.root ? [this.props.object._.root] : [] };\n        componentDidMount() {\n            super.componentDidMount();\n            this.props.object._.faustUI?.resize();\n        }\n    };\n    _: IS = { node: undefined, faustUI: undefined, root: undefined };\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 1;\n            this.outlets = 1;\n        });\n        this.on(\"postInit\", () => this.updateUI({ shadow: false }));\n        const handleParamChangedByDSP = (e: CustomEvent<{ path: string; value: number }>) => {\n            this._.faustUI?.paramChangeByDSP(e.detail.path, e.detail.value);\n        };\n        const handleDestroyDSP = (e: CustomEvent<{ target: FaustAudioWorkletNode }>) => {\n            e.detail.target?.removeEventListener(\"paramChanged\", handleParamChangedByDSP);\n            e.detail.target?.removeEventListener(\"destroy\", handleDestroyDSP);\n        };\n        this.on(\"inlet\", async ({ data, inlet }) => {\n            if (inlet === 0) {\n                if (data instanceof AudioWorkletNode) {\n                    this._.node?.removeEventListener(\"paramChanged\", handleParamChangedByDSP);\n                    this._.node?.removeEventListener(\"destroy\", handleDestroyDSP);\n                    this._.node = data;\n                    const ui = data.getUI();\n                    const root = document.createElement(\"div\");\n                    root.style.width = \"100%\";\n                    root.style.height = \"100%\";\n                    root.style.margin = \"0\";\n                    root.style.position = \"absolute\";\n                    root.style.overflow = \"auto\";\n                    root.style.display = \"flex\";\n                    root.style.flexDirection = \"column\";\n                    const { FaustUI } = (await import(\"@shren/faust-ui\"));\n                    const faustUI = new FaustUI({ ui, root, listenWindowMessage: false, listenWindowResize: false });\n                    this._.faustUI = faustUI;\n                    faustUI.paramChangeByUI = (path: string, value: number) => {\n                        this.outlet(0, { [path]: value });\n                    };\n                    if (!data.getOutputParamHandler()) data.setOutputParamHandler((path, value) => data.dispatchEvent(new CustomEvent(\"paramChanged\", { detail: { path, value } })));\n                    data.destroy = () => {\n                        data.dispatchEvent(new CustomEvent(\"destroy\", { detail: { target: data } }));\n                        data.port.postMessage({ type: \"destroy\" });\n                        data.port.close();\n                        data.setOutputParamHandler(null);\n                        data.setPlotHandler(null);\n                    };\n                    data.addEventListener(\"paramChanged\", handleParamChangedByDSP);\n                    data.addEventListener(\"destroy\", handleDestroyDSP);\n                    this.updateUI({ children: [root] });\n                    this._.root = root;\n                    faustUI.resize();\n                }\n            }\n        });\n        this.on(\"destroy\", () => {\n            this._.node?.removeEventListener(\"paramChanged\", handleParamChangedByDSP);\n            this._.node?.removeEventListener(\"destroy\", handleDestroyDSP);\n        });\n        const handleResize = () => {\n            this._.faustUI?.resize();\n        };\n        this.box.on(\"rectChanged\", handleResize);\n        this.box.on(\"presentationRectChanged\", handleResize);\n    }\n}\n","import FaustNode from \"./FaustNode\";\nimport diagram from \"./Diagram\";\nimport ui from \"./faustUI\";\nimport faustCompiler from \"./faustCompiler\";\nimport DefaultImporter from \"../importer/DefaultImporter\";\nimport type Env from \"../../Env\";\n\nexport default async (env: Env) => ({\n    \"faustnode~\": FaustNode,\n    diagram,\n    ui,\n    faustCompiler,\n    ...DefaultImporter.import(\"faust\", { ...env.Faust })\n});\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./Diagram.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./Diagram.scss\";\n       export default content && content.locals ? content.locals : undefined;\n"],"names":[],"sourceRoot":""}