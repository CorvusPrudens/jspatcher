{"version":3,"sources":["webpack://JSPatcher/JSPatcher/JSPatcher/JSPatcher/JSPatcher/./src/core/audio/AudioEditor.ts","webpack://JSPatcher/JSPatcher/JSPatcher/JSPatcher/JSPatcher/./src/core/audio/AudioHistory.ts","webpack://JSPatcher/JSPatcher/JSPatcher/JSPatcher/JSPatcher/./src/core/audio/AudioPlayer.ts","webpack://JSPatcher/JSPatcher/JSPatcher/JSPatcher/JSPatcher/./src/core/audio/AudioRecorder.ts","webpack://JSPatcher/JSPatcher/JSPatcher/JSPatcher/JSPatcher/./src/core/audio/OperableAudioBuffer.ts","webpack://JSPatcher/JSPatcher/JSPatcher/JSPatcher/JSPatcher/./src/core/audio/PatcherAudio.ts","webpack://JSPatcher/JSPatcher/JSPatcher/JSPatcher/JSPatcher/./src/core/worklets/AudioWorkletProxyNode.ts","webpack://JSPatcher/JSPatcher/JSPatcher/JSPatcher/JSPatcher/./src/core/worklets/AudioWorkletRegister.ts","webpack://JSPatcher/JSPatcher/JSPatcher/JSPatcher/JSPatcher/./src/core/worklets/TemporalAnalyser.ts","webpack://JSPatcher/JSPatcher/JSPatcher/JSPatcher/JSPatcher/./src/core/worklets/Transmitter.ts","webpack://JSPatcher/JSPatcher/JSPatcher/JSPatcher/JSPatcher/./src/utils/Waveform.ts","webpack://JSPatcher/JSPatcher/JSPatcher/JSPatcher/JSPatcher/./src/utils/math.ts","webpack://JSPatcher/JSPatcher/JSPatcher/JSPatcher/JSPatcher/./src/core/worklets/TemporalAnalyser.worklet.ts","webpack://JSPatcher/JSPatcher/JSPatcher/JSPatcher/JSPatcher/./src/core/worklets/Transmitter.worklet.ts"],"names":["AudioEditor","FileEditor","AudioPlayer","AudioRecorder","playing","monitoring","loop","recording","cursor","selRange","viewRange","enabledChannels","plugins","Array","fill","undefined","pluginsEnabled","WeakSet","pluginsShowing","preFxGain","postFxGain","state","length","numberOfChannels","setCursor","setSelRange","setViewRange","slice","forEach","v","i","setState","emit","deviceId","recorder","newSearch","player","startMonitoring","fromProjectItem","file","env","project","instanceId","audio","TempAudioFile","data","instantiate","editor","init","fileExtension","fileIcon","clipboard","audioClipboard","ctx","instance","audioCtx","sampleRate","audioBuffer","waveform","isReady","Promise","resolve","reject","handleReady","off","on","handleSetAudio","taskMgr","newTask","_isReady","Object","assign","onUiResized","emitPluginsChanged","map","p","has","emitUIResized","emitSelRangeToPlay","zoomH","refIn","factor","viewStart","viewEnd","viewLength","minRange","Math","min","ref","max","round","start","end","range","multiplier","scrollH","speed","deltaSamples","setEnabledChannel","channel","enabled","setLoop","setRecording","cursorIn","fromPlayer","shouldReplay","stop","play","setSelRangeToAll","selectAll","deleteSelected","delete","setViewRangeToAll","cut","selStart","selEnd","removeFromRange","oldAudio","copy","pick","paste","pasteToRange","insertToCursor","silence","silenced","insertSilence","inserted","reverse","inverse","fade","gain","faded","fadeIn","exponent","fadeOut","resample","to","clone","render","setAudio","remixChannels","mix","applyPlugins","selected","every","setPluginEnabled","pause","resume","stopMonitoring","startRecord","started","stopRecord","addPlugin","url","index","removePlugin","movePlugin","fromIndex","toIndex","setPluginShowing","showing","plugin","add","setPreFxGain","preFxGainNode","setTargetAtTime","dbtoa","currentTime","setPostFxGain","postFxGainNode","destroy","AudioHistory","History","eventListening","undoOf","eventName","eventData","e","l","from","redoOf","destination","bufferSourceNode","updateCursor","getCurrentSample","scheduleUpdateCursor","constructor","loopIn","buffer","loopStart","loopEnd","Number","MAX_VALUE","currentSample","handlePlayerEnded","removeEventListener","handleEnded","disconnect","splitterNode","mergerNode","currentChannels","connect","$updateCursorRaf","updateCursorScheduled","requestAnimationFrame","updateCursorCallback","dummyAnalyserNode","createAnalyser","createGain","handleLoopChanged","handleSelRangeChanged","handleEnabledChannelsChanged","audioWorklet","TemporalAnalyserNode","postAnalyserNode","delta","offset","duration","createBufferSource","channelCountMode","channelInterpretation","channelCount","createChannelSplitter","createChannelMerger","value","connectPlugins","addEventListener","disconnectPlugins","sourceNode","node","mediaStreamSourceNode","firstPluginNode","lastPluginNode","audioNode","indexIn","default","Plugin","createInstance","usingPlugins","preNode","postNode","splice","push","fromIndexIn","toIndexIn","echoCancellation","noiseSuppression","autoGainControl","devices","navigator","mediaDevices","enumerateDevices","enums","filter","d","kind","label","indexOf","device","find","bufferIn","$total","extended","$","$start","$end","inPlace","overwrittenAudio","$target","copyLength","newLength","ceil","log","newBuffer","OperableAudioBuffer","getChannelData","set","overwrittenChannel","subarray","update","search","stream","getAudioTracks","t","getUserMedia","getConstraints","resetNode","transmitter","handleDeviceChange","TransmitterNode","handleReceiveBuffer","constraints","createMediaStreamSource","overwrittenBufferLength","PatcherAudio","reset","split","AudioBuffer","copyToChannel","j","concat","that","RangeError","buffer1","buffer2","channel1","channel2","copyFromChannel","write","Error","toArray","shared","supportSAB","SharedArrayBuffer","channelData","Float32Array","BYTES_PER_ELEMENT","FileInstance","options","fromArrayBuffer","fromNativeAudioBuffer","setPrototypeOf","Waveform","generate","fromSilence","optionsIn","generateEmpty","getEditor","onUpdate","byteLength","decodeAudioData","initWithOptions","initWith","serialize","bitDepth","float","audioData","wavEncoderWorker","encode","encodeFFmpegWorker","wav","inputFileName","outputFileName","args","ffmpegWorker","getFFmpeg","result","run","input","output","encodeMp3","bitrate","Uint8Array","encodeAac","patcherAudio","audio1","audio2","ab1","ab2","wf1","wf2","picked","p0","old","p1","p2","p3","c","lengthIn","normExp","sampleRateIn","pluginsOptions","needResample","needRemix","isIdentityMatrix","mixBuffer","mixChannel","k","offlineAudioCtx","OfflineAudioContext","source","lastNode","name","getPrototypeOf","setParameterValues","getParameterValues","bufferOut","startRendering","Node","AudioWorkletNode","fnNames","context","resolves","rejects","messagePortRequestId","handleDisposed","port","handleMessage","close","id","call","error","r","postMessage","_disposed","Ctor","registeredProcessors","window","jspatcherEnv","AudioWorkletRegister","WeakMap","registeringProcessors","registerProcessor","processorId","processor","get","injection","URL","createObjectURL","Blob","toString","JSON","stringify","join","type","addModule","f","register","promise","Set","registered","registering","AudioWorkletProxyNode","numberOfInputs","numberOfOutputs","_destroy","processorURL","setBuffer","_patcherAudio","steps","keys","sort","a","b","patcherAudioIn","waveformDataIn","worker","waveformWorker","stepLength","stepData","newStepData","idx","audioChannelData","stepsFactor","key","stepsCount","idxData","Int32Array","minData","maxData","generateStep","maxInStep","minInStep","$0","$1","samp","prevIdx","prevMin","prevMax","$prev0","$prev1","sampMax","sampMin","expand","oldLength","newIdxData","samples","$from","$to","idx0","idx1","$max","$min","stepData1","stepData2","idxData1","idxData2","minData1","maxData1","minData2","maxData2","patcherAudio1","patcherAudio2","audioBuffer1","audioBuffer2","waveform1","waveform2","waveformKeys","$data","splitBetween","prevIdx1","prevMin1","prevMax1","prevIdx2","prevMin2","prevMax2","$prev2","idx2","findStep","precision","reduce","acc","cur","mod","x","y","abs","floor","toRad","degrees","PI","toMIDI","atodb","log10","db","iNormExp","scale","l1","h1","l2","h2","r1","r2","scaleClip","isArray","row","isNumberArray","identityMatrix","dim"],"mappings":"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","file":"src_core_audio_AudioEditor_ts-src_core_audio_AudioRecorder_ts-src_core_audio_PatcherAudio_ts.js/ff5b9ebb2570e528fa11.worklet.js","sourcesContent":["import type { SemanticICONS } from \"semantic-ui-react\";\nimport type { WebAudioModule } from \"wamsdk/src/api\";\nimport { dbtoa } from \"../../utils/math\";\nimport AudioPlayer from \"./AudioPlayer\";\nimport AudioRecorder from \"./AudioRecorder\";\nimport FileEditor from \"../file/FileEditor\";\nimport TempAudioFile from \"./TempAudioFile\";\nimport type PatcherAudio from \"./PatcherAudio\";\nimport type { TAudioPlayingState } from \"../types\";\nimport type PersistentProjectFile from \"../file/PersistentProjectFile\";\nimport type Env from \"../Env\";\nimport type { IJSPatcherEnv } from \"../Env\";\nimport type { IProject } from \"../Project\";\n\nexport interface AudioEditorEventMap {\n    \"pasted\": { range?: [number, number]; cursor?: number; audio: PatcherAudio; oldAudio?: PatcherAudio };\n    \"cutEnd\": { range: [number, number]; oldAudio: PatcherAudio };\n    \"deleted\": { range: [number, number]; oldAudio: PatcherAudio };\n    \"silenced\": { range: [number, number]; audio: PatcherAudio; oldAudio: PatcherAudio };\n    \"insertedSilence\": { range: [number, number]; audio: PatcherAudio };\n    \"inversed\": { range: [number, number]; audio: PatcherAudio; oldAudio: PatcherAudio };\n    \"reversed\": { range: [number, number]; audio: PatcherAudio; oldAudio: PatcherAudio };\n    \"faded\": { gain: number; range: [number, number]; audio: PatcherAudio; oldAudio: PatcherAudio };\n    \"fadedIn\": { length: number; exponent: number; audio: PatcherAudio; oldAudio: PatcherAudio };\n    \"fadedOut\": { length: number; exponent: number; audio: PatcherAudio; oldAudio: PatcherAudio };\n    \"recorded\": { range?: [number, number]; cursor?: number; audio: PatcherAudio; oldAudio: PatcherAudio };\n    \"resampled\": { audio: PatcherAudio; oldAudio: PatcherAudio };\n    \"remixed\": { audio: PatcherAudio; oldAudio: PatcherAudio };\n    \"viewRange\": [number, number];\n    \"selRange\": [number, number];\n    \"selRangeToPlay\": [number, number] | null;\n    \"cursor\": number;\n    \"enabledChannels\": boolean[];\n    \"playing\": TAudioPlayingState;\n    \"monitoring\": boolean;\n    \"loop\": boolean;\n    \"recording\": boolean;\n    \"pluginsChanged\": { plugins: WebAudioModule[]; pluginsEnabled: boolean[]; pluginsShowing: boolean[] };\n    \"pluginsApplied\": { range?: [number, number]; audio: PatcherAudio; oldAudio: PatcherAudio };\n    \"uiResized\": never;\n    \"setAudio\": never;\n    \"ready\": never;\n}\n\nexport interface AudioHistoryEventMap extends Pick<AudioEditorEventMap, \"faded\" | \"fadedIn\" | \"fadedOut\" | \"cutEnd\" | \"pasted\" | \"deleted\" | \"silenced\" | \"insertedSilence\" | \"reversed\" | \"inversed\" | \"resampled\" | \"remixed\" | \"recorded\"> {}\n\nexport interface AudioEditorState {\n    playing: TAudioPlayingState;\n    monitoring: boolean;\n    recording: boolean;\n    loop: boolean;\n    cursor: number;\n    selRange: [number, number];\n    viewRange: [number, number];\n    enabledChannels: boolean[];\n    plugins: WebAudioModule[];\n    pluginsEnabled: WeakSet<WebAudioModule>;\n    pluginsShowing: WeakSet<WebAudioModule>;\n    preFxGain: number;\n    postFxGain: number;\n}\n\nexport default class AudioEditor extends FileEditor<PatcherAudio, AudioEditorEventMap> {\n    static async fromProjectItem({ file, env, project, instanceId }: { file: PersistentProjectFile | TempAudioFile; env: IJSPatcherEnv; project?: IProject; instanceId?: string }) {\n        const audio = file instanceof TempAudioFile ? file.data : await file.instantiate({ env, project, instanceId }) as PatcherAudio;\n        const editor = new this(audio);\n        return editor.init();\n    }\n    readonly audio: PatcherAudio;\n    readonly player = new AudioPlayer(this);\n    readonly recorder = new AudioRecorder(this);\n    readonly state: AudioEditorState = {\n        playing: \"stopped\",\n        monitoring: false,\n        loop: true,\n        recording: false,\n        cursor: 0,\n        selRange: null,\n        viewRange: [0, 0],\n        enabledChannels: [],\n        plugins: new Array(10).fill(undefined),\n        pluginsEnabled: new WeakSet(),\n        pluginsShowing: new WeakSet(),\n        preFxGain: 0,\n        postFxGain: 0\n    };\n    get fileExtension() {\n        return \"wav\";\n    }\n    get fileIcon(): SemanticICONS {\n        return \"music\";\n    }\n    get clipboard() {\n        return (this.env as Env).audioClipboard;\n    }\n    set clipboard(audio: PatcherAudio) {\n        (this.env as Env).audioClipboard = audio;\n    }\n    get ctx() {\n        return this.instance.ctx;\n    }\n    get audioCtx() {\n        return this.instance.audioCtx;\n    }\n    get length() {\n        return this.instance.length;\n    }\n    get numberOfChannels() {\n        return this.instance.numberOfChannels;\n    }\n    get sampleRate() {\n        return this.instance.sampleRate;\n    }\n    get audioBuffer() {\n        return this.instance.audioBuffer;\n    }\n    get waveform() {\n        return this.instance.waveform;\n    }\n\n    handleSetAudio = () => {\n        const { cursor, selRange, viewRange } = this.state;\n        const { length, numberOfChannels } = this;\n        if (cursor > length) this.setCursor(length);\n        if (selRange && selRange[1] > length) this.setSelRange(selRange);\n        if (viewRange[1] > length) this.setViewRange(viewRange);\n        if (this.state.enabledChannels.length !== numberOfChannels) {\n            const enabledChannels = new Array(numberOfChannels).fill(true);\n            this.state.enabledChannels.slice(numberOfChannels).forEach((v, i) => enabledChannels[i] = v);\n            this.setState({ enabledChannels });\n            this.emit(\"enabledChannels\", enabledChannels);\n        }\n        this.emit(\"setAudio\");\n    };\n    handlePlayerEnded = (cursor: number) => {\n        const playing: TAudioPlayingState = \"stopped\";\n        this.setState({ playing });\n        this.emit(\"playing\", playing);\n        this.setCursor(cursor);\n    };\n    handleInputChanged = async (deviceId?: string) => {\n        await this.recorder.newSearch(deviceId);\n        if (this.state.monitoring) this.player.startMonitoring();\n    };\n    async init() {\n        if (!this.instance.isReady) {\n            await new Promise<void>((resolve, reject) => {\n                const handleReady = () => {\n                    resolve();\n                    this.instance.off(\"ready\", handleReady);\n                };\n                this.instance.on(\"ready\", handleReady);\n            });\n        }\n        this.setState({\n            viewRange: [0, this.length],\n            enabledChannels: new Array(this.numberOfChannels).fill(true)\n        });\n        this.instance.on(\"setAudio\", this.handleSetAudio);\n        this.on(\"changed\", () => this.instance.emit(\"changed\"));\n        await this.env.taskMgr.newTask(this, \"Initializing Audio Editor...\", async () => {\n            await this.player.init();\n            await this.recorder.init();\n        });\n        this._isReady = true;\n        this.emit(\"ready\");\n        return this;\n    }\n    setState(state: Partial<AudioEditorState>) {\n        Object.assign(this.state, state);\n    }\n    onUiResized() {\n        this.emit(\"uiResized\");\n    }\n    emitPluginsChanged() {\n        const { plugins, pluginsEnabled, pluginsShowing } = this.state;\n        this.emit(\"pluginsChanged\", { plugins: plugins.slice(), pluginsEnabled: plugins.map(p => pluginsEnabled.has(p)), pluginsShowing: plugins.map(p => pluginsShowing.has(p)) });\n    }\n    emitUIResized() {\n        this.emit(\"uiResized\");\n    }\n    emitSelRangeToPlay() {\n        this.emit(\"selRangeToPlay\", this.state.selRange);\n    }\n    zoomH(refIn: number, factor: number) { // factor = 1 as zoomIn, -1 as zoomOut\n        const { viewRange } = this.state;\n        const { length } = this;\n        const [viewStart, viewEnd] = viewRange;\n        const viewLength = viewEnd - viewStart;\n        const minRange = Math.min(length, 5);\n        const ref = Math.max(0, Math.min(length, Math.round(refIn)));\n        if (ref < viewStart || ref > viewEnd) {\n            const start = Math.max(0, Math.min(length - viewLength, Math.round(ref - viewLength / 2)));\n            const end = Math.max(viewLength, Math.min(length, Math.round(ref + viewLength / 2)));\n            const range: [number, number] = [start, end];\n            this.setState({ viewRange: range });\n            this.emit(\"viewRange\", range);\n        } else if (factor < 0 || viewLength > minRange) {\n            const multiplier = 1.5 ** -factor;\n            const start = ref - (ref - viewStart) * multiplier;\n            const end = ref + (viewEnd - ref) * multiplier;\n            this.setViewRange([start, end]);\n        }\n    }\n    scrollH(speed: number) { // spped = 1 as one full viewRange\n        const { viewRange } = this.state;\n        const { length } = this;\n        const [viewStart, viewEnd] = viewRange;\n        const viewLength = viewEnd - viewStart;\n        const deltaSamples = viewLength * speed;\n        const start = Math.min(length - viewLength, viewStart + deltaSamples);\n        const end = Math.max(viewLength, viewEnd + deltaSamples);\n        this.setViewRange([start, end]);\n    }\n    setEnabledChannel(channel: number, enabled: boolean) {\n        const enabledChannels = this.state.enabledChannels.slice();\n        enabledChannels[channel] = enabled;\n        this.setState({ enabledChannels });\n        this.emit(\"enabledChannels\", enabledChannels);\n    }\n    setLoop(loop: boolean) {\n        this.setState({ loop });\n        this.emit(\"loop\", loop);\n    }\n    setRecording(recording: boolean) {\n        this.setState({ recording });\n        this.emit(\"recording\", recording);\n    }\n    setCursor(cursorIn: number, fromPlayer?: boolean) {\n        const shouldReplay = !fromPlayer && this.state.playing === \"playing\";\n        if (shouldReplay) this.stop();\n        const { length } = this;\n        const cursor = Math.max(0, Math.min(length, Math.round(cursorIn)));\n        this.setState({ cursor });\n        this.emit(\"cursor\", cursor);\n        if (shouldReplay) this.play();\n    }\n    setSelRange(range: [number, number]) {\n        if (!range) {\n            this.setState({ selRange: null });\n            this.emit(\"selRange\", null);\n            return;\n        }\n        const { length } = this;\n        let [start, end] = range;\n        if (end < start) [start, end] = [end, start];\n        start = Math.max(0, Math.min(length - 1, Math.round(start)));\n        end = Math.max(1, Math.min(length, Math.round(end)));\n        if (start === end) {\n            this.setState({ selRange: null });\n            this.emit(\"selRange\", null);\n            return;\n        }\n        const selRange: [number, number] = [start, end];\n        this.setState({ selRange, cursor: start });\n        this.emit(\"selRange\", selRange);\n        this.emit(\"cursor\", start);\n    }\n    setSelRangeToAll() {\n        const { length } = this;\n        const selRange: [number, number] = [0, length];\n        this.setState({ selRange });\n        this.emit(\"selRange\", selRange);\n        this.emitSelRangeToPlay();\n    }\n    async selectAll() {\n        this.setSelRangeToAll();\n    }\n    async deleteSelected() {\n        this.delete();\n    }\n    setViewRange(range: [number, number]) {\n        const { length } = this;\n        let [start, end] = range;\n        if (end < start) [start, end] = [end, start];\n        const minRange = Math.min(length, 5);\n        start = Math.max(0, Math.min(length - minRange, Math.round(start)));\n        end = Math.max(minRange, Math.min(length, Math.round(end)));\n        const viewRange: [number, number] = [start, end];\n        this.setState({ viewRange });\n        this.emit(\"viewRange\", viewRange);\n    }\n    setViewRangeToAll() {\n        const { length } = this;\n        const viewRange: [number, number] = [0, length];\n        this.setState({ viewRange });\n        this.emit(\"viewRange\", viewRange);\n    }\n\n    async cut() {\n        const { selRange } = this.state;\n        if (!selRange) return;\n        const [selStart, selEnd] = selRange;\n        this.setSelRange(null);\n        this.clipboard = await this.instance.removeFromRange(selStart, selEnd);\n        const oldAudio = this.clipboard;\n        this.emit(\"cutEnd\", { range: [selStart, selEnd], oldAudio });\n    }\n    async copy() {\n        const { selRange } = this.state;\n        if (!selRange) return;\n        const [selStart, selEnd] = selRange;\n        this.clipboard = await this.instance.pick(selStart, selEnd, true);\n    }\n    async paste() {\n        const { clipboard } = this;\n        if (!clipboard) return;\n        const { cursor, selRange } = this.state;\n        if (selRange) {\n            const [selStart, selEnd] = selRange;\n            const oldAudio = await this.instance.pasteToRange(clipboard, selStart, selEnd);\n            this.emit(\"pasted\", { range: [selStart, selEnd], audio: clipboard, oldAudio });\n        } else {\n            this.instance.insertToCursor(clipboard, cursor);\n            this.emit(\"pasted\", { cursor, audio: clipboard });\n        }\n    }\n    async delete() {\n        const { selRange } = this.state;\n        if (!selRange) return;\n        const [selStart, selEnd] = selRange;\n        this.setSelRange(null);\n        const oldAudio = await this.instance.removeFromRange(selStart, selEnd);\n        this.emit(\"deleted\", { range: [selStart, selEnd], oldAudio });\n    }\n    async silence() {\n        const { selRange } = this.state;\n        if (!selRange) return;\n        const silenced = await this.instance.silence(selRange);\n        if (silenced) this.emit(\"silenced\", silenced);\n    }\n    async insertSilence(length: number) {\n        if (!length) return;\n        const { cursor } = this.state;\n        const inserted = await this.instance.insertSilence(length, cursor);\n        if (inserted) this.emit(\"insertedSilence\", inserted);\n    }\n    async reverse() {\n        const { selRange } = this.state;\n        const [selStart, selEnd] = selRange || [0, this.length];\n        const audio = await this.instance.pick(selStart, selEnd, true);\n        audio.reverse();\n        const oldAudio = await this.instance.pasteToRange(audio, selStart, selEnd);\n        this.emit(\"reversed\", { range: [0, this.length], audio, oldAudio });\n    }\n    async inverse() {\n        const { selRange } = this.state;\n        const [selStart, selEnd] = selRange || [0, this.length];\n        const audio = await this.instance.pick(selStart, selEnd, true);\n        audio.inverse();\n        const oldAudio = await this.instance.pasteToRange(audio, selStart, selEnd);\n        this.emit(\"inversed\", { range: [selStart, selEnd], audio, oldAudio });\n    }\n    async fade(gain: number) {\n        const { selRange, enabledChannels } = this.state;\n        if (!selRange) return;\n        const faded = await this.instance.fade(gain, ...selRange, enabledChannels);\n        if (faded) this.emit(\"faded\", faded);\n    }\n    async fadeIn(length: number, exponent: number) {\n        const { enabledChannels } = this.state;\n        const faded = await this.instance.fadeIn(length, exponent, enabledChannels);\n        if (faded) this.emit(\"fadedIn\", faded);\n    }\n    async fadeOut(length: number, exponent: number) {\n        const { enabledChannels } = this.state;\n        const faded = await this.instance.fadeOut(length, exponent, enabledChannels);\n        if (faded) this.emit(\"fadedOut\", faded);\n    }\n    async resample(to: number) {\n        if (to <= 0) return;\n        const oldAudio = await this.instance.clone();\n        if (oldAudio.sampleRate === to) return;\n        const audio = await this.instance.render(to);\n        this.instance.setAudio(audio);\n        this.emit(\"resampled\", { audio, oldAudio });\n    }\n    async remixChannels(mix: number[][]) {\n        const oldAudio = await this.instance.clone();\n        const audio = await this.instance.render(undefined, mix);\n        this.instance.setAudio(audio);\n        this.emit(\"remixed\", { audio, oldAudio });\n    }\n    async applyPlugins(selected?: boolean) {\n        const { selRange, plugins, pluginsEnabled, preFxGain, postFxGain } = this.state;\n        if (plugins.every(p => !p || !pluginsEnabled.has(p))) return;\n        if (selected && !selRange) return;\n        const oldAudio = selected ? await this.instance.pick(...selRange) : await this.instance.clone();\n        const audio = await oldAudio.render(undefined, undefined, true, { plugins, pluginsEnabled, preFxGain, postFxGain });\n        if (selected) await this.instance.pasteToRange(audio, ...selRange);\n        else this.instance.setAudio(audio);\n        plugins.forEach((p, i) => {\n            if (!p) return;\n            this.setPluginEnabled(i, false);\n        });\n        this.emit(\"pluginsApplied\", { ...(selected ? { range: selRange } : {}), audio, oldAudio });\n    }\n\n    play() {\n        const playing: TAudioPlayingState = \"playing\";\n        this.setState({ playing });\n        this.emit(\"playing\", playing);\n        this.player.play();\n    }\n    pause() {\n        const playing: TAudioPlayingState = \"paused\";\n        this.setState({ playing });\n        this.emit(\"playing\", playing);\n        this.player.stop();\n    }\n    resume() {\n        const playing: TAudioPlayingState = \"playing\";\n        this.setState({ playing });\n        this.emit(\"playing\", playing);\n        this.player.play();\n    }\n    stop() {\n        const playing: TAudioPlayingState = \"stopped\";\n        this.setState({ playing });\n        this.emit(\"playing\", playing);\n        this.player.stop();\n    }\n    startMonitoring() {\n        const monitoring = true;\n        this.setState({ monitoring });\n        this.emit(\"monitoring\", monitoring);\n        this.player.startMonitoring();\n    }\n    stopMonitoring() {\n        const monitoring = false;\n        this.setState({ monitoring });\n        this.emit(\"monitoring\", monitoring);\n        this.player.stopMonitoring();\n    }\n    async startRecord() {\n        this.stop();\n        const started = await this.recorder.start();\n        if (!started) return;\n        this.setState({ recording: true });\n        this.emit(\"recording\", true);\n    }\n    async stopRecord() {\n        await this.recorder.stop();\n        this.setState({ recording: false });\n        this.emit(\"recording\", false);\n    }\n    async addPlugin(url: string, index: number) {\n        this.env.taskMgr.newTask(this, \"Adding Plugin...\", () => this.player.addPlugin(url, index));\n    }\n    removePlugin(index: number) {\n        this.player.removePlugin(index);\n    }\n    movePlugin(fromIndex: number, toIndex: number) {\n        this.player.movePlugin(fromIndex, toIndex);\n    }\n    setPluginEnabled(index: number, enabled: boolean) {\n        this.player.setPluginEnabled(index, enabled);\n    }\n    setPluginShowing(index: number, showing: boolean) {\n        const { plugins, pluginsShowing } = this.state;\n        const plugin = plugins[index];\n        if (!plugin) return;\n        if (showing) pluginsShowing.add(plugin);\n        else pluginsShowing.delete(plugin);\n        this.emitPluginsChanged();\n    }\n    setPreFxGain(gain: number) {\n        this.state.preFxGain = gain;\n        const { playing, monitoring } = this.state;\n        if (monitoring || playing === \"playing\") this.player.preFxGainNode.gain.setTargetAtTime(dbtoa(gain), (this.env as Env).audioCtx.currentTime, 0.01);\n    }\n    setPostFxGain(gain: number) {\n        this.state.postFxGain = gain;\n        const { playing, monitoring } = this.state;\n        if (monitoring || playing === \"playing\") this.player.postFxGainNode.gain.setTargetAtTime(dbtoa(gain), (this.env as Env).audioCtx.currentTime, 0.01);\n    }\n\n    async destroy() {\n        this._isReady = false;\n        this.instance.off(\"setAudio\", this.handleSetAudio);\n        if (this.state.recording) await this.stopRecord();\n        if (this.state.playing !== \"stopped\") this.stop();\n        for (let i = 0; i < this.state.plugins.length; i++) {\n            this.removePlugin(i);\n        }\n        await this.recorder.destroy();\n        await this.player.destroy();\n        await super.destroy();\n    }\n}\n","import History from \"../file/History\";\nimport AudioEditor, { AudioHistoryEventMap } from \"./AudioEditor\";\n\nexport default class AudioHistory extends History<AudioHistoryEventMap, AudioEditor> {\n    get eventListening(): (keyof AudioHistoryEventMap)[] {\n        return [\"faded\", \"fadedIn\", \"fadedOut\", \"cutEnd\", \"pasted\", \"deleted\", \"silenced\", \"insertedSilence\", \"reversed\", \"inversed\", \"resampled\", \"remixed\", \"recorded\"];\n    }\n    async undoOf(editor: AudioEditor, eventName: keyof AudioHistoryEventMap, eventData?: any) {\n        if (eventName === \"faded\") {\n            const e: AudioHistoryEventMap[typeof eventName] = eventData;\n            const { range: [selStart, selEnd], oldAudio } = e;\n            await editor.instance.pasteToRange(oldAudio, selStart, selEnd);\n        } else if (eventName === \"fadedIn\") {\n            const e: AudioHistoryEventMap[typeof eventName] = eventData;\n            const { length, oldAudio } = e;\n            await editor.instance.pasteToRange(oldAudio, 0, length);\n        } else if (eventName === \"fadedOut\") {\n            const e: AudioHistoryEventMap[typeof eventName] = eventData;\n            const { length, oldAudio } = e;\n            const l = editor.instance.audioBuffer.length;\n            await editor.instance.pasteToRange(oldAudio, l - length, l);\n        } else if (eventName === \"cutEnd\") {\n            const e: AudioHistoryEventMap[typeof eventName] = eventData;\n            const { range: [cursor], oldAudio } = e;\n            await editor.instance.insertToCursor(oldAudio, cursor);\n        } else if (eventName === \"pasted\") {\n            const e: AudioHistoryEventMap[typeof eventName] = eventData;\n            const { range, cursor, audio, oldAudio } = e;\n            if (range) {\n                await editor.instance.pasteToRange(oldAudio, range[0], range[0] + audio.length);\n            } else {\n                await editor.instance.removeFromRange(cursor, cursor + audio.length);\n            }\n        } else if (eventName === \"deleted\") {\n            const e: AudioHistoryEventMap[typeof eventName] = eventData;\n            const { range: [cursor], oldAudio } = e;\n            await editor.instance.insertToCursor(oldAudio, cursor);\n        } else if (eventName === \"silenced\") {\n            const e: AudioHistoryEventMap[typeof eventName] = eventData;\n            const { range: [from, to], oldAudio } = e;\n            await editor.instance.pasteToRange(oldAudio, from, to);\n        } else if (eventName === \"insertedSilence\") {\n            const e: AudioHistoryEventMap[typeof eventName] = eventData;\n            const { range: [from, to] } = e;\n            await editor.instance.removeFromRange(from, to);\n        } else if (eventName === \"reversed\") {\n            const e: AudioHistoryEventMap[typeof eventName] = eventData;\n            const { range: [from, to], oldAudio } = e;\n            await editor.instance.pasteToRange(oldAudio, from, to);\n        } else if (eventName === \"inversed\") {\n            const e: AudioHistoryEventMap[typeof eventName] = eventData;\n            const { range: [from, to], oldAudio } = e;\n            await editor.instance.pasteToRange(oldAudio, from, to);\n        } else if (eventName === \"resampled\") {\n            const e: AudioHistoryEventMap[typeof eventName] = eventData;\n            const { oldAudio } = e;\n            editor.instance.setAudio(oldAudio);\n        } else if (eventName === \"remixed\") {\n            const e: AudioHistoryEventMap[typeof eventName] = eventData;\n            const { oldAudio } = e;\n            editor.instance.setAudio(oldAudio);\n        } else if (eventName === \"recorded\") {\n            const e: AudioHistoryEventMap[typeof eventName] = eventData;\n            const { range, cursor, audio, oldAudio } = e;\n            if (range) {\n                await editor.instance.pasteToRange(oldAudio, range[0], range[0] + audio.length);\n            } else {\n                await editor.instance.removeFromRange(cursor, cursor + audio.length);\n            }\n        }\n    }\n    async redoOf(editor: AudioEditor, eventName: keyof AudioHistoryEventMap, eventData?: any) {\n        if (eventName === \"faded\") {\n            const e: AudioHistoryEventMap[typeof eventName] = eventData;\n            const { range: [selStart, selEnd], audio } = e;\n            await editor.instance.pasteToRange(audio, selStart, selEnd);\n        } else if (eventName === \"fadedIn\") {\n            const e: AudioHistoryEventMap[typeof eventName] = eventData;\n            const { length, audio } = e;\n            await editor.instance.pasteToRange(audio, 0, length);\n        } else if (eventName === \"fadedOut\") {\n            const e: AudioHistoryEventMap[typeof eventName] = eventData;\n            const { length, audio } = e;\n            const l = audio.length;\n            await editor.instance.pasteToRange(audio, l - length, l);\n        } else if (eventName === \"cutEnd\") {\n            const e: AudioHistoryEventMap[typeof eventName] = eventData;\n            const { range: [selStart, selEnd] } = e;\n            await editor.instance.removeFromRange(selStart, selEnd);\n        } else if (eventName === \"pasted\") {\n            const e: AudioHistoryEventMap[typeof eventName] = eventData;\n            const { range, cursor, audio, oldAudio } = e;\n            if (range) {\n                await editor.instance.pasteToRange(audio, range[0], range[0] + oldAudio.length);\n            } else {\n                await editor.instance.insertToCursor(audio, cursor);\n            }\n        } else if (eventName === \"deleted\") {\n            const e: AudioHistoryEventMap[typeof eventName] = eventData;\n            const { range: [selStart, selEnd] } = e;\n            await editor.instance.removeFromRange(selStart, selEnd);\n        } else if (eventName === \"silenced\") {\n            const e: AudioHistoryEventMap[typeof eventName] = eventData;\n            const { range: [from, to], audio } = e;\n            await editor.instance.pasteToRange(audio, from, to);\n        } else if (eventName === \"insertedSilence\") {\n            const e: AudioHistoryEventMap[typeof eventName] = eventData;\n            const { range: [cursor], audio } = e;\n            await editor.instance.insertToCursor(audio, cursor);\n        } else if (eventName === \"reversed\") {\n            const e: AudioHistoryEventMap[typeof eventName] = eventData;\n            const { range: [from, to], audio } = e;\n            await editor.instance.pasteToRange(audio, from, to);\n        } else if (eventName === \"inversed\") {\n            const e: AudioHistoryEventMap[typeof eventName] = eventData;\n            const { range: [from, to], audio } = e;\n            await editor.instance.pasteToRange(audio, from, to);\n        } else if (eventName === \"resampled\") {\n            const e: AudioHistoryEventMap[typeof eventName] = eventData;\n            const { audio } = e;\n            editor.instance.setAudio(audio);\n        } else if (eventName === \"remixed\") {\n            const e: AudioHistoryEventMap[typeof eventName] = eventData;\n            const { audio } = e;\n            editor.instance.setAudio(audio);\n        } else if (eventName === \"recorded\") {\n            const e: AudioHistoryEventMap[typeof eventName] = eventData;\n            const { range, cursor, audio, oldAudio } = e;\n            if (range) {\n                await editor.instance.pasteToRange(audio, range[0], range[0] + oldAudio.length);\n            } else {\n                await editor.instance.insertToCursor(audio, cursor);\n            }\n        }\n    }\n}\n","import { WebAudioModule } from \"wamsdk/src/api\";\nimport TemporalAnalyserNode from \"../worklets/TemporalAnalyser\";\nimport { dbtoa } from \"../../utils/math\";\nimport AudioEditor from \"./AudioEditor\";\n\nexport default class AudioPlayer {\n    readonly editor: AudioEditor;\n    readonly dummyAnalyserNode: AnalyserNode;\n    readonly preFxGainNode: GainNode;\n    readonly postFxGainNode: GainNode;\n    playing: boolean;\n    currentSample: number;\n    currentTime: number;\n    currentChannels: boolean[];\n    bufferSourceNode: AudioBufferSourceNode;\n    splitterNode: ChannelSplitterNode;\n    mergerNode: ChannelMergerNode;\n    postAnalyserNode: TemporalAnalyserNode;\n    monitoring: boolean;\n    mediaStreamSourceNode: MediaStreamAudioSourceNode;\n    offset: number;\n    duration: number;\n    get audioCtx() {\n        return this.editor.audioCtx;\n    }\n    get destination() {\n        return this.audioCtx.destination;\n    }\n    get loop() {\n        return this.bufferSourceNode?.loop;\n    }\n    handleLoopChanged = (loopIn: boolean) => {\n        const { bufferSourceNode, editor } = this;\n        if (!bufferSourceNode) return;\n        const { buffer, loop } = bufferSourceNode;\n        if (loop === loopIn) return;\n        const { sampleRate } = buffer;\n        const selRange = editor.state.selRange;\n        bufferSourceNode.loop = loopIn;\n        if (loopIn) {\n            if (selRange) {\n                bufferSourceNode.loopStart = selRange[0] / sampleRate;\n                bufferSourceNode.loopEnd = selRange[1] / sampleRate;\n            } else {\n                bufferSourceNode.loopStart = 0;\n                bufferSourceNode.loopEnd = 0;\n            }\n            bufferSourceNode.stop(Number.MAX_VALUE);\n        } else {\n            bufferSourceNode.loopStart = 0;\n            bufferSourceNode.loopEnd = 0;\n            if (selRange) bufferSourceNode.stop(this.currentTime + (selRange[1] - this.currentSample) / sampleRate);\n            else bufferSourceNode.stop(Number.MAX_VALUE);\n        }\n    };\n    handleSelRangeChanged = (selRange: [number, number]): void => {\n        const { bufferSourceNode } = this;\n        if (!bufferSourceNode) return;\n        const { buffer, loop } = bufferSourceNode;\n        const { sampleRate } = buffer;\n        if (loop) {\n            if (selRange) {\n                bufferSourceNode.loopStart = selRange[0] / sampleRate;\n                bufferSourceNode.loopEnd = selRange[1] / sampleRate;\n            } else {\n                bufferSourceNode.loopStart = 0;\n                bufferSourceNode.loopEnd = 0;\n            }\n        } else {\n            bufferSourceNode.loopStart = 0;\n            bufferSourceNode.loopEnd = 0;\n            if (selRange) bufferSourceNode.stop(this.currentTime + (selRange[1] - this.currentSample) / sampleRate);\n            else bufferSourceNode.stop(Number.MAX_VALUE);\n        }\n    };\n    handleEnded = () => {\n        const { bufferSourceNode } = this;\n        if (!bufferSourceNode) return;\n        this.editor.handlePlayerEnded(this.getCurrentSample());\n        this.bufferSourceNode.removeEventListener(\"ended\", this.handleEnded);\n        this.bufferSourceNode.disconnect();\n        this.splitterNode.disconnect();\n        this.mergerNode.disconnect();\n        delete this.bufferSourceNode;\n        delete this.splitterNode;\n        delete this.mergerNode;\n    };\n    handleEnabledChannelsChanged = (enabledChannels: boolean[]) => {\n        const { bufferSourceNode } = this;\n        if (!bufferSourceNode) return;\n        this.currentChannels.forEach((enabled, i) => {\n            if (enabledChannels[i] !== enabled) {\n                if (enabledChannels[i]) this.splitterNode.connect(this.mergerNode, i, i);\n                else this.splitterNode.disconnect(this.mergerNode, i, i);\n            }\n        });\n        this.currentChannels = enabledChannels.slice();\n    };\n\n    updateCursorScheduled = false;\n    $updateCursorRaf = -1;\n    updateCursorCallback = () => {\n        this.$updateCursorRaf = -1;\n        this.updateCursorScheduled = false;\n        this.updateCursor();\n    };\n    scheduleUpdateCursor = () => {\n        if (this.updateCursorScheduled) return;\n        if (this.$updateCursorRaf === -1) this.$updateCursorRaf = requestAnimationFrame(this.updateCursorCallback);\n        this.updateCursorScheduled = true;\n    };\n    updateCursor() {\n        if (!this.bufferSourceNode) return;\n        this.editor.setCursor(this.getCurrentSample(), true);\n        this.scheduleUpdateCursor();\n    }\n    constructor(editor: AudioEditor) {\n        this.editor = editor;\n        this.playing = false;\n        this.monitoring = false;\n        // this.destination.channelInterpretation = \"discrete\";\n        this.dummyAnalyserNode = this.audioCtx.createAnalyser();\n        this.preFxGainNode = this.audioCtx.createGain();\n        this.postFxGainNode = this.audioCtx.createGain();\n        this.postFxGainNode.connect(this.destination);\n        this.editor.on(\"loop\", this.handleLoopChanged);\n        this.editor.on(\"selRangeToPlay\", this.handleSelRangeChanged);\n        this.editor.on(\"enabledChannels\", this.handleEnabledChannelsChanged);\n    }\n    async init() {\n        const audioWorklet = this.audioCtx.audioWorklet;\n        await TemporalAnalyserNode.register(audioWorklet);\n        this.postAnalyserNode = new TemporalAnalyserNode(this.audioCtx);\n        this.postFxGainNode.connect(this.postAnalyserNode);\n    }\n    async destroy() {\n        if (this.playing) this.stop();\n        await this.postAnalyserNode.destroy();\n    }\n    getCurrentSample() {\n        const { buffer } = this.bufferSourceNode;\n        const delta = (this.audioCtx.currentTime - this.currentTime) * buffer.sampleRate;\n        const selRange = this.editor.state?.selRange || [0, buffer.length];\n        this.currentSample += delta;\n        this.currentTime = this.audioCtx.currentTime;\n        if (this.loop) {\n            if (this.currentSample > selRange[1]) this.currentSample = (this.currentSample - selRange[0]) % (selRange[1] - selRange[0]) + selRange[0];\n        } else {\n            if (this.currentSample > selRange[1]) this.currentSample = selRange[1];\n        }\n        return ~~this.currentSample;\n    }\n    play() {\n        this.stop();\n        const audio = this.editor;\n        const { cursor, selRange, enabledChannels, preFxGain, postFxGain, loop } = this.editor.state;\n        const { sampleRate, numberOfChannels, audioBuffer } = audio;\n        const offset = (selRange ? selRange[0] : cursor) / sampleRate;\n        const duration = selRange ? (selRange[1] - selRange[0]) / sampleRate : undefined;\n        const bufferSourceNode = this.audioCtx.createBufferSource();\n        bufferSourceNode.channelCountMode = \"explicit\";\n        bufferSourceNode.channelInterpretation = \"discrete\";\n        bufferSourceNode.channelCount = numberOfChannels;\n        this.currentTime = this.audioCtx.currentTime;\n        this.currentSample = selRange ? selRange[0] : cursor;\n        this.currentChannels = enabledChannels.slice();\n        this.bufferSourceNode = bufferSourceNode;\n        this.splitterNode = this.audioCtx.createChannelSplitter(numberOfChannels);\n        this.mergerNode = this.audioCtx.createChannelMerger(numberOfChannels);\n        this.mergerNode.channelInterpretation = \"discrete\";\n        this.preFxGainNode.gain.value = dbtoa(preFxGain);\n        this.postFxGainNode.gain.value = dbtoa(postFxGain);\n        bufferSourceNode.buffer = audioBuffer;\n        bufferSourceNode.connect(this.dummyAnalyserNode);\n        bufferSourceNode.connect(this.splitterNode);\n        enabledChannels.forEach((enabled, i) => {\n            if (enabled && i < numberOfChannels) this.splitterNode.connect(this.mergerNode, i, i);\n        });\n        this.mergerNode.connect(this.preFxGainNode);\n        if (!this.monitoring) this.connectPlugins();\n        bufferSourceNode.loop = !!loop;\n        bufferSourceNode.addEventListener(\"ended\", this.handleEnded);\n        if (loop) {\n            if (duration) {\n                bufferSourceNode.loopStart = offset;\n                bufferSourceNode.loopEnd = offset + duration;\n            }\n            bufferSourceNode.start(this.currentTime, offset);\n        } else {\n            bufferSourceNode.start(this.currentTime, offset);\n            if (duration) bufferSourceNode.stop(this.currentTime + duration);\n            else bufferSourceNode.stop(Number.MAX_VALUE);\n        }\n        this.playing = true;\n        this.scheduleUpdateCursor();\n    }\n    stop() {\n        if (!this.bufferSourceNode) return;\n        this.bufferSourceNode.stop();\n        this.bufferSourceNode.removeEventListener(\"ended\", this.handleEnded);\n        this.bufferSourceNode.disconnect();\n        this.splitterNode.disconnect();\n        this.mergerNode.disconnect();\n        if (!this.monitoring) this.disconnectPlugins();\n        delete this.bufferSourceNode;\n        delete this.splitterNode;\n        delete this.mergerNode;\n        this.playing = false;\n    }\n    startMonitoring() {\n        this.stopMonitoring();\n        const sourceNode = this.editor.recorder.node;\n        if (!sourceNode) return;\n        this.mediaStreamSourceNode = sourceNode;\n        if (!this.playing) this.connectPlugins();\n        this.mediaStreamSourceNode.connect(this.preFxGainNode);\n        this.monitoring = true;\n    }\n    stopMonitoring() {\n        if (!this.mediaStreamSourceNode) return;\n        this.mediaStreamSourceNode.disconnect(this.preFxGainNode);\n        if (!this.playing) this.disconnectPlugins();\n        delete this.mediaStreamSourceNode;\n        this.monitoring = false;\n    }\n\n    connectPlugins() {\n        const { plugins, pluginsEnabled } = this.editor.state;\n        let firstPluginNode: AudioNode;\n        let lastPluginNode: AudioNode;\n        plugins.forEach((p) => {\n            if (!p) return;\n            if (!pluginsEnabled.has(p)) return;\n            if (!firstPluginNode) firstPluginNode = p.audioNode;\n            lastPluginNode = p.audioNode;\n        });\n        if (firstPluginNode) {\n            this.preFxGainNode.connect(firstPluginNode);\n            lastPluginNode.connect(this.postFxGainNode);\n        } else {\n            this.preFxGainNode.connect(this.postFxGainNode);\n        }\n    }\n    disconnectPlugins() {\n        const { plugins, pluginsEnabled } = this.editor.state;\n        this.preFxGainNode.disconnect();\n        let lastPluginNode: AudioNode;\n        plugins.forEach((p) => {\n            if (!p) return;\n            if (!pluginsEnabled.has(p)) return;\n            lastPluginNode = p.audioNode;\n        });\n        if (lastPluginNode) lastPluginNode.disconnect(this.postFxGainNode);\n    }\n\n    async addPlugin(url: string, indexIn: number) {\n        const { plugins, pluginsEnabled } = this.editor.state;\n        const { default: Plugin }: { default: typeof WebAudioModule } = await import(/* webpackIgnore: true */url);\n        const plugin = await Plugin.createInstance(this.audioCtx);\n        const { audioNode } = plugin;\n        const usingPlugins = this.playing || this.monitoring;\n        let preNode: AudioNode;\n        let postNode: AudioNode;\n        let index = indexIn;\n        while (index >= 0) {\n            index--;\n            if (plugins[index]) {\n                preNode = plugins[index].audioNode;\n                break;\n            }\n        }\n        if (!preNode && usingPlugins) preNode = this.preFxGainNode;\n        index = indexIn;\n        while (index < plugins.length) {\n            if (plugins[index]) {\n                postNode = plugins[index].audioNode;\n                break;\n            }\n            index++;\n        }\n        if (!postNode && usingPlugins) postNode = this.postFxGainNode;\n        audioNode.connect(this.dummyAnalyserNode);\n        if (preNode && postNode) preNode.disconnect(postNode);\n        if (preNode) preNode.connect(audioNode);\n        if (postNode) audioNode.connect(postNode);\n        plugins.splice(indexIn, 0, plugin);\n        pluginsEnabled.add(plugin);\n        this.editor.emitPluginsChanged();\n        return plugin;\n    }\n    removePlugin(indexIn: number) {\n        const { plugins, pluginsEnabled } = this.editor.state;\n        const plugin = plugins[indexIn];\n        if (!plugin) return;\n        const { audioNode } = plugin;\n        const usingPlugins = this.playing || this.monitoring;\n        let preNode: AudioNode;\n        let postNode: AudioNode;\n        let index = indexIn - 1;\n        while (index >= 0) {\n            if (plugins[index]) {\n                preNode = plugins[index].audioNode;\n                break;\n            }\n            index--;\n        }\n        if (!preNode && usingPlugins) preNode = this.preFxGainNode;\n        index = indexIn + 1;\n        while (index < plugins.length) {\n            if (plugins[index]) {\n                postNode = plugins[index].audioNode;\n                break;\n            }\n            index++;\n        }\n        if (!postNode && usingPlugins) postNode = this.postFxGainNode;\n        audioNode.disconnect();\n        if (pluginsEnabled.has(plugin) && preNode) {\n            preNode.disconnect(audioNode);\n            if (postNode) preNode.connect(postNode);\n        }\n        if (plugin.audioNode) plugin.audioNode.destroy();\n        delete plugins[indexIn];\n        plugins.splice(indexIn, 1);\n        if (plugins.length < 10) plugins.push(undefined);\n        this.editor.emitPluginsChanged();\n    }\n    movePlugin(fromIndexIn: number, toIndexIn: number) {\n        const { plugins, pluginsEnabled } = this.editor.state;\n        if (!plugins[fromIndexIn]) return;\n        const plugin = plugins[fromIndexIn];\n        const { audioNode } = plugin;\n        const usingPlugins = this.playing || this.monitoring;\n        const enabled = pluginsEnabled.has(plugin);\n        let preNode: AudioNode;\n        let postNode: AudioNode;\n        let index = fromIndexIn - 1;\n        while (index >= 0) {\n            if (plugins[index]) {\n                preNode = plugins[index].audioNode;\n                break;\n            }\n            index--;\n        }\n        if (!preNode && usingPlugins) preNode = this.preFxGainNode;\n        index = fromIndexIn + 1;\n        while (index < plugins.length) {\n            if (plugins[index]) {\n                postNode = plugins[index].audioNode;\n                break;\n            }\n            index++;\n        }\n        if (!postNode && usingPlugins) postNode = this.postFxGainNode;\n        if (enabled) {\n            if (preNode) preNode.disconnect(audioNode);\n            if (postNode) audioNode.disconnect(postNode);\n            if (preNode && postNode) preNode.connect(postNode);\n        }\n        plugins.splice(fromIndexIn, 1);\n        preNode = undefined;\n        postNode = undefined;\n        index = toIndexIn - 1;\n        while (index >= 0) {\n            if (plugins[index]) {\n                preNode = plugins[index].audioNode;\n                break;\n            }\n            index--;\n        }\n        if (!preNode && usingPlugins) preNode = this.preFxGainNode;\n        index = toIndexIn + 1;\n        while (index < plugins.length) {\n            if (plugins[index]) {\n                postNode = plugins[index].audioNode;\n                break;\n            }\n            index++;\n        }\n        if (!postNode && usingPlugins) postNode = this.postFxGainNode;\n        if (enabled) {\n            if (preNode && postNode) preNode.disconnect(postNode);\n            if (preNode) preNode.connect(audioNode);\n            if (postNode) audioNode.connect(postNode);\n        }\n        plugins.splice(toIndexIn, 0, plugin);\n        this.editor.emitPluginsChanged();\n    }\n    setPluginEnabled(indexIn: number, enabled: boolean) {\n        const { plugins, pluginsEnabled } = this.editor.state;\n        const plugin = plugins[indexIn];\n        if (!plugin) return;\n        if (pluginsEnabled.has(plugin) === enabled) return;\n        let index = indexIn - 1;\n        const { audioNode } = plugins[indexIn];\n        const usingPlugins = this.playing || this.monitoring;\n        let preNode: AudioNode;\n        let postNode: AudioNode;\n        while (index >= 0) {\n            if (plugins[index]) {\n                preNode = plugins[index].audioNode;\n                break;\n            }\n            index--;\n        }\n        if (!preNode && usingPlugins) preNode = this.preFxGainNode;\n        index = indexIn + 1;\n        while (index < plugins.length) {\n            if (plugins[index]) {\n                postNode = plugins[index].audioNode;\n                break;\n            }\n            index++;\n        }\n        if (!postNode && usingPlugins) postNode = this.postFxGainNode;\n        if (enabled) {\n            if (preNode && postNode) preNode.disconnect(postNode);\n            if (preNode) preNode.connect(audioNode);\n            if (postNode) audioNode.connect(postNode);\n        } else {\n            if (preNode) preNode.disconnect(audioNode);\n            if (postNode) audioNode.disconnect(postNode);\n            if (preNode && postNode) preNode.connect(postNode);\n        }\n        if (enabled) pluginsEnabled.add(plugin);\n        else pluginsEnabled.delete(plugin);\n        this.editor.emitPluginsChanged();\n    }\n}\n","import OperableAudioBuffer from \"./OperableAudioBuffer\";\nimport PatcherAudio from \"./PatcherAudio\";\nimport TransmitterNode from \"../worklets/Transmitter\";\nimport AudioEditor from \"./AudioEditor\";\n\nexport default class AudioRecorder {\n    readonly editor: AudioEditor;\n    device: string;\n    stream: MediaStream;\n    constraints: MediaTrackConstraintSet = { echoCancellation: false, noiseSuppression: false, autoGainControl: false };\n    node: MediaStreamAudioSourceNode;\n    transmitter: TransmitterNode;\n    overwrittenAudio: PatcherAudio;\n    recording = false;\n    $: number;\n    $start: number;\n    $end: number;\n    inPlace: boolean;\n    get audioCtx() {\n        return this.editor.audioCtx;\n    }\n    get audio() {\n        return this.editor;\n    }\n    constructor(editor: AudioEditor) {\n        this.editor = editor;\n        navigator.mediaDevices.addEventListener(\"devicechange\", this.handleDeviceChange);\n    }\n    async init() {\n        await TransmitterNode.register(this.audioCtx.audioWorklet);\n        this.transmitter = new TransmitterNode(this.audioCtx);\n        this.transmitter.handleReceiveBuffer = this.handleReceiveBuffer;\n        await this.newSearch();\n    }\n    async destroy() {\n        navigator.mediaDevices.removeEventListener(\"devicechange\", this.handleDeviceChange);\n        if (this.recording) await this.stop();\n        await this.transmitter.destroy();\n    }\n    handleDeviceChange = async () => {\n        const devices = await navigator.mediaDevices.enumerateDevices();\n        const enums = devices.filter(d => d.kind === \"audioinput\").map(d => d.label || d.deviceId);\n        if (enums.indexOf(this.device) === -1) {\n            this.device = devices.find(d => d.deviceId === \"default\") ? \"default\" : devices.length ? devices[0].deviceId : \"default\";\n            await this.newSearch(this.device);\n        }\n    };\n    handleReceiveBuffer = async (bufferIn: Float32Array[], $total: number) => {\n        if (!this.recording) return;\n        let extended = false;\n        const { $, $start, $end, inPlace, audio, overwrittenAudio } = this;\n        const { length, numberOfChannels, sampleRate } = audio;\n        const $target = $start + $total;\n        const copyLength = (inPlace ? Math.min($target, $end) : $target) - $;\n        if (!inPlace && $target > length) { // extend current buffer\n            const newLength = 2 ** Math.ceil(Math.log(length + sampleRate) / Math.log(2));\n            const newBuffer = new OperableAudioBuffer({ numberOfChannels, length: newLength, sampleRate });\n            for (let i = 0; i < numberOfChannels; i++) {\n                const channel = newBuffer.getChannelData(i);\n                channel.set(audio.audioBuffer.getChannelData(i));\n                if (bufferIn[i]) {\n                    if (overwrittenAudio && $ < $end) {\n                        const overwrittenChannel = overwrittenAudio.audioBuffer.getChannelData(i);\n                        overwrittenChannel.set(channel.subarray($, $end), $ - $start);\n                    }\n                    channel.set(bufferIn[i], $);\n                }\n            }\n            audio.instance.audioBuffer = newBuffer;\n            audio.waveform.update($, newLength);\n            extended = true;\n        } else {\n            for (let i = 0; i < numberOfChannels; i++) {\n                const channel = audio.audioBuffer.getChannelData(i);\n                if (bufferIn[i]) {\n                    if (overwrittenAudio && $ < $end) {\n                        const overwrittenChannel = overwrittenAudio.audioBuffer.getChannelData(i);\n                        overwrittenChannel.set(channel.subarray($, Math.min($ + copyLength, $end)), $ - $start);\n                    }\n                    if (!inPlace || $target <= $end) channel.set(bufferIn[i], $);\n                    else channel.set(bufferIn[i].subarray(0, copyLength), $);\n                }\n            }\n            audio.waveform.update($, $ + copyLength);\n        }\n        this.$ += copyLength;\n        audio.instance.emit(\"setAudio\");\n        this.editor.setCursor(this.$);\n        if (extended) this.editor.setViewRange([this.editor.state.viewRange[0], this.audio.length]);\n        if (inPlace && this.$ === $end) {\n            this.editor.setRecording(false);\n            await this.stop();\n        }\n    };\n    newSearch = async (search?: string) => {\n        if (this.device && this.device === search) return;\n        if (this.stream && (this.recording || this.editor.player.monitoring)) {\n            this.node.disconnect();\n            this.stream.getAudioTracks().forEach(t => t.stop());\n            delete this.node;\n            delete this.stream;\n            delete this.editor.player.mediaStreamSourceNode;\n        }\n        const devices = await navigator.mediaDevices.enumerateDevices();\n        const enums = devices.filter(d => d.kind === \"audioinput\");\n        if (search) {\n            const device = devices.find(d => d.kind === \"audioinput\" && (d.deviceId === search || d.label === search));\n            if (device) this.device = device.deviceId;\n        } else {\n            this.device = enums.length ? enums[0].deviceId : undefined;\n        }\n        this.stream = await navigator.mediaDevices.getUserMedia({ audio: this.getConstraints(this.device) });\n        if (this.stream) {\n            if (this.recording || this.editor.player.monitoring) {\n                this.resetNode();\n                this.node.connect(this.transmitter);\n                if (this.editor.player.monitoring) this.node.connect(this.editor.player.preFxGainNode);\n                else this.node.connect(this.editor.player.postAnalyserNode);\n            } else {\n                this.resetNode();\n            }\n        }\n    };\n    getConstraints(deviceId?: string): MediaTrackConstraintSet {\n        return {\n            deviceId,\n            sampleRate: this.editor.sampleRate || this.audioCtx.sampleRate,\n            channelCount: this.editor.numberOfChannels || undefined,\n            ...this.constraints\n        };\n    }\n    resetNode() {\n        if (this.stream) {\n            this.node = this.audioCtx.createMediaStreamSource(this.stream);\n            this.node.channelInterpretation = \"discrete\";\n        }\n    }\n    async start() {\n        if (!this.node) return false;\n        this.node.connect(this.transmitter);\n        if (!this.editor.player.monitoring) this.node.connect(this.editor.player.postAnalyserNode);\n        const { state, ctx, length, numberOfChannels, sampleRate } = this.editor;\n        const { cursor, selRange } = state;\n        if (selRange) {\n            const [$start, $end] = selRange;\n            this.inPlace = true;\n            this.$start = $start;\n            this.$end = $end;\n            this.$ = $start;\n        } else {\n            this.inPlace = false;\n            this.$start = cursor;\n            this.$end = length;\n            this.$ = cursor;\n        }\n        const overwrittenBufferLength = this.$end - this.$start;\n        if (overwrittenBufferLength) this.overwrittenAudio = await PatcherAudio.fromSilence(ctx, numberOfChannels, overwrittenBufferLength, sampleRate);\n        else this.overwrittenAudio = undefined;\n        this.recording = true;\n        await this.transmitter.reset();\n        await this.transmitter.start();\n        return true;\n    }\n    async stop() {\n        this.recording = false;\n        if (!this.node) return;\n        if (!this.editor.player.monitoring) this.node.disconnect(this.editor.player.postAnalyserNode);\n        await this.transmitter.stop();\n        if (!this.inPlace && this.$ > this.$end && this.$ < this.audio.length) {\n            const [audio] = await this.audio.instance.split(this.$);\n            this.audio.instance.setAudio(audio);\n            if (this.overwrittenAudio) this.overwrittenAudio.waveform.update();\n        } else {\n            if (this.overwrittenAudio) {\n                if (this.$ < this.$end) {\n                    const [audio] = await this.overwrittenAudio.split(this.$ - this.$start);\n                    this.overwrittenAudio.setAudio(audio);\n                }\n                this.overwrittenAudio.waveform.update();\n            }\n        }\n        const audio = await this.audio.instance.pick(this.$start, this.$, true);\n        this.editor.emit(\"recorded\", { range: (this.inPlace || this.overwrittenAudio) ? [this.$start, this.$] : undefined, cursor: (this.inPlace || this.overwrittenAudio) ? undefined : this.$start, audio, oldAudio: this.overwrittenAudio });\n        this.editor.setSelRange([this.$start, this.$]);\n    }\n}\n","export default class OperableAudioBuffer extends AudioBuffer {\n    clone() {\n        const newBuffer = new OperableAudioBuffer(this);\n        for (let i = 0; i < this.numberOfChannels; i++) {\n            const channel = this.getChannelData(i);\n            newBuffer.copyToChannel(channel, i);\n        }\n        return newBuffer;\n    }\n    reverse() {\n        for (let i = 0; i < this.numberOfChannels; i++) {\n            const channel = this.getChannelData(i);\n            channel.reverse();\n        }\n    }\n    inverse() {\n        for (let i = 0; i < this.numberOfChannels; i++) {\n            const channel = this.getChannelData(i);\n            for (let j = 0; j < channel.length; j++) {\n                channel[j] = -channel[j];\n            }\n        }\n    }\n    concat(that: AudioBuffer, numberOfChannels = this.numberOfChannels) {\n        const { sampleRate } = this;\n        const length = this.length + that.length;\n        const buffer = new OperableAudioBuffer({ numberOfChannels, length, sampleRate });\n        const from = this.length;\n        for (let i = 0; i < numberOfChannels; i++) {\n            // const channel = buffer.getChannelData(i);\n            // const channel1 = i < buffer1.numberOfChannels ? buffer1.getChannelData(i) : new Float32Array(buffer1.length);\n            // const channel2 = i < buffer2.numberOfChannels ? buffer2.getChannelData(i) : new Float32Array(buffer2.length);\n            if (i < this.numberOfChannels) buffer.copyToChannel(this.getChannelData(i), i);\n            if (i < that.numberOfChannels) buffer.copyToChannel(that.getChannelData(i), i, from);\n            // channel.set(channel1);\n            // channel.set(channel2, from);\n        }\n        return buffer;\n    }\n    split(from: number): [OperableAudioBuffer, OperableAudioBuffer] {\n        if (from >= this.length || from <= 0) throw new RangeError(\"Split point is out of bound\");\n        // split buffer\n        const { length, sampleRate, numberOfChannels } = this;\n        const buffer1 = new OperableAudioBuffer({ length: from, numberOfChannels, sampleRate });\n        const buffer2 = new OperableAudioBuffer({ length: length - from, numberOfChannels, sampleRate });\n        for (let i = 0; i < numberOfChannels; i++) {\n            // const channel = buffer.getChannelData(i);\n            const channel1 = buffer1.getChannelData(i);\n            const channel2 = buffer2.getChannelData(i);\n            this.copyFromChannel(channel1, i);\n            this.copyFromChannel(channel2, i, from);\n            // channel1.set(channel.subarray(0, from));\n            // channel2.set(channel.subarray(from));\n        }\n        return [buffer1, buffer2];\n    }\n    write(channel: number, index: number, value: number) {\n        if (channel > this.numberOfChannels) throw new Error(`Channel written ${channel} out of range ${this.numberOfChannels}`);\n        if (index > this.length) throw new Error(`Index written ${index} out of range ${this.length}`);\n        this.getChannelData(channel)[index] = value;\n    }\n    toArray(shared = false) {\n        const supportSAB = typeof SharedArrayBuffer !== \"undefined\";\n        const channelData: Float32Array[] = [];\n        const { numberOfChannels, length } = this;\n        for (let i = 0; i < numberOfChannels; i++) {\n            if (shared && supportSAB) {\n                channelData[i] = new Float32Array(new SharedArrayBuffer(length * Float32Array.BYTES_PER_ELEMENT));\n                channelData[i].set(this.getChannelData(i));\n            } else {\n                channelData[i] = this.getChannelData(i);\n            }\n        }\n        return channelData;\n    }\n}\n","import type { WebAudioModule } from \"wamsdk/src/api\";\nimport { dbtoa, isIdentityMatrix, normExp } from \"../../utils/math\";\nimport AudioEditor from \"./AudioEditor\";\nimport FileInstance from \"../file/FileInstance\";\nimport AudioHistory from \"./AudioHistory\";\nimport OperableAudioBuffer from \"./OperableAudioBuffer\";\nimport Waveform from \"../../utils/Waveform\";\nimport type { Options } from \"../../utils/WavEncoder\";\nimport type PersistentProjectFile from \"../file/PersistentProjectFile\";\nimport type TempAudioFile from \"./TempAudioFile\";\nimport type Env from \"../Env\";\nimport type { IJSPatcherEnv } from \"../Env\";\nimport type Project from \"../Project\";\nimport type { IProject } from \"../Project\";\n\nexport interface PatcherAudioEventMap {\n    \"setAudio\": never;\n    \"selRange\": [number, number];\n    \"cursor\": number;\n    \"postInit\": never;\n}\n\nexport default class PatcherAudio extends FileInstance<PatcherAudioEventMap, PersistentProjectFile | TempAudioFile> {\n    static async fromProjectItem(options: { file: PersistentProjectFile; env: IJSPatcherEnv; project?: IProject; instanceId?: string }) {\n        return new this(options).init(options.file.data.slice(0));\n    }\n    static async fromArrayBuffer(options: ConstructorParameters<typeof PatcherAudio>[0], data: ArrayBuffer) {\n        const audio = new PatcherAudio(options);\n        await audio.init(data.slice(0));\n        return audio;\n    }\n    static async fromNativeAudioBuffer(options: ConstructorParameters<typeof PatcherAudio>[0], bufferIn: AudioBuffer) {\n        const audio = new PatcherAudio(options);\n        const audioBuffer = Object.setPrototypeOf(bufferIn, OperableAudioBuffer.prototype);\n        audio.audioBuffer = audioBuffer;\n        audio.waveform = new Waveform(audio);\n        await audio.waveform.generate();\n        await audio.emit(\"postInit\");\n        audio._isReady = true;\n        await audio.emit(\"ready\");\n        return audio;\n    }\n    static async fromSilence(optionsIn: ConstructorParameters<typeof PatcherAudio>[0], numberOfChannels: number, length: number, sampleRate: number) {\n        const audio = new PatcherAudio(optionsIn);\n        audio.audioBuffer = new OperableAudioBuffer({ length, numberOfChannels, sampleRate });\n        audio.waveform = new Waveform(audio);\n        audio.waveform.generateEmpty(numberOfChannels, length);\n        await audio.emit(\"postInit\");\n        audio._isReady = true;\n        await audio.emit(\"ready\");\n        return audio;\n    }\n    async getEditor() {\n        const editor = new AudioEditor(this);\n        return editor.init();\n    }\n    get audioCtx() {\n        return (this.project as Project)?.audioCtx || (this.env as Env).audioCtx;\n    }\n    audioBuffer: OperableAudioBuffer;\n    waveform: Waveform;\n    _history = new AudioHistory();\n\n    get length() {\n        return this.audioBuffer.length;\n    }\n    get numberOfChannels() {\n        return this.audioBuffer.numberOfChannels;\n    }\n    get sampleRate() {\n        return this.audioBuffer.sampleRate;\n    }\n    async init(data?: ArrayBuffer) {\n        const { audioCtx } = this;\n        await this.env.taskMgr.newTask(this, \"Initializing Audio\", async (onUpdate) => {\n            onUpdate(\"Decoding Audio...\");\n            if (data?.byteLength) {\n                const audioBuffer = await audioCtx.decodeAudioData(data);\n                this.audioBuffer = Object.setPrototypeOf(audioBuffer, OperableAudioBuffer.prototype);\n            } else {\n                this.audioBuffer = new OperableAudioBuffer({ length: 1, numberOfChannels: 1, sampleRate: audioCtx.sampleRate });\n            }\n            onUpdate(\"Generating Waveform...\");\n            this.waveform = new Waveform(this);\n            await this.waveform.generate();\n        });\n        this.on(\"setAudio\", () => this.emit(\"changed\"));\n        await this.emit(\"postInit\");\n        this._isReady = true;\n        await this.emit(\"ready\");\n        return this;\n    }\n    async initWithOptions(options: Partial<AudioBufferOptions>) {\n        const { length = 1, numberOfChannels = 1, sampleRate = this.audioCtx.sampleRate } = options;\n        this.audioBuffer = new OperableAudioBuffer({ length, numberOfChannels, sampleRate });\n        this.waveform = new Waveform(this);\n        await this.waveform.generate();\n        await this.emit(\"postInit\");\n        this._isReady = true;\n        await this.emit(\"ready\");\n    }\n    async initWith(audio: { audioBuffer: OperableAudioBuffer; waveform: Waveform }) {\n        this.setAudio(audio);\n        await this.emit(\"postInit\");\n        this._isReady = true;\n        await this.emit(\"ready\");\n    }\n    async serialize(optionsIn: Omit<Partial<Options>, \"sampleRate\"> = { bitDepth: 32, float: true }) {\n        return this.env.taskMgr.newTask(this, \"Encoding audio WAVE...\", () => {\n            const audioData = this.audioBuffer.toArray(true);\n            const options = { sampleRate: this.audioBuffer.sampleRate, bitDepth: 32, float: true, ...optionsIn };\n            return (this.env as Env).wavEncoderWorker.encode(audioData, options);\n        });\n    }\n    private encodeFFmpegWorker(wav: Uint8Array, inputFileName: string, outputFileName: string, ...args: string[]) {\n        return this.env.taskMgr.newTask(this, `Encoding audio ${outputFileName}...`, async (onUpdate) => {\n            const ffmpegWorker = await (this.env as Env).getFFmpeg();\n            // const handleProgress = (ratio: number) => onUpdate(`Encoding: ${(ratio * 100).toFixed(2)}%`);\n            ffmpegWorker.on(\"ffout\", onUpdate);\n            ffmpegWorker.on(\"fferr\", onUpdate);\n            ffmpegWorker.on(\"info\", onUpdate);\n            // ffmpegWorker.on(\"progress\", handleProgress);\n            try {\n                const result = await ffmpegWorker.run({\n                    data: wav,\n                    input: inputFileName,\n                    output: outputFileName,\n                    args: [\"-i\", inputFileName, ...args, outputFileName]\n                });\n                return result;\n            } finally {\n                ffmpegWorker.off(\"ffout\", onUpdate);\n                ffmpegWorker.off(\"fferr\", onUpdate);\n                ffmpegWorker.off(\"info\", onUpdate);\n                // ffmpegWorker.off(\"progress\", handleProgress);\n            }\n        });\n    }\n    async encodeMp3(bitrate: number) {\n        const wav = new Uint8Array(await this.serialize({ shared: true }));\n        const inputFileName = \"in.wav\";\n        const outputFileName = \"out.mp3\";\n        return this.encodeFFmpegWorker(wav, inputFileName, outputFileName, \"-codec:a\", \"libmp3lame\", \"-b:a\", `${bitrate}k`);\n    }\n    async encodeAac(bitrate: number) {\n        const wav = new Uint8Array(await this.serialize({ shared: true }));\n        const inputFileName = \"in.wav\";\n        const outputFileName = \"out.m4a\";\n        return this.encodeFFmpegWorker(wav, inputFileName, outputFileName, \"-codec:a\", \"aac\", \"-b:a\", `${bitrate}k`);\n    }\n    async clone() {\n        const audio = new PatcherAudio({ env: this.env, project: this.project, file: this.file });\n        await audio.initWith({\n            audioBuffer: this.audioBuffer.clone(),\n            waveform: this.waveform.clone()\n        });\n        return audio;\n    }\n    setAudio(that: { audioBuffer: OperableAudioBuffer; waveform: Waveform }) {\n        this.audioBuffer = that.audioBuffer;\n        this.waveform = that.waveform;\n        this.waveform.patcherAudio = this;\n        this.emit(\"setAudio\");\n    }\n    async silence(range: [number, number]) {\n        const [selStart, selEnd] = range;\n        const length = selEnd - selStart;\n        const audio = await PatcherAudio.fromSilence({ env: this.env, project: this.project, file: this.file }, this.numberOfChannels, length, this.sampleRate);\n        const oldAudio = await this.pasteToRange(audio, selStart, selEnd);\n        return { range: [selStart, selEnd] as [number, number], audio, oldAudio };\n    }\n    async insertSilence(length: number, from: number) {\n        if (!length) return null;\n        const audio = await PatcherAudio.fromSilence({ env: this.env, project: this.project, file: this.file }, this.numberOfChannels, length, this.sampleRate);\n        this.insertToCursor(audio, from);\n        return { range: [from, from + length] as [number, number], audio };\n    }\n    reverse() {\n        this.audioBuffer.reverse();\n        this.waveform.reverse();\n    }\n    inverse() {\n        this.audioBuffer.inverse();\n        this.waveform.inverse();\n    }\n    async concat(that: PatcherAudio, numberOfChannels = this.audioBuffer.numberOfChannels) {\n        const audio = new PatcherAudio({ env: this.env, project: this.project, file: this.file });\n        const audioBuffer = this.audioBuffer.concat(that.audioBuffer, numberOfChannels);\n        audio.audioBuffer = audioBuffer;\n        const waveform = this.waveform.concat(that.waveform, audio, numberOfChannels);\n        await audio.initWith({ audioBuffer, waveform });\n        return audio;\n    }\n    async split(from: number) {\n        const audio1 = new PatcherAudio({ env: this.env, project: this.project, file: this.file });\n        const audio2 = new PatcherAudio({ env: this.env, project: this.project, file: this.file });\n        const [ab1, ab2] = this.audioBuffer.split(from);\n        audio1.audioBuffer = ab1;\n        audio2.audioBuffer = ab2;\n        const [wf1, wf2] = this.waveform.split(from, audio1, audio2);\n        await audio1.initWith({ audioBuffer: ab1, waveform: wf1 });\n        await audio2.initWith({ audioBuffer: ab2, waveform: wf2 });\n        return [audio1, audio2] as [PatcherAudio, PatcherAudio];\n    }\n    async pick(from: number, to: number, clone = false) {\n        let picked: PatcherAudio;\n        let audioBuffer: OperableAudioBuffer;\n        let waveform: Waveform;\n        if (from <= 0 && to >= this.length) {\n            picked = new PatcherAudio({ env: this.env, project: this.project, file: this.file });\n            if (clone) {\n                audioBuffer = this.audioBuffer.clone();\n                waveform = this.waveform.clone();\n            } else {\n                audioBuffer = this.audioBuffer;\n                waveform = this.waveform;\n            }\n            await picked.initWith({ audioBuffer, waveform });\n            return picked;\n            // eslint-disable-next-line no-else-return\n        } else if (from <= 0) {\n            picked = (await this.split(to))[0];\n        } else if (to >= this.length) {\n            picked = (await this.split(from))[1];\n        } else {\n            const p0 = (await this.split(to))[0];\n            picked = (await p0.split(from))[1];\n        }\n        if (clone) picked.waveform = picked.waveform.clone();\n        return picked;\n    }\n    async removeFromRange(from: number, to: number) {\n        if (from === 0 && to === this.length) {\n            const old = await this.clone();\n            const { numberOfChannels, sampleRate } = this.audioBuffer;\n            const audioBuffer = new OperableAudioBuffer({ length: 1, numberOfChannels, sampleRate });\n            const waveform = new Waveform(this);\n            this.setAudio({ audioBuffer, waveform });\n            this.setCursor(from);\n            return old;\n        // eslint-disable-next-line no-else-return\n        } else if (from === 0) {\n            const [p1, p2] = await this.split(to);\n            this.setAudio(p2);\n            this.setCursor(from);\n            return p1;\n        } else if (to === this.audioBuffer.length) {\n            const [p1, p2] = await this.split(from);\n            this.setAudio(p1);\n            this.setCursor(from);\n            return p2;\n        } else {\n            const [p0, p3] = await this.split(to);\n            const [p1, p2] = await p0.split(from);\n            const concat = await p1.concat(p3);\n            this.setAudio(concat);\n            this.setCursor(from);\n            return p2;\n        }\n    }\n    async pasteToRange(that: PatcherAudio, from: number, to: number) {\n        if (from <= 0 && to >= this.length) {\n            const old = await this.clone();\n            this.setAudio(that);\n            this.setSelRangeToAll();\n            return old;\n        // eslint-disable-next-line no-else-return\n        } else if (from <= 0) {\n            const [p1, p2] = await this.split(to);\n            const concat = await that.concat(p2, p2.numberOfChannels);\n            this.setAudio(concat);\n            this.setSelRange([0, that.length]);\n            return p1;\n        } else if (to >= this.length) {\n            const [p1, p2] = await this.split(from);\n            const concat = await p1.concat(that);\n            this.setAudio(concat);\n            this.setSelRange([from, this.length]);\n            return p2;\n        } else {\n            const [p, p2] = await this.split(to);\n            const [p0, old] = await p.split(from);\n            const p1 = await p0.concat(that);\n            const concat = await p1.concat(p2);\n            this.setAudio(concat);\n            this.setSelRange([from, from + that.length]);\n            return old;\n        }\n    }\n    async insertToCursor(that: PatcherAudio, cursor: number) {\n        if (cursor <= 0) {\n            const concat = await that.concat(this, this.numberOfChannels);\n            this.setAudio(concat);\n            this.setSelRange([0, that.length]);\n        } else if (cursor >= this.length) {\n            const concat = await this.concat(that);\n            this.setAudio(concat);\n            this.setSelRange([cursor, this.length]);\n        } else {\n            const [p0, p2] = await this.split(cursor);\n            const p1 = await p0.concat(that);\n            const concat = await p1.concat(p2);\n            this.setAudio(concat);\n            this.setSelRange([cursor, cursor + that.length]);\n        }\n    }\n    async fade(gain: number, from: number, to: number, enabledChannels: boolean[]) {\n        const oldAudio = await this.pick(from, to, true);\n        const factor = dbtoa(gain);\n        for (let c = 0; c < this.numberOfChannels; c++) {\n            if (!enabledChannels[c]) return null;\n            const channel = this.audioBuffer.getChannelData(c);\n            for (let i = from; i < to; i++) {\n                channel[i] *= factor;\n            }\n        }\n        this.waveform.update(from, to);\n        const audio = await this.pick(from, to, true);\n        return { gain, range: [from, to] as [number, number], audio, oldAudio };\n    }\n    async fadeIn(lengthIn: number, exponent: number, enabledChannels: boolean[]) {\n        const length = Math.max(0, Math.min(this.length, ~~lengthIn));\n        if (!length) return null;\n        const oldAudio = await this.pick(0, length, true);\n        for (let c = 0; c < this.numberOfChannels; c++) {\n            if (!enabledChannels[c]) return null;\n            const channel = this.audioBuffer.getChannelData(c);\n            for (let i = 0; i < length; i++) {\n                channel[i] *= normExp(i / length, exponent);\n            }\n        }\n        this.waveform.update(0, length);\n        const audio = await this.pick(0, length, true);\n        return { length, exponent, audio, oldAudio };\n    }\n    async fadeOut(lengthIn: number, exponent: number, enabledChannels: boolean[]) {\n        const l = this.length;\n        const length = Math.max(0, Math.min(l, ~~lengthIn));\n        if (!length) return null;\n        const oldAudio = await this.pick(l - length, l, true);\n        for (let c = 0; c < this.numberOfChannels; c++) {\n            if (!enabledChannels[c]) return null;\n            const channel = this.audioBuffer.getChannelData(c);\n            for (let i = 0; i < length; i++) {\n                channel[l - i] *= normExp(i / length, exponent);\n            }\n        }\n        this.waveform.update(l - length, l);\n        const audio = await this.pick(l - length, l, true);\n        return { length, exponent, audio, oldAudio };\n    }\n    write(channel: number, index: number, value: number) {\n        this.audioBuffer.write(channel, index, value);\n        this.waveform.update(index, index + 1);\n    }\n    async render(sampleRateIn?: number, mix?: number[][], applyPlugins?: boolean, pluginsOptions?: { plugins: WebAudioModule[]; pluginsEnabled: WeakSet<WebAudioModule>; preFxGain: number; postFxGain: number }): Promise<PatcherAudio> {\n        return this.env.taskMgr.newTask(this, \"Rendering audio...\", async () => {\n            let { length } = this;\n            const needResample = sampleRateIn && this.sampleRate !== sampleRateIn;\n            const needRemix = mix && (mix.length !== this.numberOfChannels || !isIdentityMatrix(mix));\n            if (!needResample && !needRemix && !applyPlugins) return this;\n            if (needResample) length = Math.ceil(length * sampleRateIn / this.sampleRate);\n            const numberOfChannels = mix ? mix.length : this.numberOfChannels;\n            const sampleRate = sampleRateIn || this.sampleRate;\n            let mixBuffer: AudioBuffer;\n            if (!needRemix) {\n                mixBuffer = this.audioBuffer;\n            } else {\n                await this.env.taskMgr.newTask(this, \"Remixing audio...\", () => {\n                    mixBuffer = new AudioBuffer({ numberOfChannels, length: this.length, sampleRate: this.sampleRate });\n                    for (let i = 0; i < mixBuffer.numberOfChannels; i++) {\n                        const mixChannel = mixBuffer.getChannelData(i);\n                        for (let j = 0; j < mix[i].length; j++) {\n                            const gain = mix[i][j];\n                            const channel = this.audioBuffer.getChannelData(j);\n                            for (let k = 0; k < mixChannel.length; k++) {\n                                mixChannel[k] += channel[k] * gain;\n                            }\n                        }\n                    }\n                });\n            }\n            if (!applyPlugins && !needResample) return PatcherAudio.fromNativeAudioBuffer({ env: this.env, project: this.project, file: this.file }, mixBuffer);\n            const offlineAudioCtx = new OfflineAudioContext(numberOfChannels, length, sampleRate);\n            const source = offlineAudioCtx.createBufferSource();\n            source.buffer = mixBuffer;\n            if (applyPlugins) {\n                await this.env.taskMgr.newTask(this, \"Applying plugins...\", async (onUpdate) => {\n                    const { plugins, pluginsEnabled, preFxGain, postFxGain } = pluginsOptions;\n                    const preFxGainNode = offlineAudioCtx.createGain();\n                    preFxGainNode.gain.value = dbtoa(preFxGain);\n                    const postFxGainNode = offlineAudioCtx.createGain();\n                    postFxGainNode.gain.value = dbtoa(postFxGain);\n                    source.connect(preFxGainNode);\n                    let lastNode: AudioNode = preFxGainNode;\n                    for (const plugin of plugins) {\n                        if (!plugin) continue;\n                        if (!pluginsEnabled.has(plugin)) continue;\n                        onUpdate(plugin.name);\n                        try {\n                            const Plugin = Object.getPrototypeOf(plugin).constructor as typeof WebAudioModule;\n                            const p = await Plugin.createInstance(offlineAudioCtx);\n                            await p.audioNode.setParameterValues(await plugin.audioNode.getParameterValues());\n                            lastNode.connect(p.audioNode);\n                            lastNode = p.audioNode;\n                        } catch (e) {\n                            continue;\n                        }\n                    }\n                    lastNode.connect(postFxGainNode);\n                    postFxGainNode.connect(offlineAudioCtx.destination);\n                });\n            } else {\n                source.connect(offlineAudioCtx.destination);\n            }\n            source.start(0);\n            return this.env.taskMgr.newTask(this, \"Applying plugins...\", async () => {\n                const bufferOut = await offlineAudioCtx.startRendering();\n                return PatcherAudio.fromNativeAudioBuffer({ env: this.env, project: this.project, file: this.file }, bufferOut);\n            });\n        });\n    }\n    setCursor(cursor: number) {\n        this.emit(\"cursor\", cursor);\n    }\n    setSelRange(range: [number, number]) {\n        this.emit(\"selRange\", range);\n    }\n    setSelRangeToAll() {\n        this.emit(\"selRange\", [0, this.length]);\n    }\n}\n","import { TypedMessageEvent, MessagePortResponse, MessagePortRequest } from \"./TypedAudioWorklet\";\nimport { AudioWorkletProxyNode } from \"./AudioWorkletProxyNode.types\";\n\nconst Node = class extends AudioWorkletNode {\n    static get fnNames(): string[] {\n        return [];\n    }\n    _disposed = false;\n    constructor(context: AudioContext, name: string, options?: AudioWorkletNodeOptions) {\n        super(context, name, options);\n        const resolves: Record<number, ((...args: any[]) => any)> = {};\n        const rejects: Record<number, ((...args: any[]) => any)> = {};\n        let messagePortRequestId = 1;\n        const handleDisposed = () => {\n            this.port.removeEventListener(\"message\", handleMessage);\n            this.port.close();\n        };\n        const handleMessage = async (e: TypedMessageEvent<MessagePortResponse & MessagePortRequest>) => {\n            const { id, call, args, value, error } = e.data;\n            if (call) {\n                const r: MessagePortResponse = { id };\n                try {\n                    r.value = await (this as any)[call](...args);\n                } catch (e) {\n                    r.error = e;\n                }\n                this.port.postMessage(r);\n                if (this._disposed) handleDisposed();\n            } else {\n                if (error) {\n                    if (rejects[id]) rejects[id](error);\n                    delete rejects[id];\n                    return;\n                }\n                if (resolves[id]) {\n                    resolves[id](value);\n                    delete resolves[id];\n                }\n            }\n        };\n        // eslint-disable-next-line\n        const call = (call: string, ...args: any[]) => {\n            return new Promise<any>((resolve, reject) => {\n                const id = messagePortRequestId++;\n                resolves[id] = resolve;\n                rejects[id] = reject;\n                this.port.postMessage({ id, call, args });\n            });\n        };\n        const Ctor = (this.constructor as typeof AudioWorkletProxyNode);\n        Ctor.fnNames.forEach(name => (this as any)[name] = (...args: any[]) => call(name, ...args));\n        this.port.start();\n        this.port.addEventListener(\"message\", handleMessage);\n    }\n} as typeof AudioWorkletProxyNode;\n\nexport default Node;\n","export const registeredProcessors: WeakMap<AudioWorklet, Set<string>> = window.jspatcherEnv?.AudioWorkletRegister?.registeredProcessors || new WeakMap();\nexport const registeringProcessors: WeakMap<AudioWorklet, Set<string>> = window.jspatcherEnv?.AudioWorkletRegister?.registeringProcessors || new WeakMap();\nexport const resolves: Record<string, ((value?: void | PromiseLike<void>) => void)[]> = window.jspatcherEnv?.AudioWorkletRegister?.resolves || {};\nexport const rejects: Record<string, ((reason?: any) => void)[]> = window.jspatcherEnv?.AudioWorkletRegister?.rejects || {};\n\nexport default class AudioWorkletRegister {\n    static registeredProcessors = registeredProcessors;\n\n    static registeringProcessors = registeringProcessors;\n\n    static resolves = resolves;\n\n    static rejects = rejects;\n\n    private static async registerProcessor(audioWorklet: AudioWorklet, processorId: string, processor: string | ((id: string, ...injections: any[]) => void), ...injection: any[]) {\n        this.registeringProcessors.get(audioWorklet).add(processorId);\n        try {\n            const url = typeof processor === \"string\" ? processor : URL.createObjectURL(new Blob([`(${processor.toString()})(${[processorId, ...injection].map(JSON.stringify as (arg: any) => string).join(\", \")});`], { type: \"text/javascript\" }));\n            await audioWorklet.addModule(url);\n            this.resolves[processorId].forEach(f => f());\n            this.registeringProcessors.get(audioWorklet).delete(processorId);\n            this.registeredProcessors.get(audioWorklet).add(processorId);\n        } catch (e) {\n            this.rejects[processorId].forEach(f => f(e));\n        }\n        this.rejects[processorId] = [];\n        this.resolves[processorId] = [];\n    }\n\n    static async register(audioWorklet: AudioWorklet, processorId: string, processor: string | ((id: string, ...injections: any[]) => void), ...injection: any[]) {\n        if (!this.resolves[processorId]) this.resolves[processorId] = [];\n        if (!this.rejects[processorId]) this.rejects[processorId] = [];\n        const promise = new Promise<void>((resolve, reject) => {\n            this.resolves[processorId].push(resolve);\n            this.rejects[processorId].push(reject);\n        });\n        if (!this.registeringProcessors.has(audioWorklet)) {\n            this.registeringProcessors.set(audioWorklet, new Set());\n        }\n        if (!this.registeredProcessors.has(audioWorklet)) {\n            this.registeredProcessors.set(audioWorklet, new Set());\n        }\n        const registered = this.registeredProcessors.get(audioWorklet).has(processorId);\n        const registering = this.registeringProcessors.get(audioWorklet).has(processorId);\n        if (registered) return Promise.resolve();\n        if (registering) return promise;\n        if (!registered && audioWorklet) {\n            this.registerProcessor(audioWorklet, processorId, processor, ...injection);\n        }\n        return promise;\n    }\n}\n","import processorURL from \"./TemporalAnalyser.worklet.ts\"; // eslint-disable-line import/extensions\nimport AudioWorkletProxyNode from \"./AudioWorkletProxyNode\";\nimport { ITemporalAnalyserNode, ITemporalAnalyserProcessor, TemporalAnalyserParameters } from \"./TemporalAnalyserWorklet.types\";\nimport AudioWorkletRegister from \"./AudioWorkletRegister\";\n\nexport const processorId = \"__JSPatcher_TemporalAnalyser\";\nexport default class TemporalAnalyserNode extends AudioWorkletProxyNode<ITemporalAnalyserNode, ITemporalAnalyserProcessor, TemporalAnalyserParameters> implements ITemporalAnalyserNode {\n    static processorId = processorId;\n    static register = (audioWorklet: AudioWorklet) => AudioWorkletRegister.register(audioWorklet, processorId, processorURL);\n    static fnNames: (keyof ITemporalAnalyserProcessor)[] = [\"getRms\", \"getAbsMax\", \"getZcr\", \"getEstimatedFreq\", \"getBuffer\", \"gets\", \"destroy\"];\n    constructor(context: BaseAudioContext) {\n        super(context, processorId, { numberOfInputs: 1, numberOfOutputs: 0 });\n        const _destroy = this.destroy;\n        this.destroy = async () => {\n            await _destroy.call(this);\n            this._disposed = true;\n        };\n    }\n}\n","import processorURL from \"./Transmitter.worklet.ts\"; // eslint-disable-line import/extensions\nimport AudioWorkletProxyNode from \"./AudioWorkletProxyNode\";\nimport { ITransmitterNode, ITransmitterProcessor, TransmitterParameters } from \"./TransmitterWorklet.types\";\nimport AudioWorkletRegister from \"./AudioWorkletRegister\";\n\nexport const processorId = \"__JSPatcher_Transmitter\";\nexport default class TransmitterNode extends AudioWorkletProxyNode<ITransmitterNode, ITransmitterProcessor, TransmitterParameters> implements ITransmitterNode {\n    static processorId = processorId;\n    static register = (audioWorklet: AudioWorklet) => AudioWorkletRegister.register(audioWorklet, processorId, processorURL);\n    static fnNames: (keyof ITransmitterProcessor)[] = [\"start\", \"stop\", \"reset\", \"destroy\"];\n    handleReceiveBuffer: (buffer: Float32Array[], $total: number) => any;\n    constructor(context: BaseAudioContext) {\n        super(context, processorId, { numberOfInputs: 1, numberOfOutputs: 0 });\n        const _destroy = this.destroy;\n        this.destroy = async () => {\n            await _destroy.call(this);\n            this._disposed = true;\n        };\n    }\n    setBuffer({ buffer, $total }: { buffer: Float32Array[]; $total: number }) {\n        if (this.handleReceiveBuffer) this.handleReceiveBuffer(buffer, $total);\n    }\n}\n","import PatcherAudio from \"../core/audio/PatcherAudio\";\nimport { WaveformData, WaveformStepData } from \"../core/types\";\nimport WaveformWorker from \"../core/workers/WaveformWorker\";\n\nexport default class Waveform implements WaveformData {\n    static stepsFactor = 16;\n    [step: number]: WaveformStepData;\n    private readonly worker: WaveformWorker;\n    private _patcherAudio: PatcherAudio;\n    get patcherAudio() {\n        return this._patcherAudio;\n    }\n    set patcherAudio(audio: PatcherAudio) {\n        this._patcherAudio = audio;\n    }\n    get audioBuffer() {\n        return this.patcherAudio.audioBuffer;\n    }\n    get length() {\n        return this.audioBuffer.length;\n    }\n    get steps() {\n        return Object.keys(this).filter(v => +v).map(v => +v).sort((a, b) => a - b);\n    }\n\n    constructor(patcherAudioIn: PatcherAudio, waveformDataIn?: WaveformData) {\n        this.worker = patcherAudioIn.env.waveformWorker;\n        this.patcherAudio = patcherAudioIn;\n        if (!waveformDataIn) return;\n        Object.keys(waveformDataIn).filter(v => +v).map(v => +v).forEach((stepLength) => {\n            const stepData = waveformDataIn[stepLength];\n            this[stepLength] = [];\n            const newStepData = this[stepLength];\n            if (stepData.length) newStepData.idx = stepData.idx.slice();\n            for (let c = 0; c < stepData.length; c++) {\n                const { min, max } = stepData[c];\n                newStepData[c] = { min: min.slice(), max: max.slice() };\n            }\n        });\n    }\n    clone() {\n        return new Waveform(this.patcherAudio, this);\n    }\n    async generate() {\n        const audioChannelData = this.audioBuffer.toArray(true);\n        const data = await this.worker.generate(audioChannelData, Waveform.stepsFactor);\n        for (const key in data) {\n            this[key] = data[key];\n        }\n    }\n    generateEmpty(numberOfChannels: number, l: number) {\n        const { stepsFactor } = Waveform;\n        for (let stepLength = stepsFactor; stepLength <= l / stepsFactor; stepLength *= stepsFactor) {\n            const stepData: WaveformStepData = [];\n            this[stepLength] = stepData;\n            const stepsCount = Math.ceil(l / stepLength);\n            const idxData = new Int32Array(stepsCount);\n            for (let i = 0; i < idxData.length; i++) {\n                idxData[i] = i * stepLength;\n            }\n            stepData.idx = idxData;\n            for (let c = 0; c < numberOfChannels; c++) {\n                const minData = new Float32Array(stepsCount);\n                const maxData = new Float32Array(stepsCount);\n                stepData[c] = { min: minData, max: maxData };\n            }\n        }\n    }\n    generateStep(stepLength: number) {\n        const { stepsFactor } = Waveform;\n        const { audioBuffer: buffer } = this;\n        if (!this[stepLength]) this[stepLength] = [];\n        const l = buffer.length;\n        let maxInStep;\n        let minInStep;\n        if (stepLength === stepsFactor) { // recalculate from samples\n            const stepsCount = Math.ceil(l / stepLength);\n            const idxData = new Int32Array(stepsCount);\n            for (let i = 0; i < idxData.length; i++) {\n                idxData[i] = i * stepLength;\n            }\n            this[stepLength].idx = idxData;\n            for (let c = 0; c < buffer.numberOfChannels; c++) {\n                const minData = new Float32Array(stepsCount);\n                const maxData = new Float32Array(stepsCount);\n                const channel = buffer.getChannelData(c);\n                for (let i = 0; i < idxData.length; i++) {\n                    const $0 = idxData[i];\n                    const $1 = i === idxData.length - 1 ? l : idxData[i + 1];\n                    for (let j = $0; j < $1; j++) {\n                        const samp = channel[j];\n                        if (j === $0) {\n                            maxInStep = samp;\n                            minInStep = samp;\n                        } else {\n                            if (samp > maxInStep) maxInStep = samp;\n                            if (samp < minInStep) minInStep = samp;\n                        }\n                    }\n                    minData[i] = minInStep;\n                    maxData[i] = maxInStep;\n                }\n                this[stepLength][c] = { min: minData, max: maxData };\n            }\n        } else { // calculate from lower level\n            const { idx: prevIdx } = this[stepLength / stepsFactor];\n            const stepsCount = Math.ceil(prevIdx.length / 16);\n            const idxData = new Int32Array(stepsCount);\n            for (let i = 0; i < idxData.length; i++) {\n                idxData[i] = prevIdx[i * stepsFactor];\n            }\n            this[stepLength].idx = idxData;\n            for (let c = 0; c < buffer.numberOfChannels; c++) {\n                const minData = new Float32Array(stepsCount);\n                const maxData = new Float32Array(stepsCount);\n                const { min: prevMin, max: prevMax } = this[stepLength / stepsFactor][c];\n                for (let i = 0; i < idxData.length; i++) {\n                    const $prev0 = i * stepsFactor;\n                    const $prev1 = i === idxData.length - 1 ? prevIdx.length : ((i + 1) * stepsFactor);\n                    for (let j = $prev0; j < $prev1; j++) {\n                        const sampMax = prevMax[j];\n                        const sampMin = prevMin[j];\n                        if (j === $prev0) {\n                            maxInStep = sampMax;\n                            minInStep = sampMin;\n                        } else {\n                            if (sampMax > maxInStep) maxInStep = sampMax;\n                            if (sampMin < minInStep) minInStep = sampMin;\n                        }\n                    }\n                    minData[i] = minInStep;\n                    maxData[i] = maxInStep;\n                }\n                this[stepLength][c] = { min: minData, max: maxData };\n            }\n        }\n        return this[stepLength];\n    }\n    update(from = 0, to = this.audioBuffer.length) {\n        const { stepsFactor } = Waveform;\n        const { audioBuffer: buffer } = this;\n        const l = buffer.length;\n        for (let stepLength = stepsFactor; stepLength <= l / stepsFactor; stepLength *= stepsFactor) {\n            let stepData: WaveformStepData;\n            if (this[stepLength]) {\n                stepData = this[stepLength];\n                let { idx: idxData } = stepData;\n                // check if need expansion\n                let expand = 0;\n                const oldLength = idxData[idxData.length - 1] + stepLength;\n                if (l > oldLength) {\n                    expand = Math.ceil((l - oldLength) / stepLength);\n                    const newLength = idxData.length + expand;\n                    const newIdxData = new Int32Array(newLength);\n                    newIdxData.set(idxData);\n                    for (let i = idxData.length, j = oldLength; i < newIdxData.length; i++, j += stepLength) {\n                        newIdxData[i] = j;\n                    }\n                    idxData = newIdxData;\n                }\n                stepData.idx = idxData;\n                for (let c = 0; c < buffer.numberOfChannels; c++) {\n                    const samples = buffer.getChannelData(c);\n                    let { min: minData, max: maxData } = stepData[c];\n                    if (expand) {\n                        const min = new Float32Array(idxData.length);\n                        const max = new Float32Array(idxData.length);\n                        min.set(minData);\n                        max.set(maxData);\n                        minData = min;\n                        maxData = max;\n                        stepData[c] = { min: minData, max: maxData };\n                    }\n                    // index range to rebuild data\n                    let $from: number;\n                    let $to: number;\n                    for (let i = 1; i <= idxData.length; i++) {\n                        const $ = i === idxData.length ? l : idxData[i];\n                        if (typeof $from === \"undefined\" && $ > from) {\n                            $from = i - 1;\n                        }\n                        if (typeof $to === \"undefined\" && $ >= to) {\n                            $to = i;\n                            break;\n                        }\n                    }\n                    let maxInStep;\n                    let minInStep;\n                    if (stepLength === stepsFactor) { // recalculate from samples\n                        for (let i = $from; i < $to; i++) {\n                            const $0 = idxData[i];\n                            const $1 = i === idxData.length - 1 ? l : idxData[i + 1];\n                            for (let j = $0; j < $1; j++) {\n                                const samp = samples[j];\n                                if (j === $0) {\n                                    maxInStep = samp;\n                                    minInStep = samp;\n                                } else {\n                                    if (samp > maxInStep) maxInStep = samp;\n                                    if (samp < minInStep) minInStep = samp;\n                                }\n                            }\n                            minData[i] = minInStep;\n                            maxData[i] = maxInStep;\n                        }\n                    } else {\n                        const { idx: prevIdx } = this[stepLength / stepsFactor];\n                        const { min: prevMin, max: prevMax } = this[stepLength / stepsFactor][c];\n                        for (let i = $from; i < $to; i++) {\n                            let $prev0 = Math.min(prevIdx.length - 1, i * stepsFactor);\n                            const idx0 = idxData[i];\n                            if (prevIdx[$prev0] < idx0) {\n                                do {\n                                    $prev0++;\n                                } while ($prev0 < prevIdx.length - 1 && prevIdx[$prev0] < idx0);\n                            } else if (prevIdx[$prev0] > idx0) {\n                                do {\n                                    $prev0--;\n                                } while ($prev0 > 0 && prevIdx[$prev0] > idx0);\n                            }\n                            let $prev1;\n                            if (i === idxData.length - 1) {\n                                $prev1 = prevIdx.length;\n                            } else {\n                                $prev1 = Math.min(prevIdx.length, (i + 1) * stepsFactor);\n                                const idx1 = idxData[i + 1];\n                                if (prevIdx[$prev1] < idx1) {\n                                    do {\n                                        $prev1++;\n                                    } while ($prev1 < prevIdx.length && prevIdx[$prev1] < idx1);\n                                } else if (prevIdx[$prev1] > idx1) {\n                                    do {\n                                        $prev1--;\n                                    } while ($prev1 > 1 && prevIdx[$prev1] > idx1);\n                                }\n                            }\n                            for (let j = $prev0; j < $prev1; j++) {\n                                const sampMin = prevMin[j];\n                                const sampMax = prevMax[j];\n                                if (j === $prev0) {\n                                    maxInStep = sampMax;\n                                    minInStep = sampMin;\n                                } else {\n                                    if (sampMax > maxInStep) maxInStep = sampMax;\n                                    if (sampMin < minInStep) minInStep = sampMin;\n                                }\n                            }\n                            minData[i] = minInStep;\n                            maxData[i] = maxInStep;\n                        }\n                    }\n                }\n            } else {\n                this.generateStep(stepLength);\n            }\n        }\n    }\n    inverse() {\n        this.steps.forEach((stepLength) => {\n            const stepData = this[stepLength];\n            for (let c = 0; c < stepData.length; c++) {\n                const { min, max } = stepData[c];\n                for (let i = 0; i < min.length; i++) {\n                    const $max = -min[i];\n                    const $min = -max[i];\n                    min[i] = $min;\n                    max[i] = $max;\n                }\n            }\n        });\n    }\n    reverse() {\n        this.steps.forEach((stepLength) => {\n            const stepData = this[stepLength];\n            if (stepData.length) {\n                const { idx } = stepData;\n                idx.reverse();\n                for (let i = 0; i < idx.length; i++) {\n                    idx[i] = length - idx[i];\n                }\n                idx.set(idx.subarray(0, -1), 1);\n                idx[0] = 0;\n            }\n            for (let c = 0; c < stepData.length; c++) {\n                const { min, max } = stepData[c];\n                min.reverse();\n                max.reverse();\n            }\n        });\n    }\n    /**\n     * Returns a new Waveform instance concatenating this and another waveform\n     *\n     * @param {Waveform} that waveform to concat\n     * @param {PatcherAudio} patcherAudio result PatcherAudio\n     * @param {number} [numberOfChannels=patcherAudio.audioBuffer.numberOfChannels] number of channels\n     */\n    concat(that: Waveform, patcherAudio: PatcherAudio, numberOfChannels: number = patcherAudio.audioBuffer.numberOfChannels) {\n        const { stepsFactor } = Waveform;\n        const { length: l } = patcherAudio.audioBuffer;\n        const from = this.length;\n        const waveform = new Waveform(patcherAudio);\n        for (let stepLength = stepsFactor; stepLength <= l / stepsFactor; stepLength *= stepsFactor) {\n            const stepData: WaveformStepData = [];\n            let stepData1 = this[stepLength];\n            let stepData2 = that[stepLength];\n            waveform[stepLength] = stepData;\n            if (!stepData1) { // recalculate data1\n                stepData1 = this.generateStep(stepLength);\n            }\n            if (!stepData2) { // recalculate data2\n                stepData2 = that.generateStep(stepLength);\n            }\n            const { idx: idxData1 } = stepData1;\n            const { idx: idxData2 } = stepData2;\n            const idxData = new Int32Array(idxData1.length + idxData2.length);\n            idxData.set(idxData1);\n            idxData.set(idxData2, idxData1.length);\n            for (let j = idxData1.length; j < idxData.length; j++) {\n                idxData[j] += from;\n            }\n            stepData.idx = idxData;\n            for (let c = 0; c < numberOfChannels; c++) {\n                const { min: minData1, max: maxData1 } = stepData1[c] || {};\n                const { min: minData2, max: maxData2 } = stepData2[c] || {};\n                const minData = new Float32Array(idxData1.length + idxData2.length);\n                const maxData = new Float32Array(idxData1.length + idxData2.length);\n                if (minData1) minData.set(minData1);\n                if (minData2) minData.set(minData2, idxData1.length);\n                if (maxData1) maxData.set(maxData1);\n                if (maxData2) maxData.set(maxData2, idxData1.length);\n                stepData[c] = { min: minData, max: maxData };\n            }\n        }\n        return waveform;\n    }\n    /**\n     * Split this Waveform into two instances.\n     *\n     * @param {number} from Split point in sample\n     * @param {PatcherAudio} patcherAudio1 Splitted PatcherAudio 1\n     * @param {PatcherAudio} patcherAudio2 Splitted PatcherAudio 2\n     * @returns {[Waveform, Waveform]} Splitted Waveforms\n     */\n    split(from: number, patcherAudio1: PatcherAudio, patcherAudio2: PatcherAudio): [Waveform, Waveform] {\n        const { audioBuffer: buffer } = this;\n        const l = buffer.length;\n        if (from >= l || from <= 0) throw new RangeError(\"Split point is out of bound\");\n        const { audioBuffer: audioBuffer1 } = patcherAudio1;\n        const { audioBuffer: audioBuffer2 } = patcherAudio2;\n        // split waveform\n        const waveform1 = new Waveform(patcherAudio1);\n        const waveform2 = new Waveform(patcherAudio2);\n        const waveformKeys = this.steps;\n        for (let i = 0; i < waveformKeys.length; i++) {\n            const stepLength = waveformKeys[i];\n            const stepData = this[stepLength];\n            const stepData1: WaveformStepData = [];\n            const stepData2: WaveformStepData = [];\n            waveform1[stepLength] = stepData1;\n            waveform2[stepLength] = stepData2;\n            const { idx } = stepData;\n            let $data: number; // index of data to split from, next buffer index if split between\n            let splitBetween = false;\n            for (let i = 1; i <= idx.length; i++) {\n                const $ = i === idx.length ? l : idx[i];\n                if ($ >= from) {\n                    splitBetween = $ !== from;\n                    $data = i;\n                    break;\n                }\n            }\n            // split index data for every channel\n            let idxData1 = idx.slice();\n            let idxData2 = idx.slice();\n            if ($data !== idx.length) {\n                idxData1 = idxData1.subarray(0, $data);\n            }\n            if ($data - 1 !== 0) {\n                idxData2 = idxData2.subarray($data - +splitBetween);\n                for (let j = 0; j < idxData2.length; j++) {\n                    idxData2[j] = j === 0 ? 0 : idxData2[j] - from;\n                }\n            }\n            stepData1.idx = idxData1;\n            stepData2.idx = idxData2;\n            for (let c = 0; c < buffer.numberOfChannels; c++) {\n                // split data\n                let { min: minData1, max: maxData1 } = stepData[c];\n                if ($data !== idx.length) {\n                    minData1 = minData1.subarray(0, $data);\n                    maxData1 = maxData1.subarray(0, $data);\n                }\n                stepData1[c] = { min: minData1, max: maxData1 };\n                let { min: minData2, max: maxData2 } = stepData[c];\n                if ($data - 1 !== 0) {\n                    minData2 = minData2.subarray($data - +splitBetween);\n                    maxData2 = maxData2.subarray($data - +splitBetween);\n                }\n                stepData2[c] = { min: minData2, max: maxData2 };\n                // recalculate\n                if (splitBetween) {\n                    let maxInStep;\n                    let minInStep;\n                    if (i === 0) { // calculate from samples\n                        // ending of first part\n                        const channel1 = audioBuffer1.getChannelData(c);\n                        for (let j = idxData1[idxData1.length - 1]; j < from; j++) {\n                            const samp = channel1[j];\n                            if (j === 0) {\n                                maxInStep = samp;\n                                minInStep = samp;\n                            } else {\n                                if (samp > maxInStep) maxInStep = samp;\n                                if (samp < minInStep) minInStep = samp;\n                            }\n                        }\n                        minData1[idxData1.length - 1] = minInStep;\n                        maxData1[idxData1.length - 1] = maxInStep;\n                        // starting of second part\n                        const channel2 = audioBuffer2.getChannelData(c);\n                        for (let j = 0; j < (idxData2.length === 1 ? audioBuffer2.length : idxData2[1]); j++) {\n                            const samp = channel2[j];\n                            if (j === 0) {\n                                maxInStep = samp;\n                                minInStep = samp;\n                            } else {\n                                if (samp > maxInStep) maxInStep = samp;\n                                if (samp < minInStep) minInStep = samp;\n                            }\n                        }\n                        minData2[0] = minInStep;\n                        maxData2[0] = maxInStep;\n                    } else { // calculate from lower level\n                        const { idx: prevIdx1 } = waveform1[waveformKeys[i - 1]];\n                        const { min: prevMin1, max: prevMax1 } = waveform1[waveformKeys[i - 1]][c];\n                        // ending of first part\n                        let $prev1 = prevIdx1.length - 1;\n                        const idx1 = idxData1[idxData1.length - 1];\n                        while (prevIdx1[$prev1] > idx1) {\n                            $prev1--;\n                        }\n                        for (let k = $prev1; k < prevIdx1.length; k++) {\n                            const sampMax = prevMax1[k];\n                            const sampMin = prevMin1[k];\n                            if (k === $prev1) {\n                                maxInStep = sampMax;\n                                minInStep = sampMin;\n                            } else {\n                                if (sampMax > maxInStep) maxInStep = sampMax;\n                                if (sampMin < minInStep) minInStep = sampMin;\n                            }\n                        }\n                        minData1[idxData1.length - 1] = minInStep;\n                        maxData1[idxData1.length - 1] = maxInStep;\n                        const { idx: prevIdx2 } = waveform2[waveformKeys[i - 1]];\n                        const { min: prevMin2, max: prevMax2 } = waveform2[waveformKeys[i - 1]][c];\n                        // starting of second part\n                        let $prev2 = 1;\n                        if (idxData2.length > 1) {\n                            const idx2 = idxData2[1];\n                            while (prevIdx2[$prev2] < idx2) {\n                                $prev2++;\n                            }\n                        }\n                        for (let k = 0; k < $prev2; k++) {\n                            const sampMax = prevMax2[k];\n                            const sampMin = prevMin2[k];\n                            if (k === $prev2) {\n                                maxInStep = sampMax;\n                                minInStep = sampMin;\n                            } else {\n                                if (sampMax > maxInStep) maxInStep = sampMax;\n                                if (sampMin < minInStep) minInStep = sampMin;\n                            }\n                        }\n                        minData2[0] = minInStep;\n                        maxData2[0] = maxInStep;\n                    }\n                }\n            }\n        }\n        return [waveform1, waveform2];\n    }\n    /**\n     * Find an existing waveform with a precision (could be samples per pixel)\n     * returning a waveform that is sufficient to the precision.\n     * (step is the largest value smaller than the precision)\n     */\n    findStep(precision: number) {\n        const key = this.steps.reduce<number>((acc, cur) => (cur < precision && cur > (acc || 0) ? cur : acc), undefined);\n        if (!key) return null;\n        return this[key];\n    }\n}\n","import { isNumberArray } from \"./utils\";\n\n/**\n * Mod support wrapping with negative numbers\n */\nexport const mod = (x: number, y: number): number => (x % y + y) % y;\n/**\n * Round a number to multiple of another\n */\nexport const round = (x: number, to: number): number => (Math.abs(to) < 1 ? Math.round(x * (1 / to)) / (1 / to) : Math.round(x / to) * to);\n/**\n * Floor a number to multiple of another\n */\nexport const floor = (x: number, to: number): number => (Math.abs(to) < 1 ? Math.floor(x * (1 / to)) / (1 / to) : Math.floor(x / to) * to);\n/**\n * Ceil a number to multiple of another\n */\nexport const ceil = (x: number, to: number): number => (Math.abs(to) < 1 ? Math.ceil(x * (1 / to)) / (1 / to) : Math.ceil(x / to) * to);\n/**\n * Degree to radian\n */\nexport const toRad = (degrees: number): number => degrees * Math.PI / 180;\n/**\n * MIDI note number to string\n */\nexport const toMIDI = (f: number): string => [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"][(f % 12 + 12) % 12] + Math.round(f / 12 - 2);\n/**\n * Linear amplitude ([0, 1]) to dB ([-Inf, 0])\n *\n * @param {number} a linear amplitude value\n * @returns {number} dB value\n */\nexport const atodb = (a: number): number => 20 * Math.log10(a);\n/**\n * dB ([-Inf, 0]) to Linear mplitude ([0, 1])\n *\n * @param {number} db dB value\n * @returns {number} linear amplitude value\n */\nexport const dbtoa = (db: number): number => 10 ** (db / 20);\n/**\n * De-scale a exponently scaled value\n *\n * @param {number} x normalized value to scale between ([0, 1])\n * @param {number} e exponent factor used to scale, 0 means linear, 1 does ** 1.5 curve\n * @returns {number} de-scaled value\n */\nexport const iNormExp = (x: number, e: number): number => Math.max(0, x) ** (1.5 ** -e);\n/**\n * Scale exponently a normalized value\n *\n * @param {number} x normalized value to scale between ([0, 1])\n * @param {number} e exponent factor, 0 means linear, 1 does ** 1.5 curve\n * @returns {number} scaled value\n */\nexport const normExp = (x: number, e: number): number => Math.max(0, x) ** (1.5 ** e);\n\nexport const scale = (x: number, l1: number, h1: number, l2: number, h2: number) => {\n    const r1 = h1 - l1;\n    const r2 = h2 - l2;\n    return (x - l1) / r1 * r2 + l2;\n};\n\nexport const scaleClip = (x: number, l1: number, h1: number, l2: number, h2: number) => Math.max(l2, Math.min(h2, scale(x, l1, h1, l2, h2)));\n\n// eslint-disable-next-line arrow-body-style\nexport const isIdentityMatrix = (x: number[][]) => {\n    return Array.isArray(x)\n    && x.every((row, i) => isNumberArray(row)\n    && row.length === x.length\n    && row.every((e, j) => e === (j === i ? 1 : 0)));\n};\n\nexport const identityMatrix = (dim: number) => new Array(dim).fill(undefined).map((x, i) => new Array(dim).fill(undefined).map((y, j) => +(i === j)));\n","module.exports = __webpack_public_path__ + \"js/7ae8201faea4de318b7a.worklet.js\";","module.exports = __webpack_public_path__ + \"js/2da973d99ed3f3263f1b.worklet.js\";"],"sourceRoot":""}