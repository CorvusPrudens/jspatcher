{"version":3,"sources":["webpack://JSPatcher/webpack/bootstrap","webpack://JSPatcher/./src/core/objects/dsp/AudioWorklet/TemporalAnalyser.worklet.ts","webpack://JSPatcher/./src/utils/buffer.ts","webpack://JSPatcher/./src/utils/math.ts"],"names":["processorID","TemporalAnalyserProcessor","AudioWorkletProcessor","parameterDescriptors","defaultValue","maxValue","minValue","name","constructor","options","destroyed","window","windowF32","$","$total","port","onmessage","e","id","data","destroy","message","rms","zcr","buffer","postMessage","map","startPointer","sampleIndex","length","process","inputs","outputs","parameters","input","windowSize","splice","bufferSize","Math","max","c","i","SharedArrayBuffer","Float32Array","BYTES_PER_ELEMENT","oldWindow","oldWindowSize","setTypedArray","min","channel","set","subarray","close","registerProcessor","sum","array","mean","median","Error","sortedArray","slice","sort","maxIndex","index","cur","energy","signal","sample","sqrt","lastPositive","positive","centroid","weightedSum","weight","abs","conjugatedCentroid","factor","geometricMean","log","exp","flatness","flux","prev","norm","halfRectify","diff","kurtosis","c1","c2","c3","c4","numerator","denominator","skewness","rolloff","cutoff","threshold","n","element","slope","xSum","x2Sum","ySum","xySum","x","y","spread","to","from","offsetTo","offsetFrom","toLength","fromLength","spillLength","spilled","$to","mod","$from","$spillLength","$fromEnd","getSubTypedArray","offset","sliceBuffer","fftw2Amp","windowEnergyFactor","amps","real","imag","estimateFreq","sampleRate","indexToFreq","fftBins","round","floor","ceil","toRad","degrees","PI","toMIDI","f","atodb","a","log10","dbtoa","db","iNormExp","normExp"],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;;;;;;;;;ACjFA;AAEA,MAAMA,WAAW,GAAG,8BAApB;;AAEA,MAAMC,yBAAN,SAAwCC,qBAAxC,CAA8G;AAC1G,aAAWC,oBAAX,GAAkF;AAC9E,WAAO,CAAC;AACJC,kBAAY,EAAE,IADV;AAEJC,cAAQ,EAAE,KAAK,EAFX;AAGJC,cAAQ,EAAE,GAHN;AAIJC,UAAI,EAAE;AAJF,KAAD,CAAP;AAMH;;AA6BDC,aAAW,CAACC,OAAD,EAAmC;AAC1C,UAAMA,OAAN;AAD0C,SA5BtCC,SA4BsC,GA5B1B,KA4B0B;AAAA,SArBtCC,MAqBsC,GArBR,EAqBQ;AAAA,SAbtCC,SAasC,GAbV,EAaU;AAAA,SAPtCC,CAOsC,GAPlC,CAOkC;AAAA,SADtCC,MACsC,GAD7B,CAC6B;;AAE1C,SAAKC,IAAL,CAAUC,SAAV,GAAuBC,CAAD,IAAO;AACzB,YAAM;AAAEC;AAAF,UAASD,CAAC,CAACE,IAAjB;AACA,UAAIF,CAAC,CAACE,IAAF,CAAOC,OAAX,EAAoB,KAAKA,OAAL;AACpB,YAAMC,OAAO,GAAG,EAAhB;AACA,UAAIJ,CAAC,CAACE,IAAF,CAAOG,GAAX,EAAgBD,OAAO,CAACC,GAAR,GAAc,KAAKA,GAAnB;AAChB,UAAIL,CAAC,CAACE,IAAF,CAAOI,GAAX,EAAgBF,OAAO,CAACE,GAAR,GAAc,KAAKA,GAAnB;AAChB,UAAIN,CAAC,CAACE,IAAF,CAAOK,MAAX,EAAmBH,OAAO,CAACG,MAAR,GAAiB,KAAKA,MAAtB;AACnB,WAAKT,IAAL,CAAUU,WAAV;AAAwBP;AAAxB,SAA+BG,OAA/B;AACH,KARD;AASH;;AACD,MAAIC,GAAJ,GAAU;AACN,WAAO,KAAKV,SAAL,CAAec,GAAf,CAAmBJ,iDAAnB,CAAP;AACH;;AACD,MAAIC,GAAJ,GAAU;AACN,WAAO,KAAKX,SAAL,CAAec,GAAf,CAAmBH,iDAAnB,CAAP;AACH;;AACD,MAAIC,MAAJ,GAAa;AACT,UAAML,IAAI,GAAG,KAAKP,SAAlB;AACA,WAAO;AAAEO,UAAF;AAAQQ,kBAAY,EAAE,KAAKd,CAA3B;AAA8Be,iBAAW,EAAET,IAAI,CAACU,MAAL,GAAc,KAAKf,MAAL,GAAcK,IAAI,CAAC,CAAD,CAAJ,CAAQU,MAApC,GAA6C;AAAxF,KAAP;AACH;;AACDC,SAAO,CAACC,MAAD,EAA2BC,OAA3B,EAAsDC,UAAtD,EAAyG;AAC5G,QAAI,KAAKvB,SAAT,EAAoB,OAAO,KAAP;AACpB,UAAMwB,KAAK,GAAGH,MAAM,CAAC,CAAD,CAApB;AACA,UAAMI,UAAU,GAAG,CAAC,CAACF,UAAU,CAACE,UAAX,CAAsB,CAAtB,CAAF,IAA8B,IAAjD;AACA,SAAKtB,CAAL,IAAUsB,UAAV;;AACA,QAAI,KAAKxB,MAAL,CAAYkB,MAAZ,GAAqBK,KAAK,CAACL,MAA/B,EAAuC;AAAE;AACrC,WAAKlB,MAAL,CAAYyB,MAAZ,CAAmBF,KAAK,CAACL,MAAzB;AACA,WAAKjB,SAAL,CAAewB,MAAf,CAAsBF,KAAK,CAACL,MAA5B;AACH;;AACD,QAAIK,KAAK,CAACL,MAAN,KAAiB,CAArB,EAAwB,OAAO,IAAP;AACxB,UAAMQ,UAAU,GAAGC,IAAI,CAACC,GAAL,CAAS,GAAGL,KAAK,CAACR,GAAN,CAAUc,CAAC,IAAIA,CAAC,CAACX,MAAjB,CAAZ,KAAyC,GAA5D;AACA,SAAKf,MAAL,IAAeuB,UAAf;AACA,QAAI;AAAExB;AAAF,QAAQ,IAAZ,CAZ4G,CAa5G;;AACA,SAAK,IAAI4B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,KAAK,CAACL,MAA1B,EAAkCY,CAAC,EAAnC,EAAuC;AACnC5B,OAAC,GAAG,KAAKA,CAAT;;AACA,UAAI,CAAC,KAAKF,MAAL,CAAY8B,CAAZ,CAAL,EAAqB;AAAE;AACnB,aAAK9B,MAAL,CAAY8B,CAAZ,IAAiB,IAAIC,iBAAJ,CAAsBP,UAAU,GAAGQ,YAAY,CAACC,iBAAhD,CAAjB;AACA,aAAKhC,SAAL,CAAe6B,CAAf,IAAoB,IAAIE,YAAJ,CAAiB,KAAKhC,MAAL,CAAY8B,CAAZ,CAAjB,CAApB;AACH,OAHD,MAGO;AACH,YAAI,KAAK7B,SAAL,CAAe6B,CAAf,EAAkBZ,MAAlB,KAA6BM,UAAjC,EAA6C;AAAE;AAC3C,gBAAMU,SAAS,GAAG,KAAKlC,MAAL,CAAY8B,CAAZ,CAAlB;AACA,gBAAMK,aAAa,GAAGD,SAAS,CAAChB,MAAhC;AACA,gBAAMlB,MAAM,GAAG,IAAI+B,iBAAJ,CAAsBP,UAAU,GAAGQ,YAAY,CAACC,iBAAhD,CAAf;AACA/B,WAAC,GAAGkC,mEAAa,CAAC,IAAIJ,YAAJ,CAAiBhC,MAAjB,CAAD,EAA2B,IAAIgC,YAAJ,CAAiBE,SAAjB,CAA3B,EAAwD,CAAxD,EAA2DhC,CAAC,GAAGyB,IAAI,CAACU,GAAL,CAASb,UAAT,EAAqBW,aAArB,CAA/D,CAAjB;AACA,eAAKnC,MAAL,CAAY8B,CAAZ,IAAiB9B,MAAjB;AACA,eAAKC,SAAL,CAAe6B,CAAf,IAAoB,IAAIE,YAAJ,CAAiBhC,MAAjB,CAApB;AACH;AACJ;AACJ;;AACD,SAAKE,CAAL,GAASA,CAAT,CA9B4G,CA+B5G;;AACA,SAAK,IAAI4B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,KAAK,CAACL,MAA1B,EAAkCY,CAAC,EAAnC,EAAuC;AACnC,YAAM9B,MAAM,GAAG,KAAKC,SAAL,CAAe6B,CAAf,CAAf;AACA,YAAMQ,OAAO,GAAGf,KAAK,CAACO,CAAD,CAAL,CAASZ,MAAT,GAAkBK,KAAK,CAACO,CAAD,CAAvB,GAA6B,IAAIE,YAAJ,CAAiBN,UAAjB,CAA7C;AACAxB,OAAC,GAAG,KAAKA,CAAT;;AACA,UAAIwB,UAAU,GAAGF,UAAjB,EAA6B;AACzBxB,cAAM,CAACuC,GAAP,CAAWD,OAAO,CAACE,QAAR,CAAiBd,UAAU,GAAGF,UAA9B,CAAX;AACAtB,SAAC,GAAG,CAAJ;AACH,OAHD,MAGO;AACHA,SAAC,GAAGkC,mEAAa,CAACpC,MAAD,EAASsC,OAAT,EAAkBpC,CAAlB,CAAjB;AACH;AACJ;;AACD,SAAKA,CAAL,GAASA,CAAT;AACA,WAAO,IAAP;AACH;;AACDO,SAAO,GAAG;AACN,SAAKV,SAAL,GAAiB,IAAjB;AACA,SAAKK,IAAL,CAAUqC,KAAV;AACA,SAAKzC,MAAL,GAAc,EAAd;AACH;;AA7GyG;;AA+G9G0C,iBAAiB,CAACrD,WAAD,EAAcC,yBAAd,CAAjB,C;;;;;;;;;;;;ACpHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIO,MAAMqD,GAAG,GAAIC,KAAD,IAAkC;AACjD,MAAID,GAAG,GAAG,CAAV;;AACA,OAAK,IAAIb,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGc,KAAK,CAAC1B,MAA1B,EAAkCY,CAAC,EAAnC,EAAuC;AACnCa,OAAG,IAAIC,KAAK,CAACd,CAAD,CAAZ;AACH;;AACD,SAAOa,GAAP;AACH,CANM;AAOA,MAAME,IAAI,GAAID,KAAD,IAAkCD,GAAG,CAACC,KAAD,CAAH,GAAaA,KAAK,CAAC1B,MAAlE;AACA,MAAM4B,MAAM,GAAIF,KAAD,IAAkC;AACpD,QAAM1B,MAAM,GAAG0B,KAAK,CAAC1B,MAArB;AACA,MAAIA,MAAM,KAAK,CAAf,EAAkB,MAAM,IAAI6B,KAAJ,CAAU,2CAAV,CAAN;AAClB,QAAMC,WAAW,GAAGJ,KAAK,CAACK,KAAN,GAAcC,IAAd,EAApB;AACA,MAAIhC,MAAM,GAAG,CAAT,KAAe,CAAnB,EAAsB,OAAO,CAAC8B,WAAW,CAAC9B,MAAM,GAAG,CAAT,GAAa,CAAd,CAAX,GAA8B8B,WAAW,CAAC9B,MAAM,GAAG,CAAV,CAA1C,IAA0D,CAAjE;AACtB,SAAO8B,WAAW,CAAC,CAAC,EAAE9B,MAAM,GAAG,CAAX,CAAF,CAAlB;AACH,CANM;AAOA,MAAMiC,QAAQ,GAAIP,KAAD,IAAkC;AACtD,MAAI,CAACA,KAAK,CAAC1B,MAAX,EAAmB,OAAO,CAAP;AACnB,MAAIkC,KAAK,GAAG,CAAZ;AACA,MAAIxB,GAAG,GAAGgB,KAAK,CAAC,CAAD,CAAf;AACA,MAAId,CAAC,GAAGc,KAAK,CAAC1B,MAAd;;AACA,SAAOY,CAAC,KAAK,CAAb,EAAgB;AACZ,UAAMuB,GAAG,GAAGT,KAAK,CAACd,CAAD,CAAjB;AACA,QAAIuB,GAAG,IAAIzB,GAAX,EAAgB;AAChBA,OAAG,GAAGyB,GAAN;AACAD,SAAK,GAAGtB,CAAR;AACH;;AACD,SAAOsB,KAAP;AACH,CAZM;AAaA,MAAME,MAAM,GAAIC,MAAD,IAAmC;AACrD,MAAIZ,GAAG,GAAG,CAAV;AACA,MAAIa,MAAM,GAAG,CAAb;;AACA,OAAK,IAAI1B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyB,MAAM,CAACrC,MAA3B,EAAmCY,CAAC,EAApC,EAAwC;AACpC0B,UAAM,GAAGD,MAAM,CAACzB,CAAD,CAAf;AACAa,OAAG,IAAIa,MAAM,GAAGA,MAAhB;AACH;;AACD,SAAOb,GAAP;AACH,CARM;AASA,MAAMhC,GAAG,GAAI4C,MAAD,IAAmC5B,IAAI,CAAC8B,IAAL,CAAUH,MAAM,CAACC,MAAD,CAAN,GAAiBA,MAAM,CAACrC,MAAlC,CAA/C;AACA,MAAMN,GAAG,GAAI2C,MAAD,IAAmC;AAClD,MAAI3C,GAAG,GAAG,CAAV;AACA,MAAI8C,YAAY,GAAG,IAAnB;AACA,MAAIC,QAAQ,GAAG,IAAf;;AACA,OAAK,IAAI7B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyB,MAAM,CAACrC,MAA3B,EAAmCY,CAAC,EAApC,EAAwC;AACpC6B,YAAQ,GAAGJ,MAAM,CAACzB,CAAD,CAAN,IAAa,CAAxB;AACA,QAAI6B,QAAQ,KAAKD,YAAjB,EAA+B9C,GAAG;AAClC8C,gBAAY,GAAGC,QAAf;AACH;;AACD,SAAO/C,GAAP;AACH,CAVM;AAWA,MAAMgD,QAAQ,GAAIhB,KAAD,IAAkC;AACtD,MAAIiB,WAAW,GAAG,CAAlB;AACA,MAAIC,MAAM,GAAG,CAAb;;AACA,OAAK,IAAIhC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGc,KAAK,CAAC1B,MAA1B,EAAkCY,CAAC,EAAnC,EAAuC;AACnC+B,eAAW,IAAI/B,CAAC,GAAGH,IAAI,CAACoC,GAAL,CAASnB,KAAK,CAACd,CAAD,CAAd,CAAnB;AACAgC,UAAM,IAAIlB,KAAK,CAACd,CAAD,CAAf;AACH;;AACD,SAAOgC,MAAM,KAAK,CAAX,GAAe,CAAf,GAAmBD,WAAW,GAAGC,MAAxC;AACH,CARM;AASA,MAAME,kBAAkB,GAAG,CAACpB,KAAD,EAA+BqB,MAA/B,KAAkD;AAChF,MAAIJ,WAAW,GAAG,CAAlB;AACA,MAAIC,MAAM,GAAG,CAAb;;AACA,OAAK,IAAIhC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGc,KAAK,CAAC1B,MAA1B,EAAkCY,CAAC,EAAnC,EAAuC;AACnC+B,eAAW,IAAK/B,CAAC,IAAImC,MAAN,GAAgBtC,IAAI,CAACoC,GAAL,CAASnB,KAAK,CAACd,CAAD,CAAd,CAA/B;AACAgC,UAAM,IAAIlB,KAAK,CAACd,CAAD,CAAf;AACH;;AACD,SAAOgC,MAAM,KAAK,CAAX,GAAe,CAAf,GAAmBD,WAAW,GAAGC,MAAxC;AACH,CARM;AASA,MAAMI,aAAa,GAAItB,KAAD,IAAkC;AAC3D,QAAM1B,MAAM,GAAG0B,KAAK,CAAC1B,MAArB;AACA,MAAIyB,GAAG,GAAG,CAAV;AACA,MAAIa,MAAM,GAAG,CAAb;;AACA,OAAK,IAAI1B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,MAApB,EAA4BY,CAAC,EAA7B,EAAiC;AAC7B0B,UAAM,GAAGZ,KAAK,CAACd,CAAD,CAAd;AACA,QAAI0B,MAAM,IAAI,CAAd,EAAiB,OAAO,CAAP;AACjBb,OAAG,IAAIhB,IAAI,CAACwC,GAAL,CAASvB,KAAK,CAACd,CAAD,CAAd,CAAP;AACH;;AACD,SAAOH,IAAI,CAACyC,GAAL,CAASzB,GAAG,GAAGzB,MAAf,CAAP;AACH,CAVM;AAWA,MAAMmD,QAAQ,GAAIzB,KAAD,IAAkCsB,aAAa,CAACtB,KAAD,CAAb,GAAuBC,IAAI,CAACD,KAAD,CAA9E;AACP;;;;;;;;;;AASO,MAAM0B,IAAI,GAAG,CAACjB,GAAD,EAA6BkB,IAA7B,EAA0DC,IAA1D,EAA8EC,WAA9E,KAAwG;AACxH,MAAIH,IAAI,GAAG,CAAX;;AACA,MAAIE,IAAI,KAAK,IAAb,EAAmB;AACf,QAAIC,WAAW,KAAK,IAApB,EAA0B;AAAE;AACxB,WAAK,IAAI3C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuB,GAAG,CAACnC,MAAxB,EAAgCY,CAAC,EAAjC,EAAqC;AACjC,cAAM4C,IAAI,GAAGrB,GAAG,CAACvB,CAAD,CAAH,GAASyC,IAAI,CAACzC,CAAD,CAA1B;AACA,YAAI4C,IAAI,GAAG,CAAX,EAAc;AACdJ,YAAI,IAAII,IAAI,GAAGA,IAAf;AACH;;AACD,aAAO/C,IAAI,CAAC8B,IAAL,CAAUa,IAAV,CAAP;AACH;;AACD,SAAK,IAAIxC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuB,GAAG,CAACnC,MAAxB,EAAgCY,CAAC,EAAjC,EAAqC;AAAE;AACnC,YAAM4C,IAAI,GAAGrB,GAAG,CAACvB,CAAD,CAAH,GAASyC,IAAI,CAACzC,CAAD,CAA1B;AACAwC,UAAI,IAAII,IAAI,GAAGA,IAAf;AACH;;AACD,WAAO/C,IAAI,CAAC8B,IAAL,CAAUa,IAAV,CAAP;AACH;;AACD,MAAIG,WAAW,KAAK,IAApB,EAA0B;AAAE;AACxB,SAAK,IAAI3C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuB,GAAG,CAACnC,MAAxB,EAAgCY,CAAC,EAAjC,EAAqC;AACjC,YAAM4C,IAAI,GAAGrB,GAAG,CAACvB,CAAD,CAAH,GAASyC,IAAI,CAACzC,CAAD,CAA1B;AACA,UAAI4C,IAAI,GAAG,CAAX,EAAc;AACdJ,UAAI,IAAII,IAAR;AACH;;AACD,WAAOJ,IAAP;AACH;;AACD,OAAK,IAAIxC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuB,GAAG,CAACnC,MAAxB,EAAgCY,CAAC,EAAjC,EAAqC;AAAE;AACnC,UAAM4C,IAAI,GAAGrB,GAAG,CAACvB,CAAD,CAAH,GAASyC,IAAI,CAACzC,CAAD,CAA1B;AACAwC,QAAI,IAAI3C,IAAI,CAACoC,GAAL,CAASW,IAAT,CAAR;AACH;;AACD,SAAOJ,IAAP;AACH,CA9BM;AA+BP;;;;;;AAKO,MAAMK,QAAQ,GAAI/B,KAAD,IAAkC;AACtD,QAAMgC,EAAE,GAAGhB,QAAQ,CAAChB,KAAD,CAAnB;AACA,QAAMiC,EAAE,GAAGb,kBAAkB,CAACpB,KAAD,EAAQ,CAAR,CAA7B;AACA,QAAMkC,EAAE,GAAGd,kBAAkB,CAACpB,KAAD,EAAQ,CAAR,CAA7B;AACA,QAAMmC,EAAE,GAAGf,kBAAkB,CAACpB,KAAD,EAAQ,CAAR,CAA7B;AACA,QAAMoC,SAAS,GAAG,CAAC,CAAD,GAAKJ,EAAE,IAAI,CAAX,GAAe,IAAIA,EAAJ,GAASC,EAAxB,GAA6B,IAAID,EAAJ,GAASE,EAAtC,GAA2CC,EAA7D;AACA,QAAME,WAAW,GAAG,CAACJ,EAAE,GAAGD,EAAE,IAAI,CAAZ,KAAkB,CAAtC;AACA,SAAOI,SAAS,GAAGC,WAAnB;AACH,CARM;AASP;;;;;;AAKO,MAAMC,QAAQ,GAAItC,KAAD,IAAkC;AACtD,QAAMgC,EAAE,GAAGhB,QAAQ,CAAChB,KAAD,CAAnB;AACA,QAAMiC,EAAE,GAAGb,kBAAkB,CAACpB,KAAD,EAAQ,CAAR,CAA7B;AACA,QAAMkC,EAAE,GAAGd,kBAAkB,CAACpB,KAAD,EAAQ,CAAR,CAA7B;AACA,QAAMoC,SAAS,GAAG,IAAIJ,EAAE,IAAI,CAAV,GAAc,IAAIA,EAAJ,GAASC,EAAvB,GAA4BC,EAA9C;AACA,QAAMG,WAAW,GAAG,CAACJ,EAAE,GAAGD,EAAE,IAAI,CAAZ,KAAkB,GAAtC;AACA,SAAOI,SAAS,GAAGC,WAAnB;AACH,CAPM;AAQP;;;;;;;;AAOO,MAAME,OAAO,GAAG,CAACvC,KAAD,EAA+BwC,MAA/B,KAAmD;AACtE,QAAMlE,MAAM,GAAG0B,KAAK,CAAC1B,MAArB;AACA,MAAIZ,CAAC,GAAGgD,MAAM,CAACV,KAAD,CAAd;AACA,QAAMyC,SAAS,GAAG,CAACD,MAAM,IAAI,IAAX,IAAmB9E,CAArC;AACA,MAAIgF,CAAC,GAAGpE,MAAM,GAAG,CAAjB;;AACA,SAAOZ,CAAC,GAAG+E,SAAJ,IAAiBC,CAAC,IAAI,CAA7B,EAAgC;AAC5B,UAAMC,OAAO,GAAG3C,KAAK,CAAC0C,CAAD,CAArB;AACAhF,KAAC,IAAIiF,OAAO,GAAGA,OAAf;AACA,MAAED,CAAF;AACH;;AACD,SAAOA,CAAC,GAAG,CAAX;AACH,CAXM;AAYA,MAAME,KAAK,GAAI5C,KAAD,IAAkC;AACnD,QAAM0C,CAAC,GAAG1C,KAAK,CAAC1B,MAAhB;AACA,QAAMuE,IAAI,GAAGH,CAAC,GAAGA,CAAJ,GAAQ,CAArB;AACA,QAAMI,KAAK,GAAG,CAACJ,CAAC,GAAG,CAAL,IAAUA,CAAV,IAAe,IAAIA,CAAJ,GAAQ,CAAvB,IAA4B,CAA1C;AACA,MAAIK,IAAI,GAAG,CAAX;AACA,MAAIC,KAAK,GAAG,CAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,CAApB,EAAuBO,CAAC,EAAxB,EAA4B;AACxB,UAAMC,CAAC,GAAGlD,KAAK,CAACiD,CAAD,CAAf;AACAF,QAAI,IAAIG,CAAR;AACAF,SAAK,IAAIC,CAAC,GAAGC,CAAb;AACH;;AACD,SAAO,CAACR,CAAC,GAAGM,KAAJ,GAAYH,IAAI,GAAGE,IAApB,KAA6BL,CAAC,GAAGI,KAAJ,GAAYD,IAAI,GAAGA,IAAhD,CAAP;AACH,CAZM;AAaA,MAAMM,MAAM,GAAInD,KAAD,IAAkCjB,IAAI,CAAC8B,IAAL,CAAUO,kBAAkB,CAACpB,KAAD,EAAQ,CAAR,CAA5B,IAA0CgB,QAAQ,CAAChB,KAAD,CAAR,IAAmB,CAA9G;AACP;;;;;;;;;;AAUA;;AACO,MAAMR,aAAa,GAAG,CAAoC4D,EAApC,EAA2CC,IAA3C,EAAoDC,QAApD,EAAuEC,UAAvE,KAA+F;AACxH,QAAMC,QAAQ,GAAGJ,EAAE,CAAC9E,MAApB;AACA,QAAMmF,UAAU,GAAGJ,IAAI,CAAC/E,MAAxB;AACA,QAAMoF,WAAW,GAAG3E,IAAI,CAACU,GAAL,CAAS+D,QAAT,EAAmBC,UAAnB,CAApB;AACA,MAAIE,OAAO,GAAG,CAAd;AACA,MAAIC,GAAG,GAAGC,iDAAG,CAACP,QAAD,EAAWE,QAAX,CAAH,IAA2B,CAArC;AACA,MAAIM,KAAK,GAAGD,iDAAG,CAACN,UAAD,EAAaE,UAAb,CAAH,IAA+B,CAA3C;;AACA,SAAOE,OAAO,GAAGD,WAAjB,EAA8B;AAC1B,UAAMK,YAAY,GAAGhF,IAAI,CAACU,GAAL,CAASiE,WAAW,GAAGC,OAAvB,EAAgCH,QAAQ,GAAGI,GAA3C,EAAgDH,UAAU,GAAGK,KAA7D,CAArB;AACA,UAAME,QAAQ,GAAGF,KAAK,GAAGC,YAAzB;AACA,QAAID,KAAK,KAAK,CAAV,IAAeE,QAAQ,KAAKP,UAAhC,EAA4CL,EAAE,CAACzD,GAAH,CAAO0D,IAAP,EAAaO,GAAb,EAA5C,KACKR,EAAE,CAACzD,GAAH,CAAO0D,IAAI,CAACzD,QAAL,CAAckE,KAAd,EAAqBE,QAArB,CAAP,EAAuCJ,GAAvC;AACLA,OAAG,GAAG,CAACA,GAAG,GAAGG,YAAP,IAAuBP,QAA7B;AACAM,SAAK,GAAGE,QAAQ,GAAGP,UAAnB;AACAE,WAAO,IAAII,YAAX;AACH;;AACD,SAAOH,GAAP;AACH,CAjBM,C,CAkBP;;AACO,MAAMK,gBAAgB,GAAG,CAAoCZ,IAApC,EAA6C/E,MAA7C,EAA6D4F,MAA7D,KAAiF;AAC7G,QAAMT,UAAU,GAAGJ,IAAI,CAAC/E,MAAxB;AACA,QAAMhB,CAAC,GAAGuG,iDAAG,CAACK,MAAD,EAAST,UAAT,CAAH,IAA2B,CAArC;AACA,MAAInG,CAAC,KAAK,CAAN,IAAWgB,MAAM,KAAKmF,UAA1B,EAAsC,OAAOJ,IAAP;AACtC,MAAI/F,CAAC,GAAGgB,MAAJ,GAAamF,UAAjB,EAA6B,OAAOJ,IAAI,CAACzD,QAAL,CAActC,CAAd,EAAiBA,CAAC,GAAGgB,MAArB,CAAP;AAC7B,QAAM8E,EAAE,GAAG,IAAKC,IAAI,CAACpG,WAAV,CAAgDqB,MAAhD,CAAX;AACAkB,eAAa,CAAC4D,EAAD,EAAKC,IAAL,EAAW,CAAX,EAAc/F,CAAd,CAAb;AACA,SAAO8F,EAAP;AACH,CARM,C,CASP;;AACO,MAAMe,WAAW,GAAG,CAAoCd,IAApC,EAA6C/E,MAA7C,EAA6D4F,MAA7D,KAAiF;AACxG,QAAMT,UAAU,GAAGJ,IAAI,CAAC/E,MAAxB;AACA,QAAMhB,CAAC,GAAGuG,iDAAG,CAACK,MAAD,EAAST,UAAT,CAAH,IAA2B,CAArC;AACA,MAAInG,CAAC,KAAK,CAAN,IAAWgB,MAAM,KAAKmF,UAA1B,EAAsC,OAAOJ,IAAI,CAAChD,KAAL,EAAP;AACtC,MAAI/C,CAAC,GAAGgB,MAAJ,GAAamF,UAAjB,EAA6B,OAAOJ,IAAI,CAAChD,KAAL,CAAW/C,CAAX,EAAcA,CAAC,GAAGgB,MAAlB,CAAP;AAC7B,QAAM8E,EAAE,GAAG,IAAKC,IAAI,CAACpG,WAAV,CAAgDqB,MAAhD,CAAX;AACAkB,eAAa,CAAC4D,EAAD,EAAKC,IAAL,EAAW,CAAX,EAAc/F,CAAd,CAAb;AACA,SAAO8F,EAAP;AACH,CARM;AASP;;;;;;AAKO,MAAMgB,QAAQ,GAAG,CAACf,IAAD,EAAqBgB,kBAArB,KAAoD;AACxE,QAAM;AAAE/F;AAAF,MAAa+E,IAAnB;AACA,QAAMiB,IAAI,GAAG,IAAIlF,YAAJ,CAAiBd,MAAM,GAAG,CAA1B,CAAb;;AACA,OAAK,IAAIY,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,MAAM,GAAG,CAA7B,EAAgCY,CAAC,EAAjC,EAAqC;AACjC,UAAMqF,IAAI,GAAGlB,IAAI,CAACnE,CAAD,CAAjB;AACA,UAAMsF,IAAI,GAAItF,CAAC,KAAK,CAAN,IAAWA,CAAC,KAAKZ,MAAM,GAAG,CAAT,GAAa,CAA/B,GAAoC,CAApC,GAAwC+E,IAAI,CAAC/E,MAAM,GAAGY,CAAV,CAAzD;AACAoF,QAAI,CAACpF,CAAD,CAAJ,GAAU,CAACqF,IAAI,GAAGA,IAAP,GAAcC,IAAI,GAAGA,IAAtB,KAA+B,GAA/B,GAAqClG,MAArC,GAA8C+F,kBAAxD;AACH;;AACD,SAAOC,IAAP;AACH,CATM;AAUA,MAAMG,YAAY,GAAG,CAACH,IAAD,EAAqBI,UAArB,KAA4CC,WAAW,CAACpE,QAAQ,CAAC+D,IAAD,CAAT,EAAiBA,IAAI,CAAChG,MAAtB,EAA8BoG,UAA9B,CAA5E;AACA,MAAMC,WAAW,GAAG,CAACzF,CAAD,EAAY0F,OAAZ,EAA6BF,UAA7B,KAAqDxF,CAAC,GAAG0F,OAAL,GAAgBA,OAAhB,GAA0BF,UAA1B,GAAuC,CAA/G,C;;;;;;;;;;;;ACxPP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;AAMO,MAAMb,GAAG,GAAG,CAACZ,CAAD,EAAYC,CAAZ,KAA0B,CAACD,CAAC,GAAGC,CAAJ,GAAQA,CAAT,IAAcA,CAApD;AACP;;;;;;;;AAOO,MAAM2B,KAAK,GAAG,CAAC5B,CAAD,EAAYG,EAAZ,KAA2BrE,IAAI,CAAC8F,KAAL,CAAW5B,CAAC,GAAGG,EAAf,IAAqBA,EAA9D;AACP;;;;;;;;AAOO,MAAM0B,KAAK,GAAG,CAAC7B,CAAD,EAAYG,EAAZ,KAA2BrE,IAAI,CAAC+F,KAAL,CAAW7B,CAAC,GAAGG,EAAf,IAAqBA,EAA9D;AACP;;;;;;;;AAOO,MAAM2B,IAAI,GAAG,CAAC9B,CAAD,EAAYG,EAAZ,KAA2BrE,IAAI,CAACgG,IAAL,CAAU9B,CAAC,GAAGG,EAAd,IAAoBA,EAA5D;AACA,MAAM4B,KAAK,GAAIC,OAAD,IAAqBA,OAAO,GAAGlG,IAAI,CAACmG,EAAf,GAAoB,GAAvD;AACA,MAAMC,MAAM,GAAIC,CAAD,IAAe,CAAC,GAAD,EAAM,IAAN,EAAY,GAAZ,EAAiB,IAAjB,EAAuB,GAAvB,EAA4B,GAA5B,EAAiC,IAAjC,EAAuC,GAAvC,EAA4C,IAA5C,EAAkD,GAAlD,EAAuD,IAAvD,EAA6D,GAA7D,EAAkE,CAACA,CAAC,GAAG,EAAJ,GAAS,EAAV,IAAgB,EAAlF,IAAwFrG,IAAI,CAAC8F,KAAL,CAAWO,CAAC,GAAG,EAAJ,GAAS,CAApB,CAAtH;AACA,MAAMC,KAAK,GAAIC,CAAD,IAAe,KAAKvG,IAAI,CAACwG,KAAL,CAAWD,CAAX,CAAlC;AACA,MAAME,KAAK,GAAIC,EAAD,IAAgB,OAAOA,EAAE,GAAG,EAAZ,CAA9B;AACA,MAAMC,QAAQ,GAAG,CAACzC,CAAD,EAAYvF,CAAZ,KAA0BqB,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYiE,CAAZ,KAAmB,OAAO,CAACvF,CAAtE;AACA,MAAMiI,OAAO,GAAG,CAAC1C,CAAD,EAAYvF,CAAZ,KAA0BqB,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYiE,CAAZ,KAAmB,OAAOvF,CAApE,C","file":"js/6718d048626d7ce2abee.worklet.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./node_modules/babel-loader/lib/index.js!./src/core/objects/dsp/AudioWorklet/TemporalAnalyser.worklet.ts\");\n","import { DataToProcessor, DataFromProcessor, Parameters } from \"./TemporalAnalyser\";\nimport { rms, zcr, setTypedArray } from \"../../../../utils/buffer\";\n\nconst processorID = \"__JSPatcher_TemporalAnalyser\";\n\nclass TemporalAnalyserProcessor extends AudioWorkletProcessor<DataToProcessor, DataFromProcessor, Parameters> {\n    static get parameterDescriptors(): AudioWorkletAudioParamDescriptor<Parameters>[] {\n        return [{\n            defaultValue: 1024,\n            maxValue: 2 ** 32,\n            minValue: 128,\n            name: \"windowSize\"\n        }];\n    }\n    private destroyed = false;\n    /**\n     * Concatenated audio data, array of channels\n     *\n     * @type {SharedArrayBuffer[]}\n     * @memberof TemporalAnalyserProcessor\n     */\n    private window: SharedArrayBuffer[] = [];\n    /**\n     * Float32Array Buffer view of window\n     *\n     * @private\n     * @type {Float32Array[]}\n     * @memberof TemporalAnalyserProcessor\n     */\n    private windowF32: Float32Array[] = [];\n    /**\n     * Next audio sample index to write into window\n     *\n     * @memberof TemporalAnalyserProcessor\n     */\n    private $ = 0;\n    /**\n     * Total samples written counter\n     *\n     * @memberof TemporalAnalyserProcessor\n     */\n    private $total = 0;\n    constructor(options: AudioWorkletNodeOptions) {\n        super(options);\n        this.port.onmessage = (e) => {\n            const { id } = e.data;\n            if (e.data.destroy) this.destroy();\n            const message = {} as DataFromProcessor;\n            if (e.data.rms) message.rms = this.rms;\n            if (e.data.zcr) message.zcr = this.zcr;\n            if (e.data.buffer) message.buffer = this.buffer;\n            this.port.postMessage({ id, ...message });\n        };\n    }\n    get rms() {\n        return this.windowF32.map(rms);\n    }\n    get zcr() {\n        return this.windowF32.map(zcr);\n    }\n    get buffer() {\n        const data = this.windowF32;\n        return { data, startPointer: this.$, sampleIndex: data.length ? this.$total - data[0].length : 0 };\n    }\n    process(inputs: Float32Array[][], outputs: Float32Array[][], parameters: { [key in Parameters]: Float32Array }) {\n        if (this.destroyed) return false;\n        const input = inputs[0];\n        const windowSize = ~~parameters.windowSize[0] || 1024;\n        this.$ %= windowSize;\n        if (this.window.length > input.length) { // Too much channels ?\n            this.window.splice(input.length);\n            this.windowF32.splice(input.length);\n        }\n        if (input.length === 0) return true;\n        const bufferSize = Math.max(...input.map(c => c.length)) || 128;\n        this.$total += bufferSize;\n        let { $ } = this;\n        // Init windows\n        for (let i = 0; i < input.length; i++) {\n            $ = this.$;\n            if (!this.window[i]) { // Initialise channel if not exist\n                this.window[i] = new SharedArrayBuffer(windowSize * Float32Array.BYTES_PER_ELEMENT);\n                this.windowF32[i] = new Float32Array(this.window[i]);\n            } else {\n                if (this.windowF32[i].length !== windowSize) { // adjust window size if not corresponded\n                    const oldWindow = this.window[i];\n                    const oldWindowSize = oldWindow.length;\n                    const window = new SharedArrayBuffer(windowSize * Float32Array.BYTES_PER_ELEMENT);\n                    $ = setTypedArray(new Float32Array(window), new Float32Array(oldWindow), 0, $ - Math.min(windowSize, oldWindowSize));\n                    this.window[i] = window;\n                    this.windowF32[i] = new Float32Array(window);\n                }\n            }\n        }\n        this.$ = $;\n        // Write\n        for (let i = 0; i < input.length; i++) {\n            const window = this.windowF32[i];\n            const channel = input[i].length ? input[i] : new Float32Array(bufferSize);\n            $ = this.$;\n            if (bufferSize > windowSize) {\n                window.set(channel.subarray(bufferSize - windowSize));\n                $ = 0;\n            } else {\n                $ = setTypedArray(window, channel, $);\n            }\n        }\n        this.$ = $;\n        return true;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.port.close();\n        this.window = [];\n    }\n}\nregisterProcessor(processorID, TemporalAnalyserProcessor);\n","import { mod } from \"./math\";\n\ntype TypedArray = Int8Array | Uint8Array | Int16Array | Uint16Array | Int32Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array;\ntype TypedArrayConstructor = typeof Int8Array | typeof Uint8Array | typeof Int16Array | typeof Uint16Array | typeof Int32Array | typeof Uint32Array | typeof Uint8ClampedArray | typeof Float32Array | typeof Float64Array;\nexport const sum = (array: TypedArray | number[]) => {\n    let sum = 0;\n    for (let i = 0; i < array.length; i++) {\n        sum += array[i];\n    }\n    return sum;\n};\nexport const mean = (array: TypedArray | number[]) => sum(array) / array.length;\nexport const median = (array: TypedArray | number[]) => {\n    const length = array.length;\n    if (length === 0) throw new Error(\"trying to calculate median of empty array\");\n    const sortedArray = array.slice().sort();\n    if (length % 2 === 0) return (sortedArray[length / 2 - 1] + sortedArray[length / 2]) / 2;\n    return sortedArray[~~(length / 2)];\n};\nexport const maxIndex = (array: TypedArray | number[]) => {\n    if (!array.length) return 0;\n    let index = 0;\n    let max = array[0];\n    let i = array.length;\n    while (i-- > 1) {\n        const cur = array[i];\n        if (cur <= max) continue;\n        max = cur;\n        index = i;\n    }\n    return index;\n};\nexport const energy = (signal: TypedArray | number[]) => {\n    let sum = 0;\n    let sample = 0;\n    for (let i = 0; i < signal.length; i++) {\n        sample = signal[i];\n        sum += sample * sample;\n    }\n    return sum;\n};\nexport const rms = (signal: TypedArray | number[]) => Math.sqrt(energy(signal) / signal.length);\nexport const zcr = (signal: TypedArray | number[]) => {\n    let zcr = 0;\n    let lastPositive = true;\n    let positive = true;\n    for (let i = 0; i < signal.length; i++) {\n        positive = signal[i] >= 0;\n        if (positive !== lastPositive) zcr++;\n        lastPositive = positive;\n    }\n    return zcr;\n};\nexport const centroid = (array: TypedArray | number[]) => {\n    let weightedSum = 0;\n    let weight = 0;\n    for (let i = 0; i < array.length; i++) {\n        weightedSum += i * Math.abs(array[i]);\n        weight += array[i];\n    }\n    return weight === 0 ? 0 : weightedSum / weight;\n};\nexport const conjugatedCentroid = (array: TypedArray | number[], factor: number) => {\n    let weightedSum = 0;\n    let weight = 0;\n    for (let i = 0; i < array.length; i++) {\n        weightedSum += (i ** factor) * Math.abs(array[i]);\n        weight += array[i];\n    }\n    return weight === 0 ? 0 : weightedSum / weight;\n};\nexport const geometricMean = (array: TypedArray | number[]) => {\n    const length = array.length;\n    let sum = 0;\n    let sample = 0;\n    for (let i = 0; i < length; i++) {\n        sample = array[i];\n        if (sample <= 0) return 0;\n        sum += Math.log(array[i]);\n    }\n    return Math.exp(sum / length);\n};\nexport const flatness = (array: TypedArray | number[]) => geometricMean(array) / mean(array);\n/**\n * https://essentia.upf.edu/reference/std_Flux.html\n *\n * @param {TypedArray} cur\n * @param {TypedArray} prev\n * @param {(\"L1\" | \"L2\")} [norm]\n * @param {boolean} [halfRectify]\n * @returns\n */\nexport const flux = (cur: TypedArray | number[], prev: TypedArray | number[], norm?: \"L1\" | \"L2\", halfRectify?: boolean) => {\n    let flux = 0;\n    if (norm === \"L2\") {\n        if (halfRectify === true) { // L2 + halfRectify\n            for (let i = 0; i < cur.length; i++) {\n                const diff = cur[i] - prev[i];\n                if (diff < 0) continue;\n                flux += diff * diff;\n            }\n            return Math.sqrt(flux);\n        }\n        for (let i = 0; i < cur.length; i++) { // L2 not halfRectify\n            const diff = cur[i] - prev[i];\n            flux += diff * diff;\n        }\n        return Math.sqrt(flux);\n    }\n    if (halfRectify === true) { // L1 + halfRectify\n        for (let i = 0; i < cur.length; i++) {\n            const diff = cur[i] - prev[i];\n            if (diff < 0) continue;\n            flux += diff;\n        }\n        return flux;\n    }\n    for (let i = 0; i < cur.length; i++) { // L1 not halfRectify\n        const diff = cur[i] - prev[i];\n        flux += Math.abs(diff);\n    }\n    return flux;\n};\n/**\n * https://github.com/meyda/meyda/blob/master/src/extractors/spectralKurtosis.js\n *\n * @param {TypedArray} array\n */\nexport const kurtosis = (array: TypedArray | number[]) => {\n    const c1 = centroid(array);\n    const c2 = conjugatedCentroid(array, 2);\n    const c3 = conjugatedCentroid(array, 3);\n    const c4 = conjugatedCentroid(array, 4);\n    const numerator = -3 * c1 ** 4 + 6 * c1 * c2 - 4 * c1 * c3 + c4;\n    const denominator = (c2 - c1 ** 2) ** 2;\n    return numerator / denominator;\n};\n/**\n * https://github.com/meyda/meyda/blob/master/src/extractors/spectralSkewness.js\n *\n * @param {TypedArray} array\n */\nexport const skewness = (array: TypedArray | number[]) => {\n    const c1 = centroid(array);\n    const c2 = conjugatedCentroid(array, 2);\n    const c3 = conjugatedCentroid(array, 3);\n    const numerator = 2 * c1 ** 3 - 3 * c1 * c2 + c3;\n    const denominator = (c2 - c1 ** 2) ** 1.5;\n    return numerator / denominator;\n};\n/**\n * https://essentia.upf.edu/reference/std_RollOff.html\n *\n * @param {TypedArray} array\n * @param {number} [cutoff] Between 0 - 1\n * @returns\n */\nexport const rolloff = (array: TypedArray | number[], cutoff?: number) => {\n    const length = array.length;\n    let e = energy(array);\n    const threshold = (cutoff || 0.99) * e;\n    let n = length - 1;\n    while (e > threshold && n >= 0) {\n        const element = array[n];\n        e -= element * element;\n        --n;\n    }\n    return n + 1;\n};\nexport const slope = (array: TypedArray | number[]) => {\n    const n = array.length;\n    const xSum = n * n / 2;\n    const x2Sum = (n - 1) * n * (2 * n - 1) / 6;\n    let ySum = 0;\n    let xySum = 0;\n    for (let x = 0; x < n; x++) {\n        const y = array[x];\n        ySum += y;\n        xySum += x * y;\n    }\n    return (n * xySum - xSum * ySum) / (n * x2Sum - xSum * xSum);\n};\nexport const spread = (array: TypedArray | number[]) => Math.sqrt(conjugatedCentroid(array, 2)) - centroid(array) ** 2;\n/**\n * Copy buffer to another, support negative offset index\n *\n * @template T\n * @param {T} to\n * @param {T} from\n * @param {number} [offsetTo]\n * @param {number} [offsetFrom]\n * @returns\n */\n// eslint-disable-next-line arrow-parens\nexport const setTypedArray = <T extends TypedArray = TypedArray>(to: T, from: T, offsetTo?: number, offsetFrom?: number) => {\n    const toLength = to.length;\n    const fromLength = from.length;\n    const spillLength = Math.min(toLength, fromLength);\n    let spilled = 0;\n    let $to = mod(offsetTo, toLength) || 0;\n    let $from = mod(offsetFrom, fromLength) || 0;\n    while (spilled < spillLength) {\n        const $spillLength = Math.min(spillLength - spilled, toLength - $to, fromLength - $from);\n        const $fromEnd = $from + $spillLength;\n        if ($from === 0 && $fromEnd === fromLength) to.set(from, $to);\n        else to.set(from.subarray($from, $fromEnd), $to);\n        $to = ($to + $spillLength) % toLength;\n        $from = $fromEnd % fromLength;\n        spilled += $spillLength;\n    }\n    return $to;\n};\n// eslint-disable-next-line arrow-parens\nexport const getSubTypedArray = <T extends TypedArray = TypedArray>(from: T, length: number, offset?: number) => {\n    const fromLength = from.length;\n    const $ = mod(offset, fromLength) || 0;\n    if ($ === 0 && length === fromLength) return from;\n    if ($ + length < fromLength) return from.subarray($, $ + length) as T;\n    const to = new (from.constructor as TypedArrayConstructor)(length) as T;\n    setTypedArray(to, from, 0, $);\n    return to;\n};\n// eslint-disable-next-line arrow-parens\nexport const sliceBuffer = <T extends TypedArray = TypedArray>(from: T, length: number, offset?: number) => {\n    const fromLength = from.length;\n    const $ = mod(offset, fromLength) || 0;\n    if ($ === 0 && length === fromLength) return from.slice();\n    if ($ + length < fromLength) return from.slice($, $ + length) as T;\n    const to = new (from.constructor as TypedArrayConstructor)(length) as T;\n    setTypedArray(to, from, 0, $);\n    return to;\n};\n/**\n * http://www.fftw.org/fftw3_doc/The-Halfcomplex_002dformat-DFT.html\n *\n * @param {Float32Array} from\n */\nexport const fftw2Amp = (from: Float32Array, windowEnergyFactor: number) => {\n    const { length } = from;\n    const amps = new Float32Array(length / 2);\n    for (let i = 0; i < length / 2; i++) {\n        const real = from[i];\n        const imag = (i === 0 || i === length / 2 - 1) ? 0 : from[length - i];\n        amps[i] = (real * real + imag * imag) ** 0.5 / length * windowEnergyFactor;\n    }\n    return amps;\n};\nexport const estimateFreq = (amps: Float32Array, sampleRate: number) => indexToFreq(maxIndex(amps), amps.length, sampleRate);\nexport const indexToFreq = (i: number, fftBins: number, sampleRate: number) => (i % fftBins) / fftBins * sampleRate / 2;\n","/**\n * Mod support wrapping with negative numbers\n *\n * @param {number} x\n * @param {number} y\n */\nexport const mod = (x: number, y: number) => (x % y + y) % y;\n/**\n * Round a number to multiple of another\n *\n * @param {number} x\n * @param {number} to\n * @returns\n */\nexport const round = (x: number, to: number) => Math.round(x / to) * to;\n/**\n * Floor a number to multiple of another\n *\n * @param {number} x\n * @param {number} to\n * @returns\n */\nexport const floor = (x: number, to: number) => Math.floor(x / to) * to;\n/**\n * Ceil a number to multiple of another\n *\n * @param {number} x\n * @param {number} to\n * @returns\n */\nexport const ceil = (x: number, to: number) => Math.ceil(x / to) * to;\nexport const toRad = (degrees: number) => degrees * Math.PI / 180;\nexport const toMIDI = (f: number) => [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"][(f % 12 + 12) % 12] + Math.round(f / 12 - 2);\nexport const atodb = (a: number) => 20 * Math.log10(a);\nexport const dbtoa = (db: number) => 10 ** (db / 20);\nexport const iNormExp = (x: number, e: number) => Math.max(0, x) ** (1.5 ** -e);\nexport const normExp = (x: number, e: number) => Math.max(0, x) ** (1.5 ** e);\n"],"sourceRoot":""}