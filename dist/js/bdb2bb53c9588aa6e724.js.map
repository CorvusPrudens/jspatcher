{"version":3,"file":"js/bdb2bb53c9588aa6e724.js","mappings":"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","sources":["webpack://JSPatcher/./src/core/objects/base/index.jspatpkg.ts","webpack://JSPatcher/./src/core/objects/faust/FaustNode.ts","webpack://JSPatcher/./src/core/objects/main/AudioIn.ts","webpack://JSPatcher/./src/core/objects/main/AudioOut.ts","webpack://JSPatcher/./src/core/objects/main/BPatcher.ts","webpack://JSPatcher/./src/core/objects/main/BPatcherUI.tsx","webpack://JSPatcher/./src/core/objects/main/Buffer.ts","webpack://JSPatcher/./src/core/objects/main/BufferUI.tsx","webpack://JSPatcher/./src/core/objects/main/DspSubPatcher.ts","webpack://JSPatcher/./src/core/objects/main/FaustPatcher.ts","webpack://JSPatcher/./src/core/objects/main/GenPatcher.ts","webpack://JSPatcher/./src/core/objects/main/In.ts","webpack://JSPatcher/./src/core/objects/main/Out.ts","webpack://JSPatcher/./src/core/objects/main/Record.ts","webpack://JSPatcher/./src/core/objects/main/SubPatcher.ts","webpack://JSPatcher/./src/core/objects/main/WebAudioModule.ts","webpack://JSPatcher/./src/core/objects/main/index.jspatpkg.ts","webpack://JSPatcher/./src/core/objects/main/BPatcherUI.scss","webpack://JSPatcher/./src/core/objects/main/BPatcherUI.scss?a0de"],"sourcesContent":["import BaseObject from \"./BaseObject\";\nimport EmptyObject from \"./EmptyObject\";\nimport InvalidObject from \"./InvalidObject\";\nimport { Func, New } from \"../importer/DefaultImporter\";\nimport getIO from \"../main/index.jspatpkg\";\n\nexport default async () => ({\n    BaseObject,\n    EmptyObject,\n    InvalidObject,\n    func: Func,\n    new: New,\n    ...await getIO()\n});\n","import type { FaustAudioWorkletNode } from \"faust2webaudio\";\nimport CodePopupUI from \"../base/CodePopupUI\";\nimport Bang, { isBang } from \"../base/Bang\";\nimport DefaultObject from \"../base/DefaultObject\";\nimport { isMIDIEvent, decodeLine } from \"../../../utils/utils\";\nimport type DefaultUI from \"../base/DefaultUI\";\nimport type { TBPF, TMIDIEvent } from \"../../types\";\nimport type { UnPromisifiedFunction } from \"../../workers/Worker\";\nimport type { IJSPatcherObjectMeta, IInletMeta, IOutletMeta } from \"../base/AbstractObject\";\n\nclass FaustNodeUI extends CodePopupUI<FaustNode> {\n    editorLanguage = \"faust\";\n    get code() {\n        return this.object.data.code;\n    }\n    handleSave = (code: string) => {\n        this.object.setData({ code });\n        this.object.newNode(code, this.object._.voices);\n    };\n}\nexport interface FaustNodeData {\n    code?: string;\n}\nexport interface FaustNodeInternalState {\n    merger: ChannelMergerNode;\n    splitter: ChannelSplitterNode;\n    node: FaustAudioWorkletNode & { dspCode?: string };\n    voices: number;\n}\ntype Args = [number];\ntype I = [Bang | number | string | TMIDIEvent | Record<string, TBPF>, ...TBPF[]];\ntype O = (null | FaustAudioWorkletNode)[];\n\nexport default class FaustNode<\n    D extends Record<string, any> & Partial<FaustNodeData> = {},\n    S extends {} = {},\n    A extends any[] = Args,\n    U extends {} = {}\n> extends DefaultObject<D & FaustNodeData, S, I, O, A, {}, U> {\n    static package = \"Faust\";\n    static author = \"Fr0stbyteR\";\n    static version = \"1.0.0\";\n    static description = \"Dynamically generate WebAudioNode from Faust\";\n    static inlets: IJSPatcherObjectMeta[\"inlets\"] = [{\n        isHot: true,\n        type: \"anything\",\n        description: \"A bang to output the node, code string to compile, number to set voices, or a param-bpf map, or a MIDI event\"\n    }];\n    static outlets: IJSPatcherObjectMeta[\"outlets\"] = [{\n        type: \"object\",\n        description: \"FaustNode instance output: AudioWorkletNode | ScriptProcessor\"\n    }];\n    static args: IJSPatcherObjectMeta[\"args\"] = [{\n        type: \"number\",\n        optional: true,\n        default: 0,\n        description: \"Polyphonic instrument voices count\"\n    }];\n    static UI: typeof DefaultUI = FaustNodeUI;\n    _: FaustNodeInternalState = { merger: undefined, splitter: undefined, node: undefined, voices: 0 };\n    async getFaustNode(code: string, voices: number) {\n        const { audioCtx } = this;\n        const faust = await this.env.getFaust();\n        return faust.getNode(code, { audioCtx, useWorklet: true, voices, args: { \"-I\": [\"libraries/\", \"project/\"] } });\n    }\n    async compile(code: string, voices: number) {\n        let splitter: ChannelSplitterNode;\n        let merger: ChannelMergerNode;\n        const node = await this.getFaustNode(code, voices) as FaustAudioWorkletNode & { dspCode?: string };\n        if (!node) throw new Error(\"Cannot compile Faust code\");\n        node.channelInterpretation = \"discrete\";\n        node.dspCode = code;\n        const { audioCtx } = this.patcher;\n        const inlets = node.getNumInputs();\n        const outlets = node.getNumOutputs();\n        if (inlets) {\n            merger = audioCtx.createChannelMerger(inlets);\n            merger.channelInterpretation = \"discrete\";\n            merger.connect(node, 0, 0);\n        }\n        if (outlets) {\n            splitter = audioCtx.createChannelSplitter(outlets);\n            node.connect(splitter, 0, 0);\n        }\n        return { inlets, outlets, node, splitter, merger };\n    }\n    async newNode(code: string, voices: number) {\n        let compiled: ReturnType<UnPromisifiedFunction<FaustNode[\"compile\"]>>;\n        try {\n            compiled = await this.compile(code, voices);\n        } catch (e) {\n            this.error((e as Error).message);\n            return;\n        }\n        const { inlets, outlets, merger, splitter, node } = compiled;\n        this.disconnectAudio();\n        this.handleDestroy();\n        Object.assign(this._, { voices, merger, splitter, node } as FaustNodeInternalState);\n        const Ctor = this.constructor as typeof FaustNode;\n        const firstInletMeta = Ctor.inlets[0];\n        const firstInletSignalMeta: IInletMeta = { ...firstInletMeta, type: \"signal\" };\n        const inletMeta: IInletMeta = { isHot: false, type: \"signal\", description: \"Node connection\" };\n        const audioParamInletMeta: IInletMeta = { isHot: false, type: \"signal\", description: \": bpf or node connection\" };\n        const outletMeta: IOutletMeta = { type: \"signal\", description: \"Node connection\" };\n        const lastOutletMeta = Ctor.outlets[0];\n        const factoryMeta = Ctor.meta as this[\"meta\"];\n        for (let i = 0; i < inlets; i++) {\n            if (i === 0) factoryMeta.inlets[i] = compiled.inlets ? firstInletSignalMeta : firstInletMeta;\n            else factoryMeta.inlets[i] = inletMeta;\n            this.inletAudioConnections[i] = { node: merger, index: i };\n        }\n        for (let i = 0; i < outlets; i++) {\n            factoryMeta.outlets[i] = outletMeta;\n            this.outletAudioConnections[i] = { node: splitter, index: i };\n        }\n        factoryMeta.outlets[outlets] = lastOutletMeta;\n        const audioParams: string[] = [];\n        node.parameters.forEach((v, k) => audioParams.push(k));\n        for (let i = inlets || 1; i < (inlets || 1) + audioParams.length; i++) {\n            const path = audioParams[i - (inlets || 1)];\n            const param = node.parameters.get(path);\n            const { defaultValue, minValue, maxValue } = param;\n            factoryMeta.inlets[i] = { ...audioParamInletMeta, description: `${path}${audioParamInletMeta.description}: ${defaultValue} (${minValue} - ${maxValue})` };\n            this.inletAudioConnections[i] = { node: param };\n        }\n        this.setMeta(factoryMeta);\n        this.inlets = (inlets || 1) + node.parameters.size;\n        this.outlets = outlets + 1;\n        this.connectAudio();\n        this.outlet(this.outlets - 1, this._.node);\n    }\n    handlePreInit = () => undefined as any;\n    handlePostInit = async () => {\n        if (this.data.code) await this.newNode(this.data.code, this._.voices);\n    };\n    handleUpdateArgs = (args: Partial<A>): void => {\n        if (typeof args[0] === \"number\") this._.voices = ~~Math.max(0, args[0]);\n    };\n    handleInlet = async ({ data, inlet }: { data: I[number]; inlet: number }) => {\n        if (inlet === 0) {\n            if (isBang(data)) {\n                if (this._.node) this.outlet(this.outlets - 1, this._.node);\n            } else if (typeof data === \"string\") {\n                this.setData({ code: data } as D);\n                await this.newNode(data, this._.voices);\n            } else if (typeof data === \"number\") {\n                this._.voices = Math.max(0, ~~data);\n            } else if (isMIDIEvent(data)) {\n                if (this._.node) this._.node.midiMessage(data);\n            } else if (typeof data === \"object\") {\n                if (this._.node) {\n                    for (const key in data) {\n                        try {\n                            const bpf = decodeLine((data as Record<string, TBPF>)[key]);\n                            this.applyBPF(this._.node.parameters.get(key), bpf);\n                        } catch (e) {\n                            this.error(e.message);\n                        }\n                    }\n                }\n            }\n        } else if (this._.node) {\n            const con = this.inletAudioConnections[inlet].node;\n            if (con instanceof AudioParam) {\n                try {\n                    const bpf = decodeLine(data as TBPF);\n                    this.applyBPF(con, bpf);\n                } catch (e) {\n                    this.error(e.message);\n                }\n            }\n        }\n    };\n    handleDestroy = () => {\n        const { merger, node } = this._;\n        if (merger) merger.disconnect();\n        if (node) {\n            node.disconnect();\n            node.destroy();\n        }\n    };\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", this.handlePreInit);\n        this.on(\"postInit\", this.handlePostInit);\n        this.on(\"updateArgs\", this.handleUpdateArgs);\n        this.on(\"inlet\", this.handleInlet);\n        this.on(\"destroy\", this.handleDestroy);\n    }\n}\n","import type { TAudioNodeOutletConnection } from \"../../types\";\nimport type { IArgsMeta, IOutletsMeta, IPropsMeta } from \"../base/AbstractObject\";\nimport DefaultObject from \"../base/DefaultObject\";\n\ninterface P {\n    description: string;\n}\n\nexport default class AudioIn extends DefaultObject<{}, {}, [], [any], [number], P> {\n    static package = \"SubPatcher\";\n    static description = \"Patcher inlet (audio)\";\n    static args: IArgsMeta = [{\n        type: \"number\",\n        optional: false,\n        default: 1,\n        description: \"Inlet index (1-based)\"\n    }];\n    static props: IPropsMeta<P> = {\n        description: {\n            type: \"string\",\n            default: \"\",\n            description: \"Description text\"\n        }\n    };\n    static outlets: IOutletsMeta = [{\n        type: \"signal\",\n        description: \"\"\n    }];\n    outletAudioConnections: TAudioNodeOutletConnection[] = [{ node: undefined as GainNode, index: 0 }];\n    private _duringInit = true;\n    protected get index() {\n        return Math.max(1, ~~this.box.args[0] || 1);\n    }\n    protected _ = { index: this.index };\n    protected emitPatcherChangeIO = () => this.patcher.changeIO();\n    subscribe() {\n        super.subscribe();\n        this.on(\"metaUpdated\", this.emitPatcherChangeIO);\n        this.on(\"preInit\", () => {\n            this.inlets = 0;\n            this.outlets = 1;\n        });\n        this.on(\"postInit\", () => {\n            this._duringInit = false;\n            this.connectAudio();\n            this.patcher.connectAudioInlet(this.index - 1);\n            this.patcher.inspectAudioIO();\n            this.emitPatcherChangeIO();\n        });\n        this.on(\"updateArgs\", () => {\n            const { index } = this;\n            if (index !== this._.index) {\n                this._.index = index;\n                this.patcher.disconnectAudioInlet(index - 1);\n                this.disconnectAudio();\n                if (!this.patcher.inletAudioConnections[index - 1]) {\n                    const node = this.audioCtx.createGain();\n                    node.channelInterpretation = \"discrete\";\n                    this.patcher.inletAudioConnections[index - 1] = { node, index: 0 };\n                }\n                const { node } = this.patcher.inletAudioConnections[index - 1];\n                this.outletAudioConnections[0].node = node;\n                if (!this._duringInit) {\n                    this.connectAudio();\n                    this.patcher.connectAudioInlet(index - 1);\n                    this.patcher.inspectAudioIO();\n                    this.emitPatcherChangeIO();\n                }\n            }\n        });\n        this.on(\"updateProps\", (props) => {\n            const outlet0 = { ...this.meta.outlets[0] };\n            if (typeof props.description === \"string\") outlet0.description = props.description;\n            this.setMeta({ outlets: [outlet0] });\n            this.emitPatcherChangeIO();\n        });\n        this.on(\"destroy\", () => {\n            this.patcher.inspectAudioIO();\n            this.emitPatcherChangeIO();\n        });\n    }\n}\n","import type { TAudioNodeInletConnection } from \"../../types\";\nimport type { IArgsMeta, IInletsMeta, IPropsMeta } from \"../base/AbstractObject\";\nimport DefaultObject from \"../base/DefaultObject\";\n\nexport default class AudioOut extends DefaultObject<{}, { index: number }, [any], [], [number], { description: string }> {\n    static package = \"SubPatcher\";\n    static description = \"Patcher outlet (audio)\";\n    static args: IArgsMeta = [{\n        type: \"number\",\n        optional: false,\n        default: 1,\n        description: \"Outlet index (1-based)\"\n    }];\n    static props: IPropsMeta = {\n        description: {\n            type: \"string\",\n            default: \"\",\n            description: \"Description text\"\n        }\n    };\n    static inlets: IInletsMeta = [{\n        type: \"signal\",\n        description: \"\",\n        isHot: true\n    }];\n    inletAudioConnections: TAudioNodeInletConnection[] = [{ node: undefined as GainNode, index: 0 }];\n    private _duringInit = true;\n    protected get index() {\n        return Math.max(1, ~~this.box.args[0] || 1);\n    }\n    protected _ = { index: this.index };\n    protected emitPatcherChangeIO = () => {\n        this.patcher.inspectAudioIO();\n        this.patcher.changeIO();\n    };\n    subscribe() {\n        super.subscribe();\n        this.on(\"metaUpdated\", this.emitPatcherChangeIO);\n        this.on(\"preInit\", () => {\n            this.inlets = 1;\n            this.outlets = 0;\n        });\n        this.on(\"postInit\", () => {\n            this._duringInit = false;\n            this.connectAudio();\n            this.patcher.connectAudioInlet(this.state.index - 1);\n            this.emitPatcherChangeIO();\n        });\n        this.on(\"updateArgs\", () => {\n            const { index } = this;\n            if (index !== this._.index) {\n                this._.index = index;\n                this.patcher.disconnectAudioOutlet(index - 1);\n                this.disconnectAudio();\n                if (!this.patcher.outletAudioConnections[index - 1]) {\n                    const node = this.audioCtx.createGain();\n                    node.channelInterpretation = \"discrete\";\n                    this.patcher.outletAudioConnections[index - 1] = { node, index: 0 };\n                }\n                const { node } = this.patcher.outletAudioConnections[index - 1];\n                this.inletAudioConnections[0].node = node;\n                if (!this._duringInit) {\n                    this.connectAudio();\n                    this.patcher.connectAudioOutlet(index - 1);\n                    this.emitPatcherChangeIO();\n                }\n            }\n        });\n        this.on(\"updateProps\", (props) => {\n            const inlet0 = { ...this.meta.inlets[0] };\n            if (typeof props.description === \"string\") inlet0.description = props.description;\n            this.setMeta({ inlets: [inlet0] });\n            this.emitPatcherChangeIO();\n        });\n        this.on(\"destroy\", () => {\n            this.emitPatcherChangeIO();\n        });\n    }\n}\n","import BaseObject from \"../base/BaseObject\";\nimport BPatcherUI from \"./BPatcherUI\";\nimport SubPatcher from \"./SubPatcher\";\n\nexport default class BPatcher extends SubPatcher {\n    static props = BaseObject.props;\n    static UI = BPatcherUI as any;\n}\n","import * as React from \"react\";\nimport PatcherEditorUI from \"../../../components/editors/PatcherEditorUI\";\nimport BaseUI, { BaseUIState } from \"../base/BaseUI\";\nimport PatcherUI from \"../../../components/editors/patcher/PatcherUI\";\nimport type SubPatcher from \"./SubPatcher\";\nimport type PatcherEditor from \"../../patcher/PatcherEditor\";\nimport type { SubPatcherUIState } from \"./SubPatcherUI\";\nimport \"./BPatcherUI.scss\";\n\nexport default class BPatcherUI extends BaseUI<SubPatcher, {}, SubPatcherUIState> {\n    static sizing: \"horizontal\" | \"vertical\" | \"both\" | \"ratio\" = \"both\";\n    static defaultSize: [number, number] = [210, 90];\n    state: SubPatcherUIState & BaseUIState = {\n        ...this.state,\n        patcher: this.object._.patcher,\n        timestamp: performance.now(),\n        editor: undefined\n    };\n    handleChanged = () => {\n        if (this.state.editor.isTemporary) this.state.editor.save();\n    };\n    componentDidMount() {\n        super.componentDidMount();\n        if (this.state.patcher) {\n            const Editor = this.editor.constructor as typeof PatcherEditor;\n            const editor = new Editor(this.object._.patcher);\n            this.setState({ editor });\n            editor.init();\n            editor.on(\"changed\", this.handleChanged);\n        }\n    }\n    componentDidUpdate(prevProps: any, prevState: Readonly<SubPatcherUIState & BaseUIState>) {\n        if (prevState.patcher !== this.state.patcher) {\n            if (this.state.editor) {\n                this.state.editor.off(\"changed\", this.handleChanged);\n                this.state.editor.destroy();\n            }\n            if (this.state.patcher) {\n                const Editor = this.editor.constructor as typeof PatcherEditor;\n                const editor = new Editor(this.object._.patcher);\n                this.setState({ timestamp: performance.now(), editor });\n                editor.init();\n                editor.on(\"changed\", this.handleChanged);\n            } else {\n                this.setState({ timestamp: performance.now(), editor: undefined });\n            }\n        }\n    }\n    componentWillUnmount() {\n        this.state.editor?.off(\"changed\", this.handleChanged);\n        super.componentWillUnmount();\n    }\n    static dockable = true;\n    render() {\n        if (this.props.inDock) {\n            return (\n                <div style={{ height: \"100%\", width: \"100%\", display: \"flex\" }}>\n                    {\n                        this.state.editor\n                            ? <PatcherEditorUI key={this.state.timestamp} editor={this.state.editor} env={this.env} lang={this.env.language} />\n                            : undefined\n                    }\n                </div>\n            );\n        }\n        const children = (\n            <div style={{ height: \"100%\", width: \"100%\", display: \"flex\" }}>\n                {\n                    this.state.editor\n                        ? <PatcherUI key={this.state.timestamp} editor={this.state.editor} transparent runtime />\n                        : undefined\n                }\n            </div>\n        );\n        return <BaseUI {...this.props} children={children} />;\n    }\n}\n","import PatcherAudio from \"../../audio/PatcherAudio\";\nimport Bang, { isBang } from \"../base/Bang\";\nimport DefaultObject from \"../base/DefaultObject\";\nimport BufferUI, { BufferUIState } from \"./BufferUI\";\nimport type { ProjectFileEventMap } from \"../../file/AbstractProjectFile\";\nimport type PersistentProjectFile from \"../../file/PersistentProjectFile\";\nimport type TempAudioFile from \"../../audio/TempAudioFile\";\nimport type { IArgsMeta, IInletsMeta, IOutletsMeta } from \"../base/AbstractObject\";\n\ninterface IS {\n    key: string;\n    audio: PatcherAudio;\n    file: PersistentProjectFile | TempAudioFile;\n    numberOfChannels: number;\n    length: number;\n    sampleRate: number;\n}\n\nexport default class Buffer extends DefaultObject<{}, {}, [Bang | File | ArrayBuffer | AudioBuffer | PatcherAudio, File | ArrayBuffer | AudioBuffer | PatcherAudio, string | number], [PatcherAudio, Bang], [string | number, number, number, number], {}, BufferUIState> {\n    static package = \"WebAudio\";\n    static icon = \"volume up\" as const;\n    static author = \"Fr0stbyteR\";\n    static version = \"1.0.0\";\n    static description = \"Audio File Decoder\";\n    static inlets: IInletsMeta = [{\n        isHot: true,\n        type: \"anything\",\n        description: \"Bang to output stored buffer, file to decode, AudioBuffer or PatcherAudio to store then output it as PatcherAudio.\"\n    }, {\n        isHot: false,\n        type: \"anything\",\n        description: \"File to decode, AudioBuffer or PatcherAudio to store the buffer.\"\n    }, {\n        isHot: false,\n        type: \"anything\",\n        description: \"Set variable name.\"\n    }];\n    static outlets: IOutletsMeta = [{\n        type: \"anything\",\n        description: \"PatcherAudio\"\n    }, {\n        type: \"bang\",\n        description: \"Output a bang while the PatcherAudio buffer object is loaded/changed.\"\n    }];\n    static args: IArgsMeta = [{\n        type: \"anything\",\n        optional: true,\n        description: \"Variable name\"\n    }, {\n        type: \"number\",\n        optional: true,\n        description: \"Initialize buffer's number of channels\"\n    }, {\n        type: \"number\",\n        optional: true,\n        description: \"Initialize buffer's length in samples\"\n    }, {\n        type: \"number\",\n        optional: true,\n        description: \"Initialize buffer's sample rate\"\n    }];\n    static UI = BufferUI;\n    _: IS = { key: this.box.args[0]?.toString(), audio: undefined, file: undefined, numberOfChannels: 1, length: this.audioCtx.sampleRate, sampleRate: this.audioCtx.sampleRate };\n    subscribe() {\n        super.subscribe();\n        const assertBuffer = (audio: PatcherAudio) => {\n            if (!audio) return false;\n            const { numberOfChannels, length, sampleRate } = this._;\n            return audio.numberOfChannels === numberOfChannels && audio.length === length && audio.sampleRate === sampleRate;\n        };\n        const handleFilePathChanged = () => {\n            this._.key = this._.file?.projectPath;\n        };\n        const handleSaved = async (e: ProjectFileEventMap[\"saved\"]) => {\n            if (e.instance === this._.audio) return;\n            await reload();\n        };\n        const subsribeItem = async () => {\n            const { audio, file } = this._;\n            await audio.addObserver(this);\n            if (file) {\n                file.on(\"destroyed\", reload);\n                file.on(\"nameChanged\", handleFilePathChanged);\n                file.on(\"pathChanged\", handleFilePathChanged);\n                file.on(\"saved\", handleSaved);\n            }\n        };\n        const unsubscribeItem = async () => {\n            const { audio, file } = this._;\n            if (file) {\n                file.off(\"destroyed\", reload);\n                file.off(\"nameChanged\", handleFilePathChanged);\n                file.off(\"pathChanged\", handleFilePathChanged);\n                file.off(\"saved\", handleSaved);\n            }\n            await audio.removeObserver(this);\n        };\n        const reload = async () => {\n            if (this._.audio) await unsubscribeItem();\n            const { key } = this._;\n            let audio: PatcherAudio;\n            try {\n                const { item, newItem } = await this.getSharedItem(key, \"audio\", async () => {\n                    const { numberOfChannels, length, sampleRate } = this._;\n                    audio = await PatcherAudio.fromSilence({ env: this.env, project: this.patcher.project }, numberOfChannels, length, sampleRate);\n                    return audio;\n                });\n                if (newItem) {\n                    audio.file = item;\n                } else {\n                    audio = await item.instantiate({ env: this.env, project: this.patcher.project }) as PatcherAudio;\n                }\n                this._.audio = audio;\n                this._.file = item;\n                this.updateUI({ audio });\n            } catch (error) {\n                this.error(error);\n            } finally {\n                await subsribeItem();\n                this.outlet(1, new Bang());\n            }\n        };\n        this.on(\"preInit\", () => {\n            this.inlets = 3;\n            this.outlets = 2;\n        });\n        this.on(\"updateArgs\", (args) => {\n            if (!this._.audio) return;\n            const oldKey = this._.key;\n            const key = args[0]?.toString();\n            const numberOfChannels = typeof args[1] === \"number\" ? ~~args[1] : 1;\n            const length = typeof args[2] === \"number\" ? ~~args[2] : this.audioCtx.sampleRate;\n            const sampleRate = typeof args[3] === \"number\" ? ~~args[3] : this.audioCtx.sampleRate;\n            Object.assign(this._, { key, numberOfChannels, length, sampleRate });\n            if (key !== oldKey || !assertBuffer(this._.audio)) {\n                reload();\n            }\n        });\n        this.on(\"postInit\", reload);\n        this.on(\"inlet\", async ({ data, inlet }) => {\n            if (inlet === 0) {\n                if (!isBang(data)) {\n                    if (data instanceof PatcherAudio) {\n                        this._.audio.setAudio(data);\n                    } else if (data instanceof AudioBuffer) {\n                        const audio = await PatcherAudio.fromNativeAudioBuffer({ env: this.env, project: this.patcher.project }, data);\n                        this._.audio.setAudio(audio);\n                    } else {\n                        let audioBuffer: AudioBuffer;\n                        try {\n                            const ab = data instanceof ArrayBuffer ? data : await (data as File).arrayBuffer();\n                            audioBuffer = await this.patcher.audioCtx.decodeAudioData(ab);\n                        } catch (e) {\n                            this.error(\"Decode File failed.\");\n                            return;\n                        }\n                        const audio = await PatcherAudio.fromNativeAudioBuffer({ env: this.env, project: this.patcher.project }, audioBuffer);\n                        this._.audio.setAudio(audio);\n                    }\n                }\n                this.outlet(0, this._.audio);\n            } else if (inlet === 1) {\n                if (data instanceof PatcherAudio) {\n                    this._.audio.setAudio(data);\n                } else if (data instanceof AudioBuffer) {\n                    const audio = await PatcherAudio.fromNativeAudioBuffer({ env: this.env, project: this.patcher.project }, data);\n                    this._.audio.setAudio(audio);\n                } else {\n                    let audioBuffer: AudioBuffer;\n                    try {\n                        const ab = data instanceof ArrayBuffer ? data : await (data as File).arrayBuffer();\n                        audioBuffer = await this.patcher.audioCtx.decodeAudioData(ab);\n                    } catch (e) {\n                        this.error(\"Decode File failed.\");\n                        return;\n                    }\n                    const audio = await PatcherAudio.fromNativeAudioBuffer({ env: this.env, project: this.patcher.project }, audioBuffer);\n                    this._.audio.setAudio(audio);\n                }\n            } else if (inlet === 2) {\n                if (typeof data === \"string\" || typeof data === \"number\") {\n                    this._.key = data?.toString();\n                    reload();\n                }\n            }\n        });\n        this.on(\"destroy\", unsubscribeItem);\n    }\n}\n","import * as React from \"react\";\nimport { Modal, StrictModalProps } from \"semantic-ui-react\";\nimport AudioEditorUI from \"../../../components/editors/audio/AudioEditorUI\";\nimport AudioEditor from \"../../audio/AudioEditor\";\nimport DefaultPopupUI, { DefaultPopupUIState, DefaultPopupUIProps } from \"../base/DefaultPopupUI\";\nimport type PatcherAudio from \"../../audio/PatcherAudio\";\nimport type Buffer from \"./Buffer\";\n\nexport interface BufferUIState {\n    audio: PatcherAudio;\n    timestamp: number;\n    editor: AudioEditor;\n    dockEditor: AudioEditor;\n}\n\nexport default class BufferUI extends DefaultPopupUI<Buffer, {}, BufferUIState> {\n    state: BufferUIState & DefaultPopupUIState = {\n        ...this.state,\n        audio: this.object._.audio,\n        timestamp: performance.now(),\n        editor: undefined,\n        dockEditor: undefined\n    };\n    static dockable = true;\n    async loadEditor() {\n        const key = this.props.inDock ? \"editor\" : \"dockEditor\";\n        const editor = new AudioEditor(this.object._.audio);\n        await editor.init();\n        editor.on(\"changed\", this.handleChanged);\n        this.setState({ timestamp: performance.now(), [key as \"editor\"]: editor }, () => editor.setActive());\n    }\n    unloadEditor() {\n        const key = this.props.inDock ? \"editor\" : \"dockEditor\";\n        const editor = this.state[key];\n        if (!editor) return;\n        editor.off(\"changed\", this.handleChanged);\n        editor.destroy();\n        this.setState({ timestamp: performance.now(), [key as \"editor\"]: undefined }, () => this.props.editor.setActive());\n    }\n    handleChanged = () => {\n        const editor = this.props.inDock ? this.state.editor : this.state.dockEditor;\n        if (editor.isTemporary) editor.save();\n    };\n    handleDoubleClick = async () => {\n        if (!this.editor.state.locked) return;\n        if (!this.state.audio) return;\n        this.unloadEditor();\n        await this.loadEditor();\n        this.setState({ modalOpen: true });\n    };\n    handleClose = () => {\n        this.unloadEditor();\n        this.setState({ modalOpen: false });\n    };\n    handleMouseDownModal = (e: React.MouseEvent) => e.stopPropagation();\n    componentDidMount() {\n        super.componentDidMount();\n        if (this.props.inDock) this.loadEditor();\n    }\n    componentDidUpdate(prevProps: Readonly<DefaultPopupUIProps>, prevState: Readonly<BufferUIState & DefaultPopupUIState>) {\n        const key = this.props.inDock ? \"editor\" : \"dockEditor\";\n        const editor = this.state[key];\n        if (prevState.audio !== this.state.audio) {\n            if (editor) {\n                this.unloadEditor();\n                this.loadEditor();\n            }\n        }\n        if (prevProps.inDock !== this.props.inDock) {\n            if (this.props.inDock) {\n                this.loadEditor();\n            } else {\n                if (editor) {\n                    this.unloadEditor();\n                }\n            }\n        }\n        if (editor) {\n            if (prevState.width !== this.state.width || prevState.height !== this.state.height) {\n                editor.onUiResized();\n            }\n        }\n        super.componentDidUpdate(prevProps, prevState);\n    }\n    componentWillUnmount() {\n        this.unloadEditor();\n        super.componentWillUnmount();\n    }\n    render() {\n        const editor = this.props.inDock ? this.state.editor : this.state.dockEditor;\n        const content = <div className=\"editor-container\" style={{ height: \"100%\", width: \"100%\", display: \"flex\", position: \"relative\" }}>\n            {\n                editor\n                    ? <AudioEditorUI key={this.state.timestamp} editor={editor} env={this.env} lang={this.env.language} />\n                    : undefined\n            }\n        </div>;\n        const children = (\n            <Modal.Content style={{ height: \"100%\", width: \"100%\", position: \"relative\" }} onMouseDown={this.handleMouseDownModal}>\n                {content}\n            </Modal.Content>\n        );\n        if (this.props.inDock) return children;\n        const containerProps = { ...this.props.containerProps };\n        if (!containerProps.onDoubleClick) containerProps.onDoubleClick = this.handleDoubleClick;\n        const modalProps: StrictModalProps & { onKeyDown: any } = { ...this.props.modalProps, children, className: \"audio-editor\", open: this.state.modalOpen, onClose: this.handleClose, onKeyDown: undefined, basic: true, size: \"fullscreen\", closeIcon: true };\n        return <DefaultPopupUI {...this.props} modalProps={modalProps} containerProps={containerProps} />;\n    }\n}\n","import SubPatcher from \"./SubPatcher\";\nimport type Patcher from \"../../patcher/Patcher\";\n// import type { RawPatcher } from \"../../types\";\nimport type { IArgsMeta, IJSPatcherObjectMeta } from \"../base/AbstractObject\";\nimport type PatcherNode from \"../../worklets/PatcherNode\";\n\nexport default class DspSubPatcher extends SubPatcher {\n    static args: IArgsMeta = [{\n        type: \"string\",\n        optional: true,\n        default: \"\",\n        description: \"Name of the subpatcher\"\n    }, {\n        type: \"number\",\n        optional: true,\n        default: 2,\n        description: \"Inputs\"\n    }, {\n        type: \"number\",\n        optional: true,\n        default: 2,\n        description: \"Outputs\"\n    }];\n    type = \"jsaw\" as const;\n    _: SubPatcher[\"_\"] & { node: PatcherNode } = { ...this._, node: undefined };\n    reload = async () => {\n        if (this._.patcher) {\n            this.disconnectAudio();\n            await this.unsubscribePatcher();\n        }\n        // const { key } = this._;\n        let patcher: Patcher;\n        // let rawPatcher: RawPatcher;\n        try {\n            patcher = new this.Patcher({ env: this.patcher.env, project: this.patcher.project });\n            await patcher.load(this.data, this.type);\n            this._.node = await patcher.getPatcherNode(~~+this.args[1] || 2, ~~+this.args[2] || 2);\n            this._.patcher = patcher;\n            this.updateUI({ patcher });\n        } catch (error) {\n            this.error(error);\n        } finally {\n            this.handlePatcherIOChanged(this._.patcher.meta);\n            this.subscribePatcher();\n            this.handlePatcherGraphChanged();\n            this.connectAudio();\n        }\n    };\n    handlePatcherChanged = () => {\n        const rawPatcher = this._.patcher.toSerializable();\n        this.setData(rawPatcher);\n        this.patcher.emit(\"changed\");\n    };\n    handlePatcherIOChanged = (meta: IJSPatcherObjectMeta) => {\n        this.inlets = meta.inlets.length;\n        this.outlets = meta.outlets.length;\n        const { inlets, outlets } = meta;\n        const { node } = this._;\n        this.inletAudioConnections = new Array(this.inlets).fill(null).map((v, index) => ({ node, index }));\n        this.outletAudioConnections = new Array(this.outlets).fill(null).map((v, index) => ({ node, index }));\n        this.setMeta({ ...this.meta, inlets, outlets, args: SubPatcher.args });\n    };\n}\n","import FaustNode, { FaustNodeInternalState } from \"../faust/FaustNode\";\nimport SubPatcherUI from \"./SubPatcherUI\";\nimport type Patcher from \"../../patcher/Patcher\";\nimport type { ProjectFileEventMap } from \"../../file/AbstractProjectFile\";\nimport type { RawPatcher } from \"../../types\";\nimport type { IJSPatcherObjectMeta } from \"../base/AbstractObject\";\n\ninterface InternalState extends FaustNodeInternalState {\n    patcher: Patcher;\n    key: string;\n    voices: number;\n    code: string;\n}\nexport default class FaustPatcher extends FaustNode<Partial<RawPatcher>, {}, [string, number], { patcher: Patcher }> {\n    static package = \"SubPatcher\";\n    static description = \"Faust Sub-patcher, compiled to AudioNode\";\n    static args: IJSPatcherObjectMeta[\"args\"] = [{\n        type: \"string\",\n        optional: true,\n        default: \"\",\n        description: \"Name of the subpatcher\"\n    }, {\n        type: \"number\",\n        optional: true,\n        default: 0,\n        description: \"Polyphonic instrument voices count\"\n    }];\n    static UI = SubPatcherUI;\n    _: InternalState = {\n        merger: undefined,\n        splitter: undefined,\n        node: undefined,\n        patcher: undefined,\n        key: this.box.args[0],\n        code: undefined,\n        voices: ~~Math.max(0, this.box.args[1])\n    };\n    type: \"faust\" | \"gen\" = \"faust\";\n    handleFilePathChanged = () => {\n        this._.key = this._.patcher.file.projectPath;\n    };\n    handleSaved = (e: ProjectFileEventMap[\"saved\"]) => {\n        if (e.instance === this._.patcher) return;\n        this.reload();\n    };\n    subscribePatcher = async () => {\n        const { patcher } = this._;\n        if (patcher) {\n            await patcher.addObserver(this);\n            patcher.on(\"graphChanged\", this.handleGraphChanged);\n            patcher.on(\"changed\", this.handlePatcherChanged);\n            const { file } = patcher;\n            if (file) {\n                file.on(\"destroyed\", this.reload);\n                file.on(\"nameChanged\", this.handleFilePathChanged);\n                file.on(\"pathChanged\", this.handleFilePathChanged);\n                file.on(\"saved\", this.handleSaved);\n            }\n        }\n    };\n    unsubscribePatcher = async () => {\n        const { patcher } = this._;\n        if (patcher) {\n            patcher.off(\"graphChanged\", this.handleGraphChanged);\n            patcher.off(\"changed\", this.handlePatcherChanged);\n            const { file } = patcher;\n            if (file) {\n                file.off(\"destroyed\", this.reload);\n                file.off(\"nameChanged\", this.handleFilePathChanged);\n                file.off(\"pathChanged\", this.handleFilePathChanged);\n                file.off(\"saved\", this.handleSaved);\n            }\n            await patcher.removeObserver(this); // patcher will be destroyed if no observers left.\n        }\n    };\n    async compilePatcher() {\n        const code = this._.patcher.toFaustDspCode();\n        if (code && code !== this._.code) {\n            this._.code = code;\n            await this.newNode(code, this._.voices);\n        }\n    }\n    handleGraphChanged = async () => {\n        await this.compilePatcher();\n        this.patcher.emit(\"graphChanged\");\n    };\n    handlePatcherChanged = () => {\n        const { patcher } = this._;\n        if (patcher.isTemporary) {\n            const rawPatcher = patcher.toSerializable();\n            this.setData(rawPatcher);\n        }\n        this.patcher.emit(\"changed\");\n    };\n    reload = async () => {\n        if (this._.patcher) {\n            this.disconnectAudio();\n            await this.unsubscribePatcher();\n        }\n        const { key } = this._;\n        let patcher: Patcher;\n        let rawPatcher: RawPatcher;\n        try {\n            const { item, newItem } = await this.getSharedItem(key, \"patcher\", async () => {\n                patcher = new this.Patcher({ env: this.patcher.env, project: this.patcher.project });\n                await patcher.load(this.data, this.type);\n                rawPatcher = patcher.toSerializable();\n                return rawPatcher;\n            });\n            if (newItem) {\n                patcher.file = item;\n                this.setData(rawPatcher);\n            } else {\n                patcher = await item.instantiate({ env: this.patcher.env, project: this.patcher.project }) as Patcher;\n                this.setData(patcher.toSerializable());\n            }\n            this._.patcher = patcher;\n            this.updateUI({ patcher });\n        } catch (error) {\n            this.error(error);\n        } finally {\n            await this.subscribePatcher();\n            await this.handleGraphChanged();\n            this.connectAudio();\n        }\n    };\n    handlePreInit = () => {};\n    handleUpdateArgs = async (args: Partial<[string, number]>): Promise<void> => {\n        if (!this._.patcher) return;\n        const { voices, key } = this._;\n        let newKey = key;\n        let newVoices = voices;\n        if (typeof args[0] === \"string\" || typeof args[0] === \"undefined\") {\n            newKey = args[0];\n            if (newKey !== key) this._.key = newKey;\n        }\n        if (typeof args[1] === \"number\") {\n            newVoices = ~~Math.max(0, args[1]);\n            this._.voices = newVoices;\n        }\n        if (newKey !== key) {\n            await this.reload();\n        } else if (newVoices !== voices) {\n            this.disconnectAudio();\n            await this.compilePatcher();\n            this.connectAudio();\n        }\n    };\n    handlePostInit = this.reload;\n    subscribe() {\n        super.subscribe();\n        this.on(\"destroy\", this.unsubscribePatcher);\n    }\n}\n","import FaustPatcher from \"./FaustPatcher\";\n\nexport default class GenPatcher extends FaustPatcher {\n    static description = \"Gen Sub-patcher, compiled to AudioNode\";\n    type: \"faust\" | \"gen\" = \"gen\";\n}\n","import generateDefaultObject from \"../base/generateDefaultObject\";\nimport In from \"../jsaw/In\";\nimport type BaseObject from \"../base/BaseObject\";\n\nexport default generateDefaultObject(In as typeof BaseObject);\n","import generateDefaultObject from \"../base/generateDefaultObject\";\nimport Out from \"../jsaw/Out\";\nimport type BaseObject from \"../base/BaseObject\";\n\nexport default generateDefaultObject(Out as typeof BaseObject);\n","import TransmitterNode from \"../../worklets/Transmitter\";\nimport PatcherAudio from \"../../audio/PatcherAudio\";\nimport OperableAudioBuffer from \"../../audio/OperableAudioBuffer\";\nimport DefaultObject from \"../base/DefaultObject\";\nimport type { IInletsMeta, IOutletsMeta, IPropsMeta } from \"../base/AbstractObject\";\n\ntype I = [boolean | number | PatcherAudio, boolean, number, number];\ninterface P {\n    mono: boolean;\n    channelOffset: number;\n    loop: boolean;\n    loopStart: number;\n    loopEnd: number;\n    append: boolean;\n}\ninterface IS {\n    dummyNode: ConstantSourceNode;\n    node: TransmitterNode;\n    audio: PatcherAudio;\n    // overwrittenAudio: PatcherAudio;\n    recording: boolean;\n    $: number;\n    $start: number;\n    $end: number;\n    inPlace: boolean;\n}\n\nexport default class Record extends DefaultObject<{}, {}, I, [number], [], P> {\n    static description = \"Record audio into an audio buffer\";\n    static icon = \"volume up\" as const;\n    static inlets: IInletsMeta = [{\n        isHot: true,\n        type: \"signal\",\n        description: \"signal to record, boolean/number to start/stop, AudioBuffer/PatcherAudio to set buffer\"\n    }, {\n        isHot: false,\n        type: \"boolean\",\n        description: \"loop\"\n    }, {\n        isHot: false,\n        type: \"number\",\n        description: \"loopStart (seconds)\"\n    }, {\n        isHot: false,\n        type: \"number\",\n        description: \"loopEnd (seconds)\"\n    }];\n    static outlets: IOutletsMeta = [{\n        type: \"number\",\n        description: \"sample index writted\"\n    }];\n    static props: IPropsMeta<P> = {\n        mono: {\n            type: \"boolean\",\n            default: false,\n            description: \"Record only one channel\"\n        },\n        channelOffset: {\n            type: \"number\",\n            default: 0,\n            description: \"Record into channels with offset\"\n        },\n        loop: {\n            type: \"boolean\",\n            default: false,\n            description: \"Initial loop, Indicates if the region of audio data designated by loopStart and loopEnd should be played continuously in a loop\"\n        },\n        loopStart: {\n            type: \"number\",\n            default: 0,\n            description: \"An optional playhead position where looping should begin if the loop attribute is true. If <=0 or > duration, loop will end at the end of the buffer.\"\n        },\n        loopEnd: {\n            type: \"number\",\n            default: 0,\n            description: \"An optional playhead position where looping should end if the loop attribute is true. If <=0 or > duration, loop will end at the end of the buffer.\"\n        },\n        append: {\n            type: \"boolean\",\n            default: false,\n            description: \"Allows buffer to growth when recording exceeds the end.\"\n        }\n    };\n    set node(nodeIn: TransmitterNode) {\n        this._.node = nodeIn;\n    }\n    get node() {\n        return this._.node;\n    }\n    _: IS = {\n        node: undefined,\n        audio: undefined,\n        dummyNode: this.audioCtx.createConstantSource(),\n        // overwrittenAudio: undefined,\n        recording: false,\n        $: 0,\n        $start: 0,\n        $end: 0,\n        inPlace: true\n    };\n    handleReceiveBuffer = async (bufferIn: Float32Array[], $total: number) => {\n        if (!this._.recording) return;\n        const { $, audio } = this._;\n        const { length, numberOfChannels, sampleRate } = audio;\n        const mono = this.getProp(\"mono\");\n        const channelOffset = this.getProp(\"channelOffset\");\n        const loop = this.getProp(\"loop\");\n        const append = this.getProp(\"append\");\n        const $start = loop ? this.getProp(\"loopStart\") : 0;\n        if ($start >= length) return;\n        const $end = loop ? Math.max($start, this.getProp(\"loopEnd\")) : length;\n        if ($end === $start) return;\n        const range = $end - $start;\n        const bufferSize = bufferIn[0].length;\n        if (mono) bufferIn.splice(1);\n        if (channelOffset) bufferIn.unshift(...new Array(channelOffset));\n        const $target = $ + bufferSize;\n        if (append && !loop && $target > $end) { // extend current buffer\n            const newLength = 2 ** Math.ceil(Math.log(length + sampleRate) / Math.log(2));\n            const newBuffer = new OperableAudioBuffer({ numberOfChannels, length: newLength, sampleRate });\n            for (let i = 0; i < numberOfChannels; i++) {\n                const channel = newBuffer.getChannelData(i);\n                channel.set(audio.audioBuffer.getChannelData(i));\n                if (bufferIn[i]) channel.set(bufferIn[i], $);\n            }\n            audio.audioBuffer = newBuffer;\n            audio.waveform.update($, newLength);\n            this._.$ = $target;\n        } else {\n            for (let i = 0; i < numberOfChannels; i++) {\n                const channel = audio.audioBuffer.getChannelData(i);\n                if (bufferIn[i]) {\n                    if ($target > $end) {\n                        if (loop) {\n                            const $copyEnd = $start + (($ - $start + bufferSize) % range);\n                            const buffer = bufferSize > range ? bufferIn[i].subarray(bufferSize - range) : bufferIn[i];\n                            const $sSplit = buffer.length - ($copyEnd - $start);\n                            channel.set(buffer.subarray($sSplit), $start);\n                            channel.set(buffer.subarray(0, $sSplit), $);\n                            this._.$ = $copyEnd;\n                            audio.waveform.update($, $end);\n                            audio.waveform.update($start, $copyEnd);\n                        } else {\n                            channel.set(bufferIn[i].subarray(0, $end - $), $);\n                            this._.$ = $end;\n                            audio.waveform.update($, $end);\n                        }\n                    } else {\n                        channel.set(bufferIn[i], $);\n                        this._.$ = $target;\n                        audio.waveform.update($, $target);\n                    }\n                }\n            }\n        }\n        audio.emit(\"setAudio\");\n        audio.emit(\"changed\");\n        this.outlet(0, this._.$);\n        if (!append && !loop && this._.$ === $end) {\n            await this.stop();\n        }\n    };\n    async start() {\n        if (!this.node) return false;\n        this._.$ = this.getProp(\"loop\") ? this.getProp(\"loopStart\") : 0;\n        this._.recording = true;\n        await this.node.reset();\n        await this.node.start();\n        return true;\n    }\n    async stop() {\n        this._.recording = false;\n        if (!this.node) return;\n        await this.node.stop();\n        const { inPlace, $, $end } = this._;\n        if (!inPlace && $ > $end && $ < this._.audio.length) {\n            const [audio] = await this._.audio.split($);\n            this._.audio.setAudio(audio);\n        }\n    }\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 4;\n            this.outlets = 1;\n        });\n        this.on(\"postInit\", async () => {\n            await TransmitterNode.register(this.audioCtx.audioWorklet);\n            const node = new TransmitterNode(this.audioCtx);\n            node.handleReceiveBuffer = this.handleReceiveBuffer;\n            this.node = node;\n            this._.dummyNode.offset.value = 0;\n            this._.dummyNode.connect(this.node);\n            this._.dummyNode.start();\n            this.disconnectAudioInlet();\n            this.inletAudioConnections = [{ node: this.node, index: 0 }];\n            this._.node = node;\n            this.connectAudioInlet();\n        });\n        this.on(\"inlet\", async ({ data, inlet }) => {\n            if (inlet === 0) {\n                if (typeof data === \"boolean\" || typeof data === \"number\") {\n                    if (data) {\n                        if (!this._.recording) {\n                            await this.start();\n                        }\n                    } else {\n                        if (this._.recording) {\n                            await this.stop();\n                        }\n                    }\n                } else if (data instanceof PatcherAudio) {\n                    this._.audio = data;\n                }\n            } else if (inlet === 1) {\n                if (typeof data === \"boolean\" || typeof data === \"number\") {\n                    this.setProps({ loop: !!data });\n                }\n            } else if (inlet === 2) {\n                if (typeof data === \"number\") {\n                    this.setProps({ loopStart: data });\n                }\n            } else if (inlet === 3) {\n                if (typeof data === \"number\") {\n                    this.setProps({ loopEnd: data });\n                }\n            }\n        });\n        this.on(\"destroy\", async () => {\n            this._.dummyNode.disconnect();\n            if (this._.recording) await this.stop();\n            await this.node.destroy();\n        });\n    }\n}\n","import DefaultObject from \"../base/DefaultObject\";\nimport SubPatcherUI, { SubPatcherUIState } from \"./SubPatcherUI\";\nimport type { ProjectFileEventMap } from \"../../file/AbstractProjectFile\";\nimport type Patcher from \"../../patcher/Patcher\";\nimport type { PatcherEventMap } from \"../../patcher/Patcher\";\nimport type { RawPatcher, PatcherMode } from \"../../types\";\nimport type { IArgsMeta, IJSPatcherObjectMeta } from \"../base/AbstractObject\";\n\nexport default class SubPatcher extends DefaultObject<Partial<RawPatcher>, {}, any[], any[], [string, ...number[]], {}, SubPatcherUIState> {\n    static package = \"SubPatcher\";\n    static description = \"Sub-patcher\";\n    static args: IArgsMeta = [{\n        type: \"string\",\n        optional: true,\n        default: \"\",\n        description: \"Name of the subpatcher\"\n    }];\n    static UI = SubPatcherUI;\n    _ = { patcher: undefined as Patcher, key: this.box.args[0] };\n    type: PatcherMode = \"js\";\n    handlePatcherOutput = ({ outlet, data }: PatcherEventMap[\"dataOutput\"]) => this.outlet(outlet, data);\n    handlePatcherDisconnectAudioInlet = (port: number) => this.disconnectAudioInlet(port);\n    handlePatcherDisconnectAudioOutlet = (port: number) => this.disconnectAudioOutlet(port);\n    handlePatcherConnectAudioInlet = (port: number) => this.connectAudioInlet(port);\n    handlePatcherConnectAudioOutlet = (port: number) => this.connectAudioOutlet(port);\n    handlePatcherIOChanged = (meta: IJSPatcherObjectMeta) => {\n        this.inletAudioConnections = this._.patcher.inletAudioConnections.slice();\n        this.outletAudioConnections = this._.patcher.outletAudioConnections.slice();\n        this.inlets = meta.inlets.length;\n        this.outlets = meta.outlets.length;\n        const { inlets, outlets } = meta;\n        this.setMeta({ ...this.meta, inlets, outlets, args: SubPatcher.args });\n    };\n    handlePatcherGraphChanged = () => {\n        this.patcher.emit(\"graphChanged\");\n    };\n    handlePatcherChanged = () => {\n        const { patcher } = this._;\n        if (patcher.isTemporary) {\n            const rawPatcher = patcher.toSerializable();\n            this.setData(rawPatcher);\n        }\n        this.patcher.emit(\"changed\");\n    };\n    handleFilePathChanged = () => {\n        this._.key = this._.patcher.file.projectPath;\n    };\n    handleSaved = (e: ProjectFileEventMap[\"saved\"]) => {\n        if (e.instance === this._.patcher) return;\n        this.reload();\n    };\n    subscribePatcher = async () => {\n        const { patcher } = this._;\n        if (patcher) {\n            await patcher.addObserver(this);\n            patcher.on(\"dataOutput\", this.handlePatcherOutput);\n            patcher.on(\"disconnectAudioInlet\", this.handlePatcherDisconnectAudioInlet);\n            patcher.on(\"disconnectAudioOutlet\", this.handlePatcherDisconnectAudioOutlet);\n            patcher.on(\"connectAudioInlet\", this.handlePatcherConnectAudioInlet);\n            patcher.on(\"connectAudioOutlet\", this.handlePatcherConnectAudioOutlet);\n            patcher.on(\"ioChanged\", this.handlePatcherIOChanged);\n            patcher.on(\"graphChanged\", this.handlePatcherGraphChanged);\n            patcher.on(\"changed\", this.handlePatcherChanged);\n            const { file } = patcher;\n            if (file) {\n                file.on(\"destroyed\", this.reload);\n                file.on(\"nameChanged\", this.handleFilePathChanged);\n                file.on(\"pathChanged\", this.handleFilePathChanged);\n                file.on(\"saved\", this.handleSaved);\n            }\n        }\n    };\n    unsubscribePatcher = async () => {\n        const { patcher } = this._;\n        if (patcher) {\n            patcher.off(\"dataOutput\", this.handlePatcherOutput);\n            patcher.off(\"disconnectAudioInlet\", this.handlePatcherDisconnectAudioInlet);\n            patcher.off(\"disconnectAudioOutlet\", this.handlePatcherDisconnectAudioOutlet);\n            patcher.off(\"connectAudioInlet\", this.handlePatcherConnectAudioInlet);\n            patcher.off(\"connectAudioOutlet\", this.handlePatcherConnectAudioOutlet);\n            patcher.off(\"ioChanged\", this.handlePatcherIOChanged);\n            patcher.off(\"graphChanged\", this.handlePatcherGraphChanged);\n            patcher.off(\"changed\", this.handlePatcherChanged);\n            const { file } = patcher;\n            if (file) {\n                file.off(\"destroyed\", this.reload);\n                file.off(\"nameChanged\", this.handleFilePathChanged);\n                file.off(\"pathChanged\", this.handleFilePathChanged);\n                file.off(\"saved\", this.handleSaved);\n            }\n            await patcher.removeObserver(this); // patcher will be destroyed if no observers left.\n        }\n    };\n    reload = async () => {\n        if (this._.patcher) {\n            this.disconnectAudio();\n            await this.unsubscribePatcher();\n        }\n        const { key } = this._;\n        let patcher: Patcher;\n        let rawPatcher: RawPatcher;\n        try {\n            const { item, newItem } = await this.getSharedItem(key, \"patcher\", async () => {\n                patcher = new this.Patcher({ env: this.patcher.env, project: this.patcher.project });\n                await patcher.load(this.data, this.type);\n                rawPatcher = patcher.toSerializable();\n                return rawPatcher;\n            });\n            if (newItem) {\n                patcher.file = item;\n                this.setData(rawPatcher);\n            } else {\n                patcher = await item.instantiate({ env: this.patcher.env, project: this.patcher.project }) as Patcher;\n                this.setData(patcher.toSerializable());\n            }\n            this._.patcher = patcher;\n            this.updateUI({ patcher });\n        } catch (error) {\n            this.error(error);\n        } finally {\n            this.handlePatcherIOChanged(this._.patcher.meta);\n            this.subscribePatcher();\n            this.handlePatcherGraphChanged();\n            this.connectAudio();\n        }\n    };\n    subscribe() {\n        super.subscribe();\n        this.on(\"updateArgs\", async (args) => {\n            if (!this._.patcher) return;\n            if (typeof args[0] === \"string\" || typeof args[0] === \"undefined\") {\n                const newKey = args[0];\n                if (newKey !== this._.key) {\n                    this._.key = newKey;\n                    await this.reload();\n                }\n            }\n        });\n        this.on(\"postInit\", this.reload);\n        this.on(\"inlet\", ({ data, inlet }) => this._.patcher.fn(data, inlet));\n        this.on(\"destroy\", this.unsubscribePatcher);\n    }\n}\n","import type { WebAudioModule, WamNode } from \"wamsdk/src/api\";\nimport Bang, { isBang } from \"../base/Bang\";\nimport BaseObject from \"../base/BaseObject\";\nimport DOMUI, { DOMUIState } from \"../base/DOMUI\";\nimport { isMIDIEvent, decodeLine } from \"../../../utils/utils\";\nimport type { TMIDIEvent, TBPF } from \"../../types\";\nimport type { IInletMeta, IOutletMeta, IInletsMeta, IOutletsMeta, IArgsMeta } from \"../base/AbstractObject\";\n\nclass PluginUI extends DOMUI<Plugin> {\n    state: DOMUIState = { ...this.state, children: this.object._.children };\n}\n\nexport interface IS {\n    splitter: ChannelSplitterNode;\n    merger: ChannelMergerNode;\n    node: WamNode;\n    plugin: WebAudioModule;\n    children: ChildNode[];\n}\n\ntype I = [Bang | number | string | TMIDIEvent | Record<string, TBPF>, ...TBPF[]];\ntype O = (null | WamNode)[];\nexport default class Plugin extends BaseObject<{}, {}, I, O, [string], {}, DOMUIState> {\n    static description = \"Dynamically load WebAudioModule\";\n    static inlets: IInletsMeta = [{\n        isHot: true,\n        type: \"anything\",\n        description: \"A bang to output the instance, url to load, or a param-bpf map, or a MIDI event\"\n    }];\n    static outlets: IOutletsMeta = [{\n        type: \"object\",\n        description: \"WebAudioModule instance\"\n    }];\n    static args: IArgsMeta = [{\n        type: \"string\",\n        optional: false,\n        description: \"WebAudioModule URL\"\n    }];\n    static UI = PluginUI;\n    _: IS = { merger: undefined, splitter: undefined, node: undefined, plugin: undefined, children: [] };\n    async load(url: string) {\n        let WAPCtor: typeof WebAudioModule;\n        let plugin: WebAudioModule;\n        try {\n            WAPCtor = (await import(/* webpackIgnore: true */url)).default;\n        } catch (e) {\n            this.error(e.message);\n        }\n        let node: AudioNode;\n        let element: HTMLElement;\n        try {\n            plugin = await WAPCtor.createInstance(this.audioCtx);\n            node = plugin.audioNode;\n            element = await plugin.createGui() as HTMLElement;\n        } catch (e) {\n            if (e) this.error((e as Error).message);\n            return;\n        }\n        this.disconnectAudio();\n        this.handleDestroy();\n        element.style.width = \"100%\";\n        element.style.height = \"100%\";\n        element.style.position = \"absolute\";\n        this._.children = [element];\n        this.updateUI({ children: this._.children });\n        node.channelInterpretation = \"discrete\";\n        const inlets = node.numberOfInputs;\n        const outlets = node.numberOfOutputs;\n        Object.assign(this._, { node, plugin });\n        const Ctor = this.constructor as typeof Plugin;\n        const firstInletMeta = Ctor.inlets[0];\n        const firstInletSignalMeta: IInletMeta = { ...firstInletMeta, type: \"signal\" };\n        const inletMeta: IInletMeta = { isHot: false, type: \"signal\", description: \"Node connection\" };\n        const audioParamInletMeta: IInletMeta = { isHot: false, type: \"number\", description: \": bpf or node connection\" };\n        const outletMeta: IOutletMeta = { type: \"signal\", description: \"Node connection\" };\n        const lastOutletMeta = Ctor.outlets[0];\n        const factoryMeta = Ctor.meta as this[\"meta\"];\n        for (let i = 0; i < inlets; i++) {\n            if (i === 0) factoryMeta.inlets[i] = inlets ? firstInletSignalMeta : firstInletMeta;\n            else factoryMeta.inlets[i] = inletMeta;\n            this.inletAudioConnections[i] = { node, index: i };\n        }\n        for (let i = 0; i < outlets; i++) {\n            factoryMeta.outlets[i] = outletMeta;\n            this.outletAudioConnections[i] = { node, index: i };\n        }\n        factoryMeta.outlets[outlets] = lastOutletMeta;\n        const paramInfo = await plugin.audioNode.getParameterInfo();\n        const params = Object.keys(paramInfo);\n        for (let i = inlets || 1; i < (inlets || 1) + params.length; i++) {\n            const path = params[i - (inlets || 1)];\n            const param = paramInfo[path];\n            const { defaultValue, minValue, maxValue } = param;\n            factoryMeta.inlets[i] = { ...audioParamInletMeta, description: `${path}${audioParamInletMeta.description}: ${defaultValue} (${minValue} - ${maxValue})` };\n        }\n        this.setMeta(factoryMeta);\n        this.inlets = (inlets || 1) + params.length;\n        this.outlets = outlets + 1;\n        this.connectAudio();\n        this.outlet(this.outlets - 1, this._.node);\n    }\n    handleDestroy = () => {\n        const { node, plugin } = this._;\n        if (node) {\n            node.disconnect();\n            node.disconnectEvents();\n        }\n        if (plugin) {\n            plugin.audioNode.destroy();\n            if (this._.children?.[0]) plugin.destroyGui(this._.children[0] as Element);\n        }\n    };\n    handlePreInit = () => undefined as any;\n    handlePostInit = async () => {\n        await this.handleUpdateArgs(this.args);\n    };\n    handleUpdateArgs = async (args: Partial<[string]>): Promise<void> => {\n        if (typeof args[0] === \"string\") await this.load(this.box.args[0]);\n    };\n    handleInlet = async ({ data, inlet }: { data: I[number]; inlet: number }) => {\n        if (inlet === 0) {\n            if (isBang(data)) {\n                if (this._.node) this.outlet(this.outlets - 1, this._.node);\n            } else if (typeof data === \"string\") {\n                await this.load(data);\n            } else if (isMIDIEvent(data)) {\n                const bytes = Array.from(data) as [number, number, number];\n                if (this._.node) this._.node.scheduleEvents({ type: \"wam-midi\", data: { bytes }, time: this.audioCtx.currentTime });\n            } else if (typeof data === \"object\") {\n                if (this._.node) {\n                    for (const key in data) {\n                        try {\n                            const bpf = decodeLine((data as Record<string, TBPF>)[key]);\n                            let t = 0;\n                            bpf.forEach((a) => {\n                                if (a.length > 1) t += a[1];\n                                this._.node.scheduleEvents({ type: \"wam-automation\", data: { id: key, value: a[0], normalized: false }, time: this.audioCtx.currentTime + t });\n                            });\n                            // else this._.node.setParam(key, bpf[bpf.length - 1][0]);\n                        } catch (e) {\n                            this.error(e.message);\n                        }\n                    }\n                }\n            }\n        } else {\n            const con = this.inletAudioConnections[inlet].node;\n            if (con instanceof AudioParam) {\n                try {\n                    const bpf = decodeLine(data as TBPF);\n                    this.applyBPF(con, bpf);\n                } catch (e) {\n                    this.error(e.message);\n                }\n            }\n        }\n    };\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", this.handlePreInit);\n        this.on(\"postInit\", this.handlePostInit);\n        this.on(\"updateArgs\", this.handleUpdateArgs);\n        this.on(\"inlet\", this.handleInlet);\n        this.on(\"destroy\", this.handleDestroy);\n    }\n}\n","import In from \"./In\";\nimport Out from \"./Out\";\nimport AudioIn from \"./AudioIn\";\nimport AudioOut from \"./AudioOut\";\nimport SubPatcher from \"./SubPatcher\";\nimport FaustPatcher from \"./FaustPatcher\";\nimport GenPatcher from \"./GenPatcher\";\nimport BPatcher from \"./BPatcher\";\nimport DspSubPatcher from \"./DspSubPatcher\";\nimport Buffer from \"./Buffer\";\nimport Record from \"./Record\";\nimport Plugin from \"./WebAudioModule\";\n\nexport default async () => ({\n    in: In,\n    out: Out,\n    \"in~\": AudioIn,\n    \"out~\": AudioOut,\n    patcher: SubPatcher,\n    p: SubPatcher,\n    pdsp: DspSubPatcher,\n    faustPatcher: FaustPatcher,\n    pfaust: FaustPatcher,\n    gen: GenPatcher,\n    bpatcher: BPatcher,\n    \"buffer~\": Buffer,\n    \"record~\": Record,\n    \"plugin~\": Plugin\n});\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".patcher div.box-ui > div.package-subpatcher-bpatcher {\\n  position: relative;\\n  height: 100%;\\n  width: 100%; }\\n  .patcher div.box-ui > div.package-subpatcher-bpatcher > div > div.patcher {\\n    overflow: hidden; }\\n\\n.patcher.locked div.box-ui > div.package-subpatcher-bpatcher {\\n  overflow: hidden; }\\n  .patcher.locked div.box-ui > div.package-subpatcher-bpatcher > div > div.patcher {\\n    overflow: hidden; }\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/core/objects/main/BPatcherUI.scss\"],\"names\":[],\"mappings\":\"AAAA;EAEQ,kBAAkB;EAClB,YAAY;EACZ,WAAW,EAAA;EAJnB;IAMY,gBAAgB,EAAA;;AAN5B;EAWY,gBAAgB,EAAA;EAX5B;IAagB,gBAAgB,EAAA\",\"sourcesContent\":[\".patcher {\\n    & div.box-ui > div.package-subpatcher-bpatcher {\\n        position: relative;\\n        height: 100%;\\n        width: 100%;\\n        & > div > div.patcher {\\n            overflow: hidden;\\n        }\\n    }\\n    &.locked {\\n        & div.box-ui > div.package-subpatcher-bpatcher {\\n            overflow: hidden;\\n            & > div > div.patcher {\\n                overflow: hidden;\\n            }\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./BPatcherUI.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./BPatcherUI.scss\";\n       export default content && content.locals ? content.locals : undefined;\n"],"names":["BaseObject","EmptyObject","InvalidObject","Func","New","getIO","func","new","CodePopupUI","isBang","DefaultObject","isMIDIEvent","decodeLine","FaustNodeUI","code","object","setData","newNode","_","voices","data","FaustNode","merger","undefined","splitter","node","args","Math","max","inlet","outlet","outlets","midiMessage","key","bpf","applyBPF","parameters","get","e","error","message","con","inletAudioConnections","AudioParam","disconnect","destroy","getFaustNode","audioCtx","faust","env","getFaust","getNode","useWorklet","compile","Error","channelInterpretation","dspCode","patcher","inlets","getNumInputs","getNumOutputs","createChannelMerger","connect","createChannelSplitter","compiled","disconnectAudio","handleDestroy","Object","assign","Ctor","constructor","firstInletMeta","firstInletSignalMeta","type","inletMeta","isHot","description","audioParamInletMeta","outletMeta","lastOutletMeta","factoryMeta","meta","i","index","outletAudioConnections","audioParams","forEach","v","k","push","length","path","param","defaultValue","minValue","maxValue","setMeta","size","connectAudio","subscribe","on","handlePreInit","handlePostInit","handleUpdateArgs","handleInlet","optional","default","AudioIn","changeIO","box","emitPatcherChangeIO","_duringInit","connectAudioInlet","inspectAudioIO","disconnectAudioInlet","createGain","props","outlet0","AudioOut","state","disconnectAudioOutlet","connectAudioOutlet","inlet0","BPatcherUI","SubPatcher","BPatcher","React","PatcherEditorUI","BaseUI","PatcherUI","timestamp","performance","now","editor","isTemporary","save","componentDidMount","Editor","setState","init","handleChanged","componentDidUpdate","prevProps","prevState","off","componentWillUnmount","render","inDock","height","width","display","language","children","PatcherAudio","Bang","BufferUI","Buffer","toString","audio","file","numberOfChannels","sampleRate","assertBuffer","handleFilePathChanged","projectPath","handleSaved","instance","reload","subsribeItem","addObserver","unsubscribeItem","removeObserver","item","newItem","getSharedItem","fromSilence","project","instantiate","updateUI","oldKey","setAudio","AudioBuffer","fromNativeAudioBuffer","audioBuffer","ab","ArrayBuffer","arrayBuffer","decodeAudioData","Modal","AudioEditorUI","AudioEditor","DefaultPopupUI","dockEditor","locked","unloadEditor","loadEditor","modalOpen","stopPropagation","setActive","onUiResized","content","position","handleMouseDownModal","containerProps","onDoubleClick","handleDoubleClick","modalProps","className","open","onClose","handleClose","onKeyDown","basic","closeIcon","DspSubPatcher","unsubscribePatcher","Patcher","load","getPatcherNode","handlePatcherIOChanged","subscribePatcher","handlePatcherGraphChanged","rawPatcher","toSerializable","emit","Array","fill","map","SubPatcherUI","FaustPatcher","handleGraphChanged","handlePatcherChanged","compilePatcher","newKey","newVoices","toFaustDspCode","GenPatcher","generateDefaultObject","In","Out","TransmitterNode","OperableAudioBuffer","Record","dummyNode","createConstantSource","recording","$","$start","$end","inPlace","bufferIn","$total","mono","getProp","channelOffset","loop","append","range","bufferSize","splice","unshift","$target","newLength","ceil","log","newBuffer","channel","getChannelData","set","waveform","update","$copyEnd","buffer","subarray","$sSplit","stop","nodeIn","start","reset","split","register","audioWorklet","handleReceiveBuffer","offset","value","setProps","loopStart","loopEnd","port","slice","handlePatcherOutput","handlePatcherDisconnectAudioInlet","handlePatcherDisconnectAudioOutlet","handlePatcherConnectAudioInlet","handlePatcherConnectAudioOutlet","fn","DOMUI","PluginUI","Plugin","plugin","disconnectEvents","audioNode","destroyGui","bytes","from","scheduleEvents","time","currentTime","t","a","id","normalized","url","WAPCtor","element","createInstance","createGui","style","numberOfInputs","numberOfOutputs","paramInfo","getParameterInfo","params","keys","in","out","p","pdsp","faustPatcher","pfaust","gen","bpatcher"],"sourceRoot":""}