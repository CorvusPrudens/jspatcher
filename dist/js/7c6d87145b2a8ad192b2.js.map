{"version":3,"sources":["webpack://JSPatcher/./src/core/objects/UI/ButtonUI.tsx","webpack://JSPatcher/./src/core/objects/UI/bpf.tsx","webpack://JSPatcher/./src/core/objects/UI/code.tsx","webpack://JSPatcher/./src/core/objects/UI/exports.ts","webpack://JSPatcher/./src/core/objects/UI/keyboard.tsx","webpack://JSPatcher/./src/core/objects/UI/menu.tsx","webpack://JSPatcher/./src/core/objects/UI/message.ts","webpack://JSPatcher/./src/core/objects/UI/view.ts","webpack://JSPatcher/./src/core/objects/UI/waveform.ts"],"names":["ButtonUI","BaseUI","state","loading","text","props","object","data","React","e","editing","stopPropagation","key","preventDefault","nativeEvent","stopImmediatePropagation","document","execCommand","clipboardData","getData","componentDidMount","toggleEdit","componentDidUpdate","prevProps","toggle","patcher","box","locked","refSpan","current","span","selectOnly","id","setState","textContent","focus","selectElementRange","window","getSelection","removeAllRanges","blur","handleChanged","render","classArray","join","onClick","handleClick","meta","icon","handleMouseDown","handleClickSpan","handlePaste","handleKeyDown","onEditEnd","BPFUI","points","ghostPoint","undefined","refG","style","transformOrigin","requestAnimationFrame","ctrlKey","shiftKey","altKey","metaKey","dragged","svg","currentTarget","left","top","width","height","getBoundingClientRect","normalizedX","clientX","normalizedY","clientY","x","y","denormalizePoint","index","$point","point","getInsertPoint","splice","slice","setData","mouseDown","line","cursor","domain","parentElement","range","i","getAttribute","prev","next","handleMouseMove","rangeMin","rangeMax","rangeInterval","delta","Math","min","max","handleMouseUp","removeEventListener","addEventListener","limits","normalized","circle","normalizePoint","circleX","circleY","abs","on","handleResized","componentWillUnmount","off","yIn","length","exponent","normExp","normalizedPoints","map","font","fontFace","fontSize","fontFamily","textColor","lineColor","pointColor","bgColor","circles","lines","linesEvents","texts","prevX","prevY","textAnchor","textX","textY","textStyle","userSelect","WebkitUserSelect","pointerEvents","fill","push","handleMouseDownCircle","handleDoubleClickCircle","round","handleMouseDownLine","handleMouseMoveLine","ghostCircle","opacity","backgroundColor","handleDoubleClick","bpf","UIObject","subscribe","inlets","outlets","prevRange","prevDomain","getProp","p","scaleClip","updateUI","inlet","Bang","outlet","decodeBPF","error","type","isHot","description","default","isUIState","enums","CodeUI","value","language","editorLoaded","monaco","codeEditor","emit","onDidBlurEditorText","getValue","layout","event","reactMonacoEditor","editorJSX","onKeyDown","onKeyUp","handleKeyUp","handleCodeEditorMount","handleChange","code","args","optional","message","comment","menu","view","keyboard","waveform","KeyboardUI","keys","selected","mode","touches","rect","pageY","velocity","keyTrigger","keyIn","Array","from","changedTouches","forEach","touch","identifier","target","elementFromPoint","handleTouchStartKey","isBlack","blacks","indexOf","to","whiteCount","count","blackKeyColor","whiteKeyColor","keyOnColor","selectedColor","whites","blackStyle","strokeWidth","stroke","whiteStyle","keyOnStyle","selectedStyle","whiteWidthPercentage","blackWidthPercentage","whiteWidth","blackWidth","$white","$key","keyOn","commonProps","values","onMouseDown","handleMouseDownKey","onMouseEnter","handleMouseEnterKey","onTouchStart","onTouchMove","handleTouchMoveKey","onTouchEnd","handleTouchEndKey","touchAction","flushed","flush","Uint8Array","velocityIn","noOutput","v","prevMode","isMIDIEvent","cmd","channel","data1","data2","MenuUI","query","options","found","find","o","isNumberArray","filter","handleQuery","clearable","closeOnBlur","closeOnChange","closeOnEscape","deburr","defaultOpen","defaultValue","direction","disabled","lazyLoad","minCharacters","multiple","noResultsMessage","placeholder","scrolling","search","selectOnBlur","selectOnNavigation","simple","tabIndex","upward","wrapSelection","dropdownProps","update","varLength","MessageUI","handleUpdateArgs","buffer","stringify","parse","JSON","Util","ViewUI","DOMUI","children","template","createElement","innerHTML","content","Element","shadow","containerProps","WaveformUI","CanvasUI","ctx","fullSize","fillStyle","fillRect","paint","interleaved","autoRange","showStats","phosphorColor","hueOffset","gridColor","seperatorColor","bottom","clearRect","t","numberOfChannels","getChannelData","$","channels","l","yFactor","s","j","strokeStyle","vStep","beginPath","setLineDash","gridChannels","channelHeight","moveTo","lineTo","lineWidth","channelColor","$0","$1","$zerox","drawL","gridX","step","Color","shiftHue","toHSL","maxInStep","minInStep","$j","samp","$step","textAlign","textBaseline","fillText","toFixed","sharedDataKey","reload","sharedData","unsubscribe","shared","get","AudioBuffer","toString","selection","zoom","zoomOffset"],"mappings":"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","file":"js/7c6d87145b2a8ad192b2.js","sourcesContent":["import * as React from \"react\";\nimport { Icon } from \"semantic-ui-react\";\nimport { BaseObject } from \"../Base\";\nimport { BaseUI, BaseUIProps, BaseUIState } from \"../BaseUI\";\nimport { selectElementRange } from \"../../../utils/utils\";\n\ntype ButtonUIState = { text: string; loading: boolean } & BaseUIState;\nexport default class ButtonUI<T extends BaseObject<{ text: string }, { editing: boolean }, any, any, any, any, { text: string }>> extends BaseUI<T, {}, ButtonUIState> {\n    state: ButtonUIState = { ...this.state, loading: false, text: this.props.object.data.text };\n    refSpan = React.createRef<HTMLSpanElement>();\n    componentDidMount() {\n        super.componentDidMount();\n        if (this.props.editing) this.toggleEdit(this.props.editing);\n    }\n    componentDidUpdate(prevProps: Readonly<BaseUIProps>) {\n        if (this.props.editing !== prevProps.editing) this.toggleEdit(this.props.editing);\n    }\n    handleChanged = (text: string) => {};\n    toggleEdit(toggle: boolean) {\n        const { patcher, box } = this;\n        if (patcher.state.locked) return;\n        if (!this.refSpan.current) return;\n        const span = this.refSpan.current;\n        if (toggle) {\n            patcher.selectOnly(box.id);\n            this.setState({ text: span.textContent }, () => {\n                span.focus();\n                selectElementRange(span);\n            });\n        } else {\n            window.getSelection().removeAllRanges();\n            span.blur();\n            this.setState({ text: span.textContent });\n            this.handleChanged(span.textContent);\n        }\n    }\n    handleMouseDown = (e: React.MouseEvent) => (this.props.editing ? e.stopPropagation() : null);\n    handleClickSpan = (e: React.MouseEvent) => (this.props.editing ? e.stopPropagation() : null);\n    handleClick = (e: React.MouseEvent) => {};\n    handleKeyDown = (e: React.KeyboardEvent) => { // propagate for parent for focus on boxUI\n        if (!this.props.editing) return;\n        if (e.key === \"Enter\") {\n            e.preventDefault();\n            return;\n        }\n        e.stopPropagation();\n        e.nativeEvent.stopImmediatePropagation();\n    };\n    handlePaste = (e: React.ClipboardEvent) => {\n        if (!this.props.editing) return;\n        e.preventDefault();\n        document.execCommand(\"insertHTML\", false, e.clipboardData.getData(\"text/plain\"));\n    };\n    render() {\n        const { object } = this;\n        const classArray = [\"box-ui-button\", \"ui\", \"button\", \"compact\", \"mini\"];\n        return (\n            <BaseUI {...this.props} additionalClassName={classArray.join(\" \")} containerProps={{ onClick: this.handleClick }}>\n                <div className=\"box-ui-text-container\">\n                    {object.meta.icon ? <Icon inverted={true} loading={this.state.loading} size=\"small\" name={this.state.loading ? \"spinner\" : object.meta.icon} /> : null}\n                    <span contentEditable={this.props.editing} className={\"editable\" + (this.props.editing ? \" editing\" : \"\")} ref={this.refSpan} onMouseDown={this.handleMouseDown} onClick={this.handleClickSpan} onPaste={this.handlePaste} onKeyDown={this.handleKeyDown} onBlur={this.props.onEditEnd} suppressContentEditableWarning={true}>\n                        {this.state.text}\n                    </span>\n                </div>\n            </BaseUI>\n        );\n    }\n}\n","import * as React from \"react\";\nimport UIObject from \"./Base\";\nimport { Bang } from \"../Base\";\nimport { BaseUI, BaseUIState } from \"../BaseUI\";\nimport { TBPF, TStrictBPF, TBPFPoint, TMeta, TPropsMeta } from \"../../types\";\nimport { decodeBPF } from \"../../../utils/utils\";\nimport { normExp, round, scaleClip } from \"../../../utils/math\";\n\ninterface BPFData {\n    points: TStrictBPF;\n}\ninterface BPFUIProps {\n    domain: number;\n    range: [number, number];\n    fontFamily: string;\n    fontSize: number;\n    fontFace: \"regular\" | \"bold\" | \"italic\" | \"bold italic\";\n    textColor: string;\n    pointColor: string;\n    lineColor: string;\n    bgColor: string;\n}\ninterface BPFUIState extends BPFData, BaseUIState, BPFUIProps {\n    ghostPoint: TBPFPoint;\n}\n\nexport class BPFUI<T extends bpf> extends BaseUI<T, {}, BPFUIState> {\n    static sizing = \"both\" as const;\n    static defaultSize: [number, number] = [450, 300];\n    state: BPFUIState = { ...this.state, points: this.object.data.points, ghostPoint: undefined };\n    dragged = false;\n    mouseDown = false;\n    refG = React.createRef<SVGGElement>();\n    handleResized = () => {\n        if (this.refG.current) {\n            this.refG.current.style.transformOrigin = \"0\";\n            requestAnimationFrame(() => this.refG.current.style.transformOrigin = \"center\");\n        }\n    };\n    componentDidMount() {\n        super.componentDidMount();\n        this.box.on(\"rectChanged\", this.handleResized);\n        this.box.on(\"presentationRectChanged\", this.handleResized);\n    }\n    componentWillUnmount() {\n        super.componentWillUnmount();\n        this.box.off(\"rectChanged\", this.handleResized);\n        this.box.off(\"presentationRectChanged\", this.handleResized);\n    }\n    handleMouseMove = () => {\n        this.setState({ ghostPoint: undefined });\n    };\n    handleDoubleClick = (e: React.MouseEvent<SVGSVGElement>) => {\n        if (e.ctrlKey || e.shiftKey || e.altKey || e.metaKey) return;\n        this.dragged = false;\n        const { points } = this.state;\n        const svg = e.currentTarget;\n        let { left, top, width, height } = svg.getBoundingClientRect();\n        left += 0.025 * width;\n        top += 0.025 * height;\n        width *= 0.95;\n        height *= 0.95;\n        const normalizedX = (e.clientX - left) / width;\n        const normalizedY = 1 - (e.clientY - top) / height;\n        const [x, y] = this.denormalizePoint(normalizedX, normalizedY);\n        const { index: $point, point } = this.getInsertPoint(x, y);\n        points.splice($point, 0, point);\n        this.setState({ points: points.slice() });\n        this.object.setData({ points: this.state.points });\n    };\n    handleMouseMoveLine = (e: React.MouseEvent<SVGLineElement>) => {\n        if (this.mouseDown) return;\n        e.stopPropagation();\n        const line = e.currentTarget;\n        if (e.altKey) {\n            line.style.cursor = \"ns-resize\";\n            return;\n        }\n        line.style.cursor = \"unset\";\n        const { domain } = this.state;\n        const svg = line.parentElement.parentElement;\n        let { left, width } = svg.getBoundingClientRect();\n        left += 0.025 * width;\n        width *= 0.95;\n        const normalizedX = (e.clientX - left) / width;\n        const { point } = this.getInsertPoint(normalizedX * domain);\n        this.setState({ ghostPoint: point });\n    };\n    handleMouseDownLine = (e: React.MouseEvent<SVGLineElement>) => {\n        e.stopPropagation();\n        this.dragged = false;\n        this.mouseDown = true;\n        const line = e.currentTarget;\n        const { points, domain, range } = this.state;\n        const svg = line.parentElement.parentElement;\n        let { left, top, width, height } = svg.getBoundingClientRect();\n        left += 0.025 * width;\n        top += 0.025 * height;\n        width *= 0.95;\n        height *= 0.95;\n        if (e.altKey) {\n            const i = +line.getAttribute(\"values\");\n            const prev = points[i];\n            const next = points[i + 1];\n            const { clientY } = e;\n            const handleMouseMove = (e: MouseEvent) => {\n                this.dragged = true;\n                let [rangeMin, rangeMax] = range;\n                if (rangeMin > rangeMax) [rangeMin, rangeMax] = [rangeMax, rangeMin];\n                const rangeInterval = rangeMax - rangeMin;\n                if (!rangeInterval) return;\n                const delta = (e.clientY - clientY) / height * rangeInterval;\n                points[i] = prev.slice() as TBPFPoint;\n                points[i][1] = Math.min(rangeMax, Math.max(rangeMin, prev[1] - delta));\n                if (next) {\n                    points[i + 1] = next.slice() as TBPFPoint;\n                    points[i + 1][1] = Math.min(rangeMax, Math.max(rangeMin, next[1] - delta));\n                }\n                this.setState({ points: points.slice() });\n                this.object.setData({ points: this.state.points });\n            };\n            const handleMouseUp = () => {\n                this.mouseDown = false;\n                document.removeEventListener(\"mousemove\", handleMouseMove);\n                document.removeEventListener(\"mouseup\", handleMouseUp);\n            };\n            document.addEventListener(\"mousemove\", handleMouseMove);\n            document.addEventListener(\"mouseup\", handleMouseUp);\n        } else {\n            const normalizedX = (e.clientX - left) / width;\n            const { index: $point, point } = this.getInsertPoint(normalizedX * domain);\n            const limits = [\n                points[$point - 1][0] / domain * width + left,\n                points[$point] ? points[$point][0] / domain * width + left : left + width\n            ];\n            points.splice($point, 0, point);\n            this.setState({ points: points.slice() });\n            this.object.setData({ points: this.state.points });\n            const handleMouseMove = (e: MouseEvent) => {\n                this.dragged = true;\n                const clientX = Math.max(limits[0], Math.min(limits[1], e.clientX));\n                const clientY = Math.max(top, Math.min(top + height, e.clientY));\n                const normalized = [(clientX - left) / width, 1 - (clientY - top) / height] as const;\n                const [x, y] = this.denormalizePoint(...normalized);\n                const point: TBPFPoint = [x, y, 0];\n                points[$point] = point;\n                this.setState({ points: points.slice() });\n                this.object.setData({ points: this.state.points });\n            };\n            const handleMouseUp = () => {\n                this.mouseDown = false;\n                document.removeEventListener(\"mousemove\", handleMouseMove);\n                document.removeEventListener(\"mouseup\", handleMouseUp);\n            };\n            document.addEventListener(\"mousemove\", handleMouseMove);\n            document.addEventListener(\"mouseup\", handleMouseUp);\n        }\n    };\n    handleMouseDownCircle = (e: React.MouseEvent<SVGCircleElement>) => {\n        e.stopPropagation();\n        this.dragged = false;\n        const { points, domain } = this.state;\n        const circle = e.currentTarget;\n        const svg = circle.parentElement.parentElement;\n        let { left, top, width, height } = svg.getBoundingClientRect();\n        left += 0.05 * width;\n        top += 0.05 * height;\n        width *= 0.9;\n        height *= 0.9;\n        const i = +circle.getAttribute(\"values\");\n        const limits = [\n            points[i - 1] ? points[i - 1][0] / domain * width + left : left,\n            points[i + 1] ? points[i + 1][0] / domain * width + left : left + width\n        ];\n        const [x, y] = this.normalizePoint(points[i][0], points[i][1]);\n        const circleX = left + x * width;\n        const circleY = top + (1 - y) * height;\n        const handleMouseMove = (e: MouseEvent) => {\n            this.dragged = true;\n            const clientX = Math.max(limits[0], Math.min(limits[1], e.shiftKey || Math.abs(circleX - e.clientX) > 5 ? e.clientX : circleX));\n            const clientY = Math.max(top, Math.min(top + height, e.shiftKey || Math.abs(circleY - e.clientY) > 5 ? e.clientY : circleY));\n            const normalized = [(clientX - left) / width, 1 - (clientY - top) / height] as const;\n            const [x, y] = this.denormalizePoint(...normalized);\n            const point = [x, y, 0];\n            points[i] = point as TBPFPoint;\n            this.setState({ points: points.slice() });\n            this.object.setData({ points: this.state.points });\n        };\n        const handleMouseUp = () => {\n            document.removeEventListener(\"mousemove\", handleMouseMove);\n            document.removeEventListener(\"mouseup\", handleMouseUp);\n        };\n        document.addEventListener(\"mousemove\", handleMouseMove);\n        document.addEventListener(\"mouseup\", handleMouseUp);\n    };\n    handleDoubleClickCircle = (e: React.MouseEvent<SVGCircleElement>) => {\n        e.stopPropagation();\n        if (this.dragged) return;\n        const circle = e.currentTarget;\n        const i = +circle.getAttribute(\"values\");\n        const { points } = this.state;\n        points.splice(i, 1);\n        this.setState({ points: points.slice() });\n        this.object.setData({ points: this.state.points });\n    };\n    getInsertPoint(x: number, yIn?: number, e = 0): { index: number; point: TBPFPoint } {\n        const { points } = this.state;\n        let $point = 0;\n        let prev = points[0];\n        let next: TBPFPoint;\n        while ($point < points.length) {\n            next = points[$point];\n            if (next[0] > x) break;\n            prev = next;\n            $point++;\n        }\n        if (prev === next) return { index: $point, point: [x, typeof yIn === \"number\" ? yIn : prev[1], e] };\n        if (typeof yIn === \"number\") return { index: $point, point: [x, yIn, e] };\n        const exponent = prev[2] || 0;\n        const normalizedX = (x - prev[0]) / (next[0] - prev[0]);\n        const normalizedY = normExp(normalizedX, exponent);\n        const y = prev[1] + normalizedY * (next[1] - prev[1]);\n        return { index: $point, point: [x, y, e] };\n    }\n    get normalizedPoints() {\n        const { domain, range, points } = this.state;\n        let [rangeMin, rangeMax] = range;\n        if (rangeMin > rangeMax) [rangeMin, rangeMax] = [rangeMax, rangeMin];\n        const rangeInterval = rangeMax - rangeMin;\n        return points.map(point => [point[0] / domain, rangeInterval ? (point[1] - rangeMin) / rangeInterval : 0.5]);\n    }\n    normalizePoint(x: number, y: number) {\n        const { domain, range } = this.state;\n        let [rangeMin, rangeMax] = range;\n        if (rangeMin > rangeMax) [rangeMin, rangeMax] = [rangeMax, rangeMin];\n        const rangeInterval = rangeMax - rangeMin;\n        return [x / domain, rangeInterval ? (y - rangeMin) / rangeInterval : 0.5];\n    }\n    denormalizePoint(x: number, y: number) {\n        const { domain, range } = this.state;\n        let [rangeMin, rangeMax] = range;\n        if (rangeMin > rangeMax) [rangeMin, rangeMax] = [rangeMax, rangeMin];\n        const rangeInterval = rangeMax - rangeMin;\n        return [x * domain, y * rangeInterval + rangeMin];\n    }\n    get font() {\n        const { fontFace, fontSize, fontFamily } = this.state;\n        return `${fontFace === \"regular\" ? \"\" : fontFace} ${fontSize}px ${fontFamily}, sans-serif`;\n    }\n    render() {\n        const { normalizedPoints, font, state } = this;\n        const { domain, points, textColor, ghostPoint, lineColor, pointColor, bgColor } = state;\n        const circles: JSX.Element[] = [];\n        const lines: JSX.Element[] = [];\n        const linesEvents: JSX.Element[] = [];\n        const texts: JSX.Element[] = [];\n        let prevX: string;\n        let prevY: string;\n        for (let i = 0; i < normalizedPoints.length; i++) {\n            const point = normalizedPoints[i];\n            const x = point[0] * 100 + \"%\";\n            const y = (1 - point[1]) * 100 + \"%\";\n            const textAnchor = point[0] < 0.5 ? \"start\" : \"end\";\n            const textX = point[0] * 100 + (point[0] < 0.5 ? 2 : -2) + \"%\";\n            const textY = (1 - point[1]) * 100 + (point[1] < 0.5 ? -1 : 4) + \"%\";\n            const textStyle: React.CSSProperties = {\n                userSelect: \"none\",\n                WebkitUserSelect: \"none\",\n                pointerEvents: \"none\",\n                font, // stylelint-disable-line font-family-no-missing-generic-family-keyword\n                fill: textColor\n            };\n            circles.push(<circle key={i} cx={x} cy={y} r={4} values={`${i}`} fill={pointColor} onMouseDown={this.handleMouseDownCircle} onDoubleClick={this.handleDoubleClickCircle} />);\n            texts.push(<text textAnchor={textAnchor} key={`${i}_text`} x={textX} y={textY} style={textStyle} >{`${round(points[i][0], 0.01)}, ${round(points[i][1], 0.01)}`}</text>);\n            if (prevX && prevY) {\n                lines.push(<line key={`${i - 1}_line`} x1={prevX} y1={prevY} x2={x} y2={y} stroke={lineColor} strokeWidth={2} />);\n                linesEvents.push(<line key={`${i - 1}_events`} x1={prevX} y1={prevY} x2={x} y2={y} values={`${i - 1}`} stroke=\"transparent\" strokeWidth={10} onMouseDown={this.handleMouseDownLine} onMouseMove={this.handleMouseMoveLine} />);\n            }\n            prevX = x;\n            prevY = y;\n        }\n        let ghostCircle: JSX.Element;\n        if (ghostPoint) {\n            const point = this.normalizePoint(ghostPoint[0], ghostPoint[1]);\n            const x = point[0] * 100 + \"%\";\n            const y = (1 - point[1]) * 100 + \"%\";\n            ghostCircle = <circle key=\"ghostPoint\" cx={x} cy={y} r={4} fill={pointColor} style={{ opacity: 0.25, pointerEvents: \"none\" }} />;\n        }\n        if (points.length && points[points.length - 1][0] !== domain) {\n            const i = points.length - 1;\n            lines.push(<line key={`${i}_line`} x1={prevX} y1={prevY} x2=\"100%\" y2={prevY} stroke={lineColor} strokeWidth={2} />);\n            linesEvents.push(<line key={`${i}_events`} x1={prevX} y1={prevY} x2=\"100%\" y2={prevY} values={`${i}`} stroke=\"transparent\" strokeWidth={10} onMouseDown={this.handleMouseDownLine} onMouseMove={this.handleMouseMoveLine} />);\n        }\n        return (\n            <BaseUI {...this.props} containerProps={{ style: { height: \"100%\", width: \"100%\" } }}>\n                <svg width=\"100%\" height=\"100%\" style={{ backgroundColor: bgColor }} onMouseMove={this.handleMouseMove} onDoubleClick={this.handleDoubleClick}>\n                    <g ref={this.refG} transform=\"scale(0.95, 0.95)\" style={{ transformOrigin: \"center\" }}>\n                        {texts}\n                        {ghostCircle}\n                        {lines}\n                        {linesEvents}\n                        {circles}\n                    </g>\n                </svg>\n            </BaseUI>\n        );\n    }\n}\nexport default class bpf extends UIObject<BPFData, {}, [TBPF | Bang], [TStrictBPF], [], BPFUIProps, BPFUIProps & BPFData> {\n    static description = \"Break-point function editor\";\n    static inlets: TMeta[\"inlets\"] = [{\n        type: \"anything\",\n        isHot: true,\n        description: \"Display & output a bpf, bang to output\"\n    }, {\n        type: \"anything\",\n        isHot: true,\n        description: \"Display without output\"\n    }];\n    static outlets: TMeta[\"outlets\"] = [{\n        type: \"object\",\n        description: \"BPF triggered\"\n    }];\n    static props: TPropsMeta<BPFUIProps> = {\n        domain: {\n            type: \"number\",\n            default: 1000,\n            description: \"X-axis range, starts from 0\",\n            isUIState: true\n        },\n        range: {\n            type: \"object\",\n            default: [0, 1],\n            description: \"Y-axis range, [low, high]\",\n            isUIState: true\n        },\n        textColor: {\n            type: \"color\",\n            default: \"rgba(0, 255, 255, 1)\",\n            description: \"Text color\",\n            isUIState: true\n        },\n        fontFamily: {\n            type: \"enum\",\n            enums: [\"Lato\", \"Georgia\", \"Times New Roman\", \"Arial\", \"Tahoma\", \"Verdana\", \"Courier New\"],\n            default: \"Arial\",\n            description: \"Font family\",\n            isUIState: true\n        },\n        fontSize: {\n            type: \"number\",\n            default: 10,\n            description: \"Text font size\",\n            isUIState: true\n        },\n        fontFace: {\n            type: \"enum\",\n            enums: [\"regular\", \"bold\", \"italic\", \"bold italic\"],\n            default: \"regular\",\n            description: \"Text style\",\n            isUIState: true\n        },\n        pointColor: {\n            type: \"color\",\n            default: \"white\",\n            description: \"Text color\",\n            isUIState: true\n        },\n        lineColor: {\n            type: \"color\",\n            default: \"white\",\n            description: \"Line color\",\n            isUIState: true\n        },\n        bgColor: {\n            type: \"color\",\n            default: \"rgba(0, 0, 0, 0.5)\",\n            description: \"Background color\",\n            isUIState: true\n        }\n    };\n    static ui = BPFUI;\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 2;\n            this.outlets = 1;\n            if (!this.data.points) this.data.points = [];\n        });\n        let prevRange: [number, number];\n        let prevDomain: number;\n        this.on(\"postInit\", () => {\n            prevRange = this.getProp(\"range\");\n            prevDomain = this.getProp(\"domain\");\n        });\n        this.on(\"updateProps\", () => {\n            const range = this.getProp(\"range\");\n            if (prevRange && prevRange !== range) {\n                const points = this.data.points.map(p => [p[0], scaleClip(p[1], prevRange[0], prevRange[1], range[0], range[1]), p[2]] as TBPFPoint);\n                this.setData({ points });\n                this.updateUI(this.data);\n                prevRange = range;\n            }\n            const domain = this.getProp(\"domain\");\n            if (typeof prevDomain === \"number\" && prevDomain !== domain) {\n                const points = this.data.points.map(p => [scaleClip(p[0], 0, prevDomain, 0, domain), p[1], p[2]] as TBPFPoint);\n                this.setData({ points });\n                this.updateUI(this.data);\n                prevDomain = domain;\n            }\n        });\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (data instanceof Bang) {\n                if (inlet === 0) {\n                    const { points } = this.data;\n                    this.outlet(0, points.map((p, i) => [p[1], p[0] - (i > 0 ? points[i - 1][0] : 0), p[2]]));\n                }\n            } else {\n                let points: TStrictBPF;\n                try {\n                    points = decodeBPF(data, 3) as TStrictBPF;\n                } catch (e) {\n                    this.error(\"Cannot decode inlet BPF\");\n                }\n                this.setData({ points });\n                this.updateUI(this.data);\n            }\n        });\n    }\n}\n","import * as React from \"react\";\nimport MonacoEditor from \"react-monaco-editor\";\nimport { editor } from \"monaco-editor/esm/vs/editor/editor.api\";\nimport { Dimmer, Loader } from \"semantic-ui-react\";\nimport UIObject from \"./Base\";\nimport { BaseUIState, BaseUI } from \"../BaseUI\";\nimport { AnyObject, Bang } from \"../Base\";\nimport { TMeta } from \"../../types\";\n\ntype CodeUIState = { language: string; value: string; editorLoaded: boolean; editing: boolean } & BaseUIState;\nexport class CodeUI extends BaseUI<AnyObject, {}, CodeUIState> {\n    static sizing = \"both\" as const;\n    static defaultSize: [number, number] = [400, 225];\n    state: CodeUIState = { ...this.state, editing: false, value: this.box.data.value, language: \"javascript\", editorLoaded: false };\n    codeEditor: editor.IStandaloneCodeEditor;\n    editorJSX: typeof MonacoEditor;\n    handleCodeEditorMount = (monaco: editor.IStandaloneCodeEditor) => {\n        this.codeEditor = monaco;\n        this.object.emit(\"editorLoaded\");\n        monaco.onDidBlurEditorText(() => this.object.emit(\"editorBlur\", monaco.getValue()));\n    };\n    handleResize = () => (this.state.editorLoaded ? this.codeEditor.layout() : undefined);\n    handleChange = (value: string, event: editor.IModelContentChangedEvent) => {\n        this.setState({ value });\n        this.object.data.value = value;\n    };\n    handleKeyDown = (e: React.KeyboardEvent) => {\n        e.stopPropagation();\n        e.nativeEvent.stopImmediatePropagation();\n    };\n    handleKeyUp = (e: React.KeyboardEvent) => {\n        e.stopPropagation();\n        e.nativeEvent.stopImmediatePropagation();\n    };\n    async componentDidMount() {\n        super.componentDidMount();\n        const reactMonacoEditor = await import(\"react-monaco-editor\");\n        this.editorJSX = reactMonacoEditor.default;\n        this.setState({ editorLoaded: true });\n    }\n    render() {\n        return (\n            <BaseUI {...this.props} containerProps={{ onKeyDown: this.handleKeyDown, onKeyUp: this.handleKeyUp }}>\n                {\n                    this.state.editorLoaded\n                        ? <this.editorJSX value={this.state.value} language={this.state.language} theme=\"vs-dark\" editorDidMount={this.handleCodeEditorMount} onChange={this.handleChange} options={{ fontSize: 12 }} width={this.state.width} height={this.state.height} />\n                        : <Dimmer active><Loader content=\"Loading\" /></Dimmer>\n                }\n            </BaseUI>\n        );\n    }\n}\nexport default class code extends UIObject<{ value: string }, {}, [Bang, string], [string], [string], {}, { language: string; value: string }, { editorBlur: string; editorLoaded: never }> {\n    static description = \"Code Editor\";\n    static inlets: TMeta[\"inlets\"] = [{\n        isHot: true,\n        type: \"bang\",\n        description: \"Trigger output the code\"\n    }, {\n        isHot: false,\n        type: \"string\",\n        description: \"Set the code\"\n    }];\n    static outlets: TMeta[\"outlets\"] = [{\n        type: \"string\",\n        description: \"Code\"\n    }];\n    static args: TMeta[\"args\"] = [{\n        type: \"string\",\n        optional: true,\n        default: \"javascript\",\n        description: \"language\"\n    }];\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 2;\n            this.outlets = 1;\n            if (typeof this.data.value === \"undefined\") this.setData({ value: \"\" });\n        });\n        this.on(\"editorLoaded\", () => this.updateUI({ language: this.box.args[0] || \"javascript\" }));\n        this.on(\"updateArgs\", (args) => {\n            if (args[0]) this.updateUI({ language: args[0] });\n        });\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) {\n                if (data instanceof Bang) this.outlet(0, this.data.value);\n            } else if (inlet === 1) {\n                const value = typeof data === \"string\" ? data : `${data}`;\n                this.updateUI({ value });\n                this.setData({ value });\n            }\n        });\n    }\n    static ui: typeof BaseUI = CodeUI;\n}\n","import comment from \"./comment\";\nimport message from \"./message\";\nimport code from \"./code\";\nimport menu from \"./menu\";\nimport view from \"./view\";\nimport keyboard from \"./keyboard\";\nimport bpf from \"./bpf\";\nimport waveform from \"./waveform\";\n\nexport default { message, comment, code, menu, view, keyboard, bpf, waveform };\n","import * as React from \"react\";\nimport UIObject from \"./Base\";\nimport { BaseUI, BaseUIState } from \"../BaseUI\";\nimport { TMIDIEvent, TMeta, TPropsMeta } from \"../../types\";\nimport { isMIDIEvent } from \"../../../utils/utils\";\n\ntype KeyMap = number[];\ninterface KeyboardState {\n    keys: KeyMap;\n    selected: number;\n}\ninterface KeyboardUIProps {\n    from: number;\n    to: number;\n    blackKeyColor: string;\n    whiteKeyColor: string;\n    selectedColor: string;\n    keyOnColor: string;\n    mode: \"mono\" | \"poly\" | \"touch\";\n}\ninterface KeyboardUIState extends KeyboardState, BaseUIState, KeyboardUIProps {}\n\nexport class KeyboardUI<T extends keyboard> extends BaseUI<T, {}, KeyboardUIState> {\n    static sizing = \"both\" as const;\n    static defaultSize: [number, number] = [450, 60];\n    static blacks = [1, 3, 6, 8, 10];\n    state: KeyboardUIState = { ...this.state, keys: this.object.state.keys, selected: undefined };\n    isBlack(key: number) {\n        return KeyboardUI.blacks.indexOf(key % 12) !== -1;\n    }\n    get from() {\n        if (this.isBlack(this.state.from)) return this.state.from - 1;\n        return this.state.from;\n    }\n    get to() {\n        if (this.isBlack(this.state.to)) return this.state.to + 1;\n        return this.state.to;\n    }\n    get whiteCount() {\n        const { to } = this;\n        let { from } = this;\n        if (from >= to) return 0;\n        let count = 0;\n        while (from <= to) {\n            if (!this.isBlack(from++)) count++;\n        }\n        return count;\n    }\n    mouseDown = false;\n    touches: number[] = [];\n    handleMouseDownKey = (e: React.MouseEvent<SVGRectElement>) => {\n        const key = +e.currentTarget.getAttribute(\"values\");\n        if (this.state.mode === \"touch\") {\n            if (this.state.keys[key]) return;\n            this.touches[-1] = key;\n        }\n        const rect = e.currentTarget.getBoundingClientRect();\n        const y = e.pageY - rect.top;\n        const height = rect.height;\n        const velocity = (Math.min(127, ~~(y / height * 128)) || 1);\n        this.object.keyTrigger(key, velocity);\n        this.mouseDown = true;\n        const handleMouseUp = () => {\n            this.mouseDown = false;\n            if (this.state.mode === \"touch\" && this.touches[-1]) {\n                this.object.keyTrigger(this.touches[-1], 0);\n                delete this.touches[-1];\n            }\n            this.setState({ selected: undefined });\n            document.removeEventListener(\"mouseup\", handleMouseUp);\n        };\n        document.addEventListener(\"mouseup\", handleMouseUp);\n    };\n    handleMouseEnterKey = (e: React.MouseEvent<SVGRectElement>) => {\n        if (!this.mouseDown) return;\n        const key = +e.currentTarget.getAttribute(\"values\");\n        if (this.state.mode === \"touch\") {\n            if (this.touches[-1] && this.touches[-1] !== key) {\n                this.object.keyTrigger(this.touches[-1], 0);\n                delete this.touches[-1];\n            }\n            if (this.state.keys[key]) return;\n        }\n        const rect = e.currentTarget.getBoundingClientRect();\n        const y = e.pageY - rect.top;\n        const height = rect.height;\n        const velocity = (Math.min(127, ~~(y / height * 128)) || 1);\n        this.object.keyTrigger(key, velocity);\n        if (this.state.mode === \"touch\") this.touches[-1] = key;\n    };\n    handleTouchStartKey = (e: React.TouchEvent<SVGRectElement>, keyIn?: number) => {\n        if (this.state.mode !== \"touch\") return;\n        e.stopPropagation();\n        const key = typeof keyIn === \"number\" ? keyIn : +e.currentTarget.getAttribute(\"values\");\n        Array.from(e.changedTouches).forEach((touch) => {\n            const { identifier: id } = touch;\n            if (this.touches[id]) this.object.keyTrigger(this.touches[id], 0);\n            this.touches[id] = key;\n            const rect = e.currentTarget.getBoundingClientRect();\n            const y = touch.pageY - rect.top;\n            const height = rect.height;\n            const velocity = (Math.min(127, ~~(y / height * 128)) || 1);\n            this.object.keyTrigger(key, velocity);\n        });\n    };\n    handleTouchMoveKey = (e: React.TouchEvent<SVGRectElement>) => {\n        if (this.state.mode !== \"touch\") return;\n        e.stopPropagation();\n        e.preventDefault();\n        Array.from(e.changedTouches).forEach((touch) => {\n            const target = document.elementFromPoint(touch.clientX, touch.clientY);\n            if (target.parentElement !== e.currentTarget.parentElement) return;\n            const key = +target.getAttribute(\"values\");\n            if (typeof key === \"undefined\") return;\n            if (this.state.keys[key]) return;\n            this.handleTouchStartKey(e, key);\n        });\n    };\n    handleTouchEndKey = (e: React.TouchEvent<SVGRectElement>) => {\n        if (this.state.mode !== \"touch\") return;\n        e.stopPropagation();\n        e.preventDefault();\n        Array.from(e.changedTouches).forEach((touch) => {\n            const { identifier: id } = touch;\n            if (this.touches[id]) this.object.keyTrigger(this.touches[id], 0);\n            delete this.touches[id];\n        });\n    };\n    render() {\n        const { from, to, whiteCount, state } = this;\n        const { blackKeyColor, whiteKeyColor, keyOnColor, selectedColor, selected } = state;\n        const whites: JSX.Element[] = [];\n        const blacks: JSX.Element[] = [];\n        const blackStyle: React.CSSProperties = { fill: blackKeyColor, strokeWidth: 1, stroke: \"black\" };\n        const whiteStyle: React.CSSProperties = { fill: whiteKeyColor, strokeWidth: 1, stroke: \"black\" };\n        const keyOnStyle: React.CSSProperties = { fill: keyOnColor, strokeWidth: 1, stroke: \"black\" };\n        const selectedStyle: React.CSSProperties = { fill: selectedColor, strokeWidth: 1, stroke: \"black\" };\n        const whiteWidthPercentage = 100 / whiteCount;\n        const blackWidthPercentage = 100 / whiteCount * 2 / 3;\n        const whiteWidth = `${whiteWidthPercentage}%`;\n        const blackWidth = `${blackWidthPercentage}%`;\n        let $white = 0;\n        let key = from;\n        while (key <= to) {\n            const $key = key;\n            const keyOn = +!!this.state.keys[$key];\n            const commonProps: React.SVGProps<SVGRectElement> = {\n                key: $key,\n                values: `${key}`,\n                onMouseDown: this.handleMouseDownKey,\n                onMouseEnter: this.handleMouseEnterKey,\n                onTouchStart: this.handleTouchStartKey,\n                onTouchMove: this.handleTouchMoveKey,\n                onTouchEnd: this.handleTouchEndKey\n            };\n            if (this.isBlack(key)) {\n                const style = key === selected ? selectedStyle : keyOn ? keyOnStyle : blackStyle;\n                const x = `${($white - 1 / 3) * whiteWidthPercentage}%`;\n                blacks.push(<rect x={x} y={0} width={blackWidth} height=\"70%\" style={style} {...commonProps} />);\n            } else {\n                const style = key === selected ? selectedStyle : keyOn ? keyOnStyle : whiteStyle;\n                const x = `${$white * whiteWidthPercentage}%`;\n                whites.push(<rect x={x} y={0} width={whiteWidth} height=\"100%\" style={style} {...commonProps} />);\n                $white++;\n            }\n            key++;\n        }\n        return (\n            <BaseUI {...this.props} containerProps={{ style: { height: \"100%\", width: \"100%\" } }}>\n                <svg width=\"100%\" height=\"100%\" style={{ touchAction: \"none\" }}>\n                    <rect x={0} y={0} width=\"100%\" height=\"100%\" style={{ fill: \"transparent\", strokeWidth: 2, stroke: \"black\" }} />\n                    {whites}\n                    {blacks}\n                </svg>\n            </BaseUI>\n        );\n    }\n}\nexport default class keyboard extends UIObject<{}, KeyboardState, [TMIDIEvent | \"flush\", TMIDIEvent], [Uint8Array & { length: 3 }], [], KeyboardUIProps, KeyboardUIProps & KeyboardState> {\n    static description = \"Keyboard\";\n    static inlets: TMeta[\"inlets\"] = [{\n        type: \"anything\",\n        isHot: true,\n        description: 'Display & output same MIDI event, \"flush\" to flush active notes'\n    }, {\n        type: \"object\",\n        isHot: true,\n        description: \"Display without output\"\n    }];\n    static outlets: TMeta[\"outlets\"] = [{\n        type: \"object\",\n        description: \"MIDI event triggered\"\n    }];\n    static props: TPropsMeta<KeyboardUIProps> = {\n        from: {\n            type: \"number\",\n            default: 24,\n            description: \"Lowest MIDI key to display\",\n            isUIState: true\n        },\n        to: {\n            type: \"number\",\n            default: 96,\n            description: \"Highest MIDI key to display\",\n            isUIState: true\n        },\n        blackKeyColor: {\n            type: \"color\",\n            default: \"black\",\n            description: \"Display color of black key\",\n            isUIState: true\n        },\n        whiteKeyColor: {\n            type: \"color\",\n            default: \"white\",\n            description: \"Display color of white key\",\n            isUIState: true\n        },\n        keyOnColor: {\n            type: \"color\",\n            default: \"grey\",\n            description: \"Display color of pressed key\",\n            isUIState: true\n        },\n        selectedColor: {\n            type: \"color\",\n            default: \"yellow\",\n            description: \"Display color of selected key\",\n            isUIState: true\n        },\n        mode: {\n            type: \"enum\",\n            enums: [\"mono\", \"poly\", \"touch\"],\n            default: \"poly\",\n            description: \"Triggering mode\",\n            isUIState: true\n        }\n    };\n    static ui = KeyboardUI;\n    state: KeyboardState = { keys: this.flushed, selected: undefined };\n    get flushed() {\n        const keys: KeyMap = [];\n        for (let i = 0; i < 128; i++) {\n            keys[i] = 0;\n        }\n        return keys;\n    }\n    flush() {\n        const { keys } = this.state;\n        for (let $key = 0; $key < 128; $key++) {\n            if (keys[$key]) {\n                this.outlet(0, new Uint8Array([9 << 4, $key, 0]) as Uint8Array & { length: 3 });\n                this.state.keys[$key] = 0;\n            }\n        }\n        this.state.selected = undefined;\n    }\n    keyTrigger(keyIn: number, velocityIn: number, noOutput?: boolean) {\n        const key = Math.max(0, Math.min(127, ~~+keyIn));\n        const velocity = Math.max(0, Math.min(127, ~~+velocityIn));\n        const mode = this.getProp(\"mode\");\n        if (mode === \"mono\") {\n            const keys = this.flushed;\n            keys[key] = velocity;\n            if (!noOutput) this.outlet(0, new Uint8Array([9 << 4, key, velocity]) as Uint8Array & { length: 3 });\n            this.setState({ keys, selected: key });\n        } else if (mode === \"poly\") {\n            const { keys } = this.state;\n            const v = +!keys[key] * (velocity || 1);\n            keys[key] = v;\n            if (!noOutput) this.outlet(0, new Uint8Array([9 << 4, key, v]) as Uint8Array & { length: 3 });\n            this.setState({ keys: { ...keys }, selected: v ? key : undefined });\n        } else {\n            const { keys } = this.state;\n            keys[key] = velocity;\n            if (!noOutput) this.outlet(0, new Uint8Array([9 << 4, key, velocity]) as Uint8Array & { length: 3 });\n            this.setState({ keys: { ...keys }, selected: velocity ? key : undefined });\n        }\n        this.updateUI(this.state);\n    }\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 2;\n            this.outlets = 1;\n        });\n        let prevMode: KeyboardUIProps[\"mode\"];\n        this.on(\"postInit\", () => prevMode = this.getProp(\"mode\"));\n        this.on(\"updateProps\", () => {\n            if (prevMode && prevMode !== this.getProp(\"mode\")) {\n                this.flush();\n                this.setState({ keys: { ...this.state.keys }, selected: undefined });\n                this.updateUI(this.state);\n            }\n        });\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0 && data === \"flush\") {\n                this.flush();\n                this.setState({ keys: { ...this.state.keys }, selected: undefined });\n                this.updateUI(this.state);\n            } else if (isMIDIEvent(data)) {\n                const cmd = data[0] >> 4;\n                const channel = data[0] & 0xf;\n                const data1 = data[1];\n                const data2 = data[2];\n                if (channel === 9) return;\n                if (cmd === 8 || (cmd === 9 && data2 === 0)) this.keyTrigger(data1, 0, inlet === 1);\n                else if (cmd === 9) this.keyTrigger(data1, data2, inlet === 1);\n            }\n        });\n    }\n}\n","import * as React from \"react\";\nimport { StrictDropdownProps, DropdownProps, Dropdown, StrictDropdownItemProps } from \"semantic-ui-react\";\nimport UIObject from \"./Base\";\nimport { BaseUI, BaseUIState } from \"../BaseUI\";\nimport { isNumberArray } from \"../../../utils/utils\";\nimport { TMeta, TPropsMeta } from \"../../types\";\n\n/* eslint-disable object-property-newline */\ntype MenuProps = Required<Pick<\n    StrictDropdownProps,\n    \"clearable\" | \"closeOnBlur\" | \"closeOnChange\" | \"closeOnEscape\" | \"deburr\"\n    | \"defaultOpen\" | \"defaultValue\" | \"direction\" | \"disabled\" | \"error\" | \"lazyLoad\"\n    | \"minCharacters\" | \"multiple\" | \"noResultsMessage\" | \"options\" | \"placeholder\"\n    | \"scrolling\" | \"search\" | \"selectOnBlur\" | \"selectOnNavigation\" | \"simple\"\n    | \"tabIndex\" | \"text\" | \"upward\" | \"wrapSelection\"\n>>;\ntype MenuUIState = { value: StrictDropdownProps[\"value\"] } & MenuProps;\nclass MenuUI extends BaseUI<menu, {}, MenuUIState> {\n    state: MenuUIState & BaseUIState = {\n        ...this.state,\n        value: this.object.getProp(\"defaultValue\")\n    };\n    handleChange = (event: React.SyntheticEvent<HTMLElement, Event>, data: DropdownProps) => {\n        const { value } = data;\n        this.setState({ value });\n        this.object.outlet(0, value);\n    };\n    handleQuery = (query: number | string | number[] | string[]) => {\n        const { options } = this.state;\n        let value;\n        if (typeof query === \"number\") {\n            if (options[query]) {\n                value = options[query].value;\n            }\n        } else if (typeof query === \"string\") {\n            const found = options.find(o => o.text === query);\n            if (found) {\n                value = found.value;\n            }\n        } else if (isNumberArray(query)) {\n            value = query.filter(i => !!options[i]).map(i => options[i].value);\n        } else {\n            value = options.filter(o => query.indexOf(o.text as string) !== -1).map(o => o.value);\n        }\n        if (value) {\n            this.setState({ value });\n            this.object.outlet(0, value);\n        }\n    };\n    componentDidMount() {\n        super.componentDidMount();\n        this.object.on(\"query\", this.handleQuery);\n    }\n    componentWillUnmount() {\n        super.componentWillUnmount();\n        this.object.off(\"query\", this.handleQuery);\n    }\n    render() {\n        const {\n            clearable, closeOnBlur, closeOnChange, closeOnEscape, deburr,\n            defaultOpen, defaultValue, direction, disabled, error, lazyLoad,\n            minCharacters, multiple, noResultsMessage, options, placeholder,\n            scrolling, search, selectOnBlur, selectOnNavigation, simple,\n            tabIndex, text, upward, wrapSelection, value\n        } = this.state;\n        const dropdownProps = {\n            clearable, closeOnBlur, closeOnChange, closeOnEscape, deburr,\n            defaultOpen, defaultValue, direction, disabled, error, lazyLoad,\n            minCharacters, multiple, noResultsMessage, options, placeholder,\n            scrolling, search, selectOnBlur, selectOnNavigation, simple,\n            tabIndex, text, upward, wrapSelection, value\n        };\n        return (\n            <BaseUI {...this.props}>\n                <Dropdown {...dropdownProps} selection fluid onChange={this.handleChange} />\n            </BaseUI>\n        );\n    }\n}\nexport default class menu extends UIObject<{}, {}, [number | string | number[] | string[], StrictDropdownItemProps[]], [any], [], MenuProps, MenuUIState, { query: number | string | number[] | string[] }> {\n    static description = \"Dropdown Menu\";\n    static inlets: TMeta[\"inlets\"] = [{\n        isHot: true,\n        type: \"anything\",\n        description: \"number or display text or array to select item(s)\"\n    }, {\n        isHot: false,\n        type: \"object\",\n        description: \"Array of DropdownItemProps: { key, icon, text, value, ... }\"\n    }];\n    static outlets: TMeta[\"outlets\"] = [{\n        type: \"anything\",\n        description: \"Selected value\"\n    }];\n    static args: TMeta[\"args\"] = [{\n        type: \"anything\",\n        varLength: true,\n        optional: true,\n        default: undefined,\n        description: \"Initial value(s)\"\n    }];\n    static props: TPropsMeta<MenuProps> = {\n        clearable: {\n            type: \"boolean\",\n            default: false,\n            description: \"Using the clearable setting will let users remove their selection\",\n            isUIState: true\n        },\n        closeOnBlur: {\n            type: \"boolean\",\n            default: true,\n            description: \"Whether or not the menu should close when the dropdown is blurred\",\n            isUIState: true\n        },\n        closeOnChange: {\n            type: \"boolean\",\n            default: undefined,\n            description: \"Whether or not the menu should close when a value is selected\",\n            isUIState: true\n        },\n        closeOnEscape: {\n            type: \"boolean\",\n            default: true,\n            description: \"Whether or not the dropdown should close when the escape key is pressed\",\n            isUIState: true\n        },\n        deburr: {\n            type: \"boolean\",\n            default: false,\n            description: \"Whether or not the dropdown should strip diacritics in options and input search\",\n            isUIState: true\n        },\n        defaultOpen: {\n            type: \"boolean\",\n            default: false,\n            description: \"Initial value of open\",\n            isUIState: true\n        },\n        defaultValue: {\n            type: \"anything\",\n            default: undefined,\n            description: \"Initial value or value array if multiple\",\n            isUIState: true\n        },\n        direction: {\n            type: \"enum\",\n            enums: [\"left\", \"right\"],\n            default: \"left\",\n            description: \"A dropdown menu can open to the left or to the right\",\n            isUIState: true\n        },\n        disabled: {\n            type: \"boolean\",\n            default: false,\n            description: \" A disabled dropdown menu or item does not allow user interaction\",\n            isUIState: true\n        },\n        error: {\n            type: \"boolean\",\n            default: false,\n            description: \"An errored dropdown can alert a user to a problem\",\n            isUIState: true\n        },\n        lazyLoad: {\n            type: \"boolean\",\n            default: false,\n            description: \"A dropdown can defer rendering its options until it is open\",\n            isUIState: true\n        },\n        minCharacters: {\n            type: \"number\",\n            default: 1,\n            description: \"The minimum characters for a search to begin showing results\",\n            isUIState: true\n        },\n        multiple: {\n            type: \"boolean\",\n            default: false,\n            description: \"A selection dropdown can allow multiple selections\",\n            isUIState: true\n        },\n        noResultsMessage: {\n            type: \"string\",\n            default: \"No results found\",\n            description: \"Message to display when there are no results\",\n            isUIState: true\n        },\n        options: {\n            type: \"anything\",\n            default: [],\n            description: \"Array of Dropdown.Item props\",\n            isUIState: true\n        },\n        placeholder: {\n            type: \"string\",\n            default: \"\",\n            description: \"Placeholder text\",\n            isUIState: true\n        },\n        scrolling: {\n            type: \"boolean\",\n            default: false,\n            description: \"A dropdown can have its menu scroll\",\n            isUIState: true\n        },\n        search: {\n            type: \"boolean\",\n            default: false,\n            description: \"A selection dropdown can allow a user to search through a large list of choices\",\n            isUIState: true\n        },\n        selectOnBlur: {\n            type: \"boolean\",\n            default: true,\n            description: \"Whether the highlighted item should be selected on blur\",\n            isUIState: true\n        },\n        selectOnNavigation: {\n            type: \"boolean\",\n            default: true,\n            description: \"Whether dropdown should select new option when using keyboard shortcuts.\",\n            isUIState: true\n        },\n        simple: {\n            type: \"boolean\",\n            default: false,\n            description: \"A dropdown menu can open to the left or to the right\",\n            isUIState: true\n        },\n        tabIndex: {\n            type: \"anything\",\n            default: undefined,\n            description: \"A dropdown can receive focus\",\n            isUIState: true\n        },\n        text: {\n            type: \"string\",\n            default: undefined,\n            description: \"The text displayed in the dropdown, usually for the active item\",\n            isUIState: true\n        },\n        upward: {\n            type: \"boolean\",\n            default: false,\n            description: \"Controls whether the dropdown will open upward\",\n            isUIState: true\n        },\n        wrapSelection: {\n            type: \"boolean\",\n            default: false,\n            description: \"Selection will wrap to end or start on press ArrowUp or ArrowDown\",\n            isUIState: true\n        }\n    };\n    static ui = MenuUI;\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 2;\n            this.outlets = 1;\n        });\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) {\n                this.emit(\"query\", data as number | string | number[] | string[]);\n            } else {\n                const options = data as StrictDropdownItemProps[];\n                this.update(undefined, { options });\n            }\n        });\n    }\n}\n","import * as Util from \"util\";\nimport UIObject from \"./Base\";\nimport ButtonUI from \"./ButtonUI\";\nimport { TMeta } from \"../../types\";\nimport { Bang } from \"../Base\";\nimport { BaseUI } from \"../BaseUI\";\n\nclass MessageUI extends ButtonUI<message> {\n    static editableOnUnlock = true;\n    handleChanged = (text: string) => this.object.handleUpdateArgs([text]);\n    handleClick = (e: React.MouseEvent) => {\n        if (this.patcher.state.locked) this.object.outlet(0, this.object.state.buffer);\n    };\n}\nexport default class message extends UIObject<{ text: string }, { buffer: any; editing: boolean }, [any, any], [any], [any], {}, { text: string }> {\n    static description = \"Message\";\n    static inlets: TMeta[\"inlets\"] = [{\n        isHot: true,\n        type: \"anything\",\n        description: \"Trigger output the message\"\n    }, {\n        isHot: false,\n        type: \"anything\",\n        description: \"Set the message\"\n    }];\n    static outlets: TMeta[\"outlets\"] = [{\n        type: \"anything\",\n        description: \"Message to send\"\n    }];\n    state = { buffer: new Bang(), editing: false };\n    handleUpdateArgs = (args: any[]) => {\n        if (typeof args[0] !== \"undefined\") {\n            this.setData({ text: this.stringify(args[0]) });\n            this.state.buffer = this.parse(args[0]);\n        } else {\n            this.state.buffer = new Bang();\n        }\n        this.updateUI({ text: this.data.text });\n    };\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 2;\n            this.outlets = 1;\n        });\n        this.on(\"postInit\", () => {\n            const args = this.box.args;\n            if (typeof this.data.text === \"string\") this.state.buffer = this.parse(this.data.text);\n            else if (typeof args[0] !== \"undefined\") {\n                if (typeof this.data.text !== \"string\") {\n                    this.setData({ text: this.stringify(args[0]) });\n                    this.state.buffer = args[0];\n                }\n            } else {\n                this.setData({ text: \"\" });\n                this.state.buffer = new Bang();\n            }\n            this.on(\"updateArgs\", this.handleUpdateArgs);\n        });\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) this.outlet(0, this.state.buffer);\n            else if (inlet === 1) this.handleUpdateArgs([data]);\n        });\n    }\n    parse(o: any) {\n        if (typeof o === \"string\") {\n            if (o.length > 0) {\n                try {\n                    return JSON.parse(o);\n                } catch (e) {\n                    return o;\n                }\n            }\n            return new Bang();\n        }\n        return o;\n    }\n    stringify(o: any) {\n        if (typeof o === \"string\") return o;\n        try {\n            return JSON.stringify(o);\n        } catch (e) {\n            return Util.inspect(o);\n        }\n    }\n    static ui: typeof BaseUI = MessageUI;\n}\n","import UIObject from \"./Base\";\nimport { DOMUI, DOMUIState } from \"../BaseUI\";\nimport { TMeta, TPropsMeta } from \"../../types\";\nimport { Bang } from \"../Base\";\n\nexport class ViewUI extends DOMUI<view> {\n    state: DOMUIState = { ...this.state, children: this.object.state.children };\n}\nexport interface ViewProps {\n    shadow: boolean;\n    containerProps: JSX.IntrinsicAttributes & React.ClassAttributes<HTMLDivElement> & React.HTMLAttributes<HTMLDivElement>;\n}\nexport default class view extends UIObject<{}, { children: ChildNode[] }, [string | Element], [], [string], {}, DOMUIState> {\n    static description = \"View HTML Element\";\n    static inlets: TMeta[\"inlets\"] = [{\n        isHot: true,\n        type: \"anything\",\n        description: \"HTML string or HTMLElement object to view\"\n    }];\n    static args: TMeta[\"args\"] = [{\n        type: \"string\",\n        optional: true,\n        description: \"initial innerHTML\"\n    }];\n    static props: TPropsMeta<ViewProps> = {\n        shadow: {\n            type: \"boolean\",\n            default: true,\n            description: \"Whether children should be attached to a Shadow DOM\",\n            isUIState: true\n        },\n        containerProps: {\n            type: \"object\",\n            default: {},\n            description: \"Available under non-shadow mode, the props for div container\",\n            isUIState: true\n        }\n    };\n    static ui = ViewUI;\n    state = { children: [] as ChildNode[] };\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 1;\n            this.outlets = 0;\n        });\n        this.on(\"updateArgs\", (args) => {\n            if (typeof this.box.args[0] === \"string\") {\n                const template = document.createElement(\"template\");\n                template.innerHTML = this.box.args[0];\n                this.state.children = Array.from(template.content.children);\n                this.updateUI({ children: this.state.children });\n            }\n        });\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) {\n                if (!(data instanceof Bang)) {\n                    if (typeof data === \"string\") {\n                        const template = document.createElement(\"template\");\n                        template.innerHTML = data;\n                        this.state.children = Array.from(template.content.children);\n                    } else if (data instanceof Element) {\n                        this.state.children = [data];\n                    }\n                    this.updateUI({ children: this.state.children });\n                }\n            }\n        });\n    }\n}\n","import * as Color from \"color-js\";\nimport UIObject from \"./Base\";\nimport { TMeta, TPropsMeta } from \"../../types\";\nimport { BaseUIState, CanvasUI } from \"../BaseUI\";\n\ninterface WaveformState {\n    key: string;\n    value: AudioBuffer;\n}\ninterface WaveformUIProps {\n    interleaved: boolean;\n    selection: [number, number];\n    zoom: number;\n    zoomOffset: number;\n    range: number;\n    autoRange: boolean;\n    showStats: boolean;\n    bgColor: string;\n    phosphorColor: string;\n    hueOffset: number;\n    textColor: string;\n    gridColor: string;\n    seperatorColor: string;\n}\ninterface WaveformUIState extends WaveformState, BaseUIState, WaveformUIProps {}\ntype WaveformProps = WaveformUIProps;\nexport class WaveformUI extends CanvasUI<waveform, {}, WaveformUIState> {\n    static defaultSize = [120, 60] as [number, number];\n    componentDidMount() {\n        const { bgColor } = this.state;\n        const ctx = this.ctx;\n        if (!ctx) return;\n        const [width, height] = this.fullSize();\n        // Background\n        ctx.fillStyle = bgColor;\n        ctx.fillRect(0, 0, width, height);\n        super.componentDidMount();\n    }\n    async paint() {\n        const {\n            // width,\n            // height,\n            // zoom,\n            // zoomOffset,\n            interleaved,\n            // $cursor,\n            range,\n            autoRange,\n            showStats,\n            bgColor,\n            phosphorColor,\n            hueOffset,\n            textColor,\n            gridColor,\n            seperatorColor,\n            value\n        } = this.state;\n        const ctx = this.ctx;\n        if (!ctx) return;\n\n        const left = 0;\n        const bottom = 0;\n\n        // Background\n        const [width, height] = this.fullSize();\n        ctx.clearRect(0, 0, width, height);\n        ctx.fillStyle = bgColor;\n        ctx.fillRect(0, 0, width, height);\n\n        if (!value) return;\n        const t: Float32Array[] = [];\n        for (let i = 0; i < value.numberOfChannels; i++) {\n            t[i] = value.getChannelData(i);\n        }\n        if (!t || !t.length || !t[0].length) return;\n\n        const $ = 0;\n        const channels = t.length;\n        const l = t[0].length;\n        // Vertical Range\n        let min = -range;\n        let max = range;\n        let yFactor = range;\n        if (autoRange) {\n            // Fastest way to get min and max to have: 1. max abs value for y scaling, 2. mean value for zero-crossing\n            let i = channels;\n            let s = 0;\n            while (i--) {\n                let j = l;\n                while (j--) {\n                    s = t[i][j];\n                    if (s < min) min = s;\n                    else if (s > max) max = s;\n                }\n            }\n            yFactor = Math.max(1, Math.abs(min), Math.abs(max))/* * vzoom*/;\n        }\n        // Grids\n        ctx.strokeStyle = gridColor;\n        let vStep = 0.25;\n        while (yFactor / 2 / vStep > 2) vStep *= 2; // Minimum horizontal grids in channel one side = 2\n        ctx.beginPath();\n        ctx.setLineDash([]);\n        const gridChannels = interleaved ? channels : 1;\n        const channelHeight = (height - bottom) / gridChannels;\n        for (let i = 0; i < gridChannels; i++) {\n            let y = (i + 0.5) * channelHeight;\n            ctx.moveTo(left, y);\n            ctx.lineTo(width, y); // 0-line\n            for (let j = vStep; j < yFactor; j += vStep) {\n                y = (i + 0.5 + j / yFactor / 2) * channelHeight;\n                ctx.moveTo(left, y);\n                ctx.lineTo(width, y); // below 0\n                y = (i + 0.5 - j / yFactor / 2) * channelHeight;\n                ctx.moveTo(left, y);\n                ctx.lineTo(width, y); // above 0\n            }\n        }\n        ctx.stroke();\n\n        ctx.beginPath();\n        ctx.setLineDash([4, 2]);\n        ctx.strokeStyle = seperatorColor;\n        for (let i = 1; i < gridChannels; i++) {\n            ctx.moveTo(left, i * channelHeight);\n            ctx.lineTo(width, i * channelHeight);\n        }\n        ctx.stroke();\n        ctx.setLineDash([]);\n        ctx.lineWidth = 2;\n        const channelColor: string[] = [];\n        for (let i = 0; i < channels; i++) {\n            // Horizontal Range\n            let $0 = 0; // Draw start\n            let $1 = l; // Draw End\n            const $zerox = 0; // First Zero-crossing\n            const drawL = l; // Length to draw\n            $0 = Math.round($zerox/* + drawL * zoomOffset*/);\n            $1 = Math.round($zerox + drawL/* / zoom + drawL * zoomOffset*/);\n            const gridX = (width - left) / ($1 - $0);\n            const step = Math.max(1, Math.round(1 / gridX));\n\n            ctx.beginPath();\n            channelColor[i] = Color(phosphorColor).shiftHue(i * hueOffset).toHSL();\n            ctx.strokeStyle = channelColor[i];\n            let maxInStep;\n            let minInStep;\n            for (let j = $0; j < $1; j++) {\n                const $j = (j + $) % l;\n                const samp = t[i][$j];\n                const $step = (j - $0) % step;\n                if ($step === 0) {\n                    maxInStep = samp;\n                    minInStep = samp;\n                }\n                if ($step !== step - 1) {\n                    if ($step !== 0) {\n                        if (samp > maxInStep) maxInStep = samp;\n                        if (samp < minInStep) minInStep = samp;\n                    }\n                    continue;\n                }\n                const x = (j - $0) * gridX + left;\n                let y = channelHeight * (+interleaved * i + 0.5 - maxInStep / yFactor * 0.5);\n                if (j === $0) ctx.moveTo(x, y);\n                else ctx.lineTo(x, y);\n                if (minInStep !== maxInStep) {\n                    y = channelHeight * (+interleaved * i + 0.5 - minInStep / yFactor * 0.5);\n                    ctx.lineTo(x, y);\n                }\n            }\n            ctx.stroke();\n        }\n        // Stats\n        if (showStats) {\n            ctx.font = \"bold 12px Consolas, monospace\";\n            ctx.fillStyle = textColor;\n            ctx.textAlign = \"left\";\n            ctx.textBaseline = \"top\";\n            ctx.fillText(yFactor.toFixed(2), 2, 2);\n            ctx.textBaseline = \"bottom\";\n            ctx.fillText((-yFactor).toFixed(2), 2, height - 2);\n        }\n    }\n}\nexport default class waveform extends UIObject<{}, WaveformState, [AudioBuffer, string | number], [], [string | number], WaveformProps, WaveformUIState> {\n    static description = \"Buffer waveform view\";\n    static inlets: TMeta[\"inlets\"] = [{\n        isHot: true,\n        type: \"object\",\n        description: \"AudioBuffer\"\n    }, {\n        isHot: false,\n        type: \"anything\",\n        description: \"Buffer name\"\n    }];\n    static args: TMeta[\"args\"] = [{\n        type: \"anything\",\n        optional: true,\n        description: \"Buffer name\"\n    }];\n    static props: TPropsMeta<WaveformProps> = {\n        interleaved: {\n            type: \"boolean\",\n            default: false,\n            description: \"Draw channels seperately\",\n            isUIState: true\n        },\n        selection: {\n            type: \"object\",\n            default: [0, 1],\n            description: \"Select a part of buffer\",\n            isUIState: true\n        },\n        zoom: {\n            type: \"number\",\n            default: 1,\n            description: \"Horizontal zoom factor\",\n            isUIState: true\n        },\n        zoomOffset: {\n            type: \"number\",\n            default: 0,\n            description: \"Horizontal zoom offset [0, 1)\",\n            isUIState: true\n        },\n        range: {\n            type: \"number\",\n            default: 1,\n            description: \"Vertical range\",\n            isUIState: true\n        },\n        autoRange: {\n            type: \"boolean\",\n            default: true,\n            description: \"Auto adjust range if > 1\",\n            isUIState: true\n        },\n        showStats: {\n            type: \"boolean\",\n            default: true,\n            description: \"Show stats texts\",\n            isUIState: true\n        },\n        bgColor: {\n            type: \"color\",\n            default: \"rgb(40, 40, 40)\",\n            description: \"Background color\",\n            isUIState: true\n        },\n        phosphorColor: {\n            type: \"color\",\n            default: \"hsl(0, 100%, 85%)\",\n            description: \"Phosphor color\",\n            isUIState: true\n        },\n        hueOffset: {\n            type: \"number\",\n            default: 60,\n            description: \"Channel Color Hue offset\",\n            isUIState: true\n        },\n        textColor: {\n            type: \"color\",\n            default: \"#DDDD99\",\n            description: \"Info text color\",\n            isUIState: true\n        },\n        gridColor: {\n            type: \"color\",\n            default: \"#404040\",\n            description: \"Grid color\",\n            isUIState: true\n        },\n        seperatorColor: {\n            type: \"color\",\n            default: \"white\",\n            description: \"Channel seperator color\",\n            isUIState: true\n        }\n    };\n    static ui = WaveformUI;\n    state: WaveformState = { key: undefined as string, value: undefined as AudioBuffer };\n    subscribe() {\n        super.subscribe();\n        const sharedDataKey = \"_buffer\";\n        const reload = (key: string) => {\n            if (this.state.key) this.sharedData.unsubscribe(sharedDataKey, this.state.key, this);\n            this.state.key = key;\n            if (key) {\n                const shared = this.sharedData.get(sharedDataKey, key);\n                this.state.value = shared instanceof AudioBuffer ? shared : undefined;\n                this.updateUI(this.state);\n                this.sharedData.subscribe(sharedDataKey, this.state.key, this);\n            }\n        };\n        this.on(\"preInit\", () => {\n            this.inlets = 2;\n            this.outlets = 0;\n        });\n        this.on(\"updateArgs\", (args) => {\n            const key = typeof args[0] === \"undefined\" ? args[0] : args[0].toString();\n            if (key !== this.state.key) {\n                reload(key);\n                this.updateUI(this.state);\n            }\n        });\n        this.on(\"inlet\", async ({ data, inlet }) => {\n            if (inlet === 0) {\n                if (data instanceof AudioBuffer) {\n                    this.state.value = data;\n                    this.updateUI(this.state);\n                }\n            } else if (inlet === 1) {\n                if (typeof data === \"string\" || typeof data === \"number\") {\n                    const key = data.toString() || \"\";\n                    if (key !== this.state.key) {\n                        reload(key);\n                        this.updateUI(this.state);\n                    }\n                }\n            }\n        });\n        this.on(\"sharedDataUpdated\", ({ data }) => {\n            if (data instanceof AudioBuffer) {\n                this.state.value = data;\n                this.updateUI(this.state);\n            }\n        });\n        this.on(\"destroy\", () => {\n            if (this.state.key) this.sharedData.unsubscribe(sharedDataKey, this.state.key, this);\n        });\n    }\n}\n"],"sourceRoot":""}