{"version":3,"file":"src_core_text_PatcherText_ts.js/7f6b8d415915aa46eea1.worklet.js","mappings":"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","sources":["webpack://JSPatcher/./src/core/text/PatcherText.ts","webpack://JSPatcher/./src/core/text/TextEditor.ts","webpack://JSPatcher/./src/core/text/TextHistory.ts"],"sourcesContent":["import FileInstance from \"../file/FileInstance\";\nimport TextEditor from \"./TextEditor\";\nimport TempTextFile from \"./TempTextFile\";\nimport TextHistory from \"./TextHistory\";\nimport type PersistentProjectFile from \"../file/PersistentProjectFile\";\nimport type { IJSPatcherEnv } from \"../Env\";\nimport type { IProject } from \"../Project\";\n\nexport interface PatcherTextEventMap {\n    \"textModified\": { text: string; oldText: string };\n}\n\nexport default class PatcherText extends FileInstance<PatcherTextEventMap, PersistentProjectFile | TempTextFile> {\n    static async fromProjectItem(options: { file: PersistentProjectFile; env: IJSPatcherEnv; project?: IProject; instanceId?: string }) {\n        return new this(options).init(options.file.data);\n    }\n    text: string;\n    _history = new TextHistory();\n    async getEditor() {\n        const editor = new TextEditor(this);\n        return editor.init();\n    }\n    async init(data?: ArrayBuffer) {\n        if (data) this.text = await new Response(data).text();\n        else this.text = \"\";\n        this._isReady = true;\n        this.emit(\"ready\");\n        return this;\n    }\n    async serialize() {\n        return new Blob([this.text]).arrayBuffer();\n    }\n    clone() {\n        const patcherText = new PatcherText({ env: this.env, project: this.project, file: this.file });\n        patcherText.text = this.text;\n        return patcherText;\n    }\n}\n","import type { SemanticICONS } from \"semantic-ui-react\";\nimport type MonacoEditor from \"react-monaco-editor\";\nimport type { editor } from \"monaco-editor/esm/vs/editor/editor.api\";\nimport FileEditor from \"../file/FileEditor\";\nimport TempTextFile from \"./TempTextFile\";\nimport type PatcherText from \"./PatcherText\";\nimport type PersistentProjectFile from \"../file/PersistentProjectFile\";\nimport type { IJSPatcherEnv } from \"../Env\";\nimport type { IProject } from \"../Project\";\n\nexport interface TextEditorEventMap {\n    \"textModified\": { text: string; oldText: string };\n}\n\nexport interface TextHistoryEventMap extends TextEditorEventMap {}\n\nexport default class TextEditor extends FileEditor<PatcherText, TextEditorEventMap> {\n    static async fromProjectItem({ file, env, project, instanceId }: { file: PersistentProjectFile | TempTextFile; env: IJSPatcherEnv; project?: IProject; instanceId?: string }) {\n        const text = file instanceof TempTextFile ? file.data : await file.instantiate({ env, project, instanceId }) as PatcherText;\n        const editor = new this(text);\n        return editor.init();\n    }\n    editor: monaco.editor.IStandaloneCodeEditor;\n    editorJSX: typeof MonacoEditor;\n    get fileExtension() {\n        return \"txt\";\n    }\n    get fileIcon(): SemanticICONS {\n        return \"code\";\n    }\n    get text() {\n        return this.instance.text;\n    }\n    set text(value: string) {\n        this.instance.text = value;\n    }\n    async init() {\n        if (!this.instance.isReady) {\n            await new Promise<void>((resolve, reject) => {\n                const handleReady = () => {\n                    resolve();\n                    this.instance.off(\"ready\", handleReady);\n                };\n                this.instance.on(\"ready\", handleReady);\n            });\n        }\n        this._isReady = true;\n        this.emit(\"ready\");\n        return this;\n    }\n    get editorLanguage() {\n        if (!this.file) return \"none\";\n        if (this.file.name.endsWith(\".js\")) return \"js\";\n        if (this.file.name.endsWith(\".json\")) return \"json\";\n        if (this.file.name.endsWith(\".html\")) return \"html\";\n        if (this.file.name.endsWith(\".dsp\")) return \"faust\";\n        return \"none\";\n    }\n    bindEditor(editor: monaco.editor.IStandaloneCodeEditor) {\n        this.editor = editor;\n        const didChanged = editor.onDidChangeModelContent((e) => {\n            const oldText = this.text;\n            const text = editor.getValue();\n            this.text = text;\n            this.emit(\"textModified\", { text, oldText });\n            this.emit(\"changed\");\n        });\n        const didDispose = editor.onDidDispose(() => {\n            didChanged.dispose();\n            didDispose.dispose();\n            this.editor = undefined;\n            this.emit(\"destroy\");\n        });\n        editor.addAction({\n            id: \"editor.action.save\",\n            label: \"Save\",\n            keybindings: [/* KeyMod.CtrlCmd */2048 | /* KeyCode.KEY_S */49],\n            run: () => this.save()\n        });\n    }\n    async copy() {\n        if (!this.editor) return;\n        this.editor.focus();\n        document.execCommand(\"copy\");\n    }\n    async cut() {\n        if (!this.editor) return;\n        this.editor.focus();\n        document.execCommand(\"cut\");\n    }\n    async paste() {\n        if (!this.editor) return;\n        this.editor.focus();\n        const text = await navigator.clipboard.readText();\n        this.editor.executeEdits(\"\", [{ range: this.editor.getSelection(), text, forceMoveMarkers: true }]);\n    }\n    async deleteSelected() {\n        if (!this.editor) return;\n        this.editor.executeEdits(\"\", [{ range: this.editor.getSelection(), text: null }]);\n    }\n    async selectAll() {\n        if (!this.editor) return;\n        const range = this.editor.getModel().getFullModelRange();\n        this.editor.setSelection(range);\n    }\n    onUiResized() {}\n}\n","import History from \"../file/History\";\nimport TextEditor, { TextHistoryEventMap } from \"./TextEditor\";\n\nexport default class TextHistory extends History<TextHistoryEventMap, TextEditor> {\n    get eventListening(): (keyof TextHistoryEventMap)[] {\n        return [\"textModified\"];\n    }\n    async undoOf(editor: TextEditor, eventName: keyof TextHistoryEventMap, eventData: any) {\n        if (eventName === \"textModified\") {\n            const e: TextHistoryEventMap[typeof eventName] = eventData;\n            const { oldText } = e;\n            if (editor.editor) {\n                editor.editor.focus();\n                if (!document.execCommand(\"undo\")) {\n                    (editor.editor.getModel() as any)?.undo();\n                }\n                editor.text = editor.editor.getValue();\n                e.oldText = editor.text;\n            } else {\n                editor.text = oldText;\n            }\n        }\n    }\n    async redoOf(editor: TextEditor, eventName: keyof TextHistoryEventMap, eventData: any) {\n        if (eventName === \"textModified\") {\n            const e: TextHistoryEventMap[typeof eventName] = eventData;\n            const { text } = e;\n            if (editor.editor) {\n                editor.editor.focus();\n                if (!document.execCommand(\"undo\")) {\n                    (editor.editor.getModel() as any)?.redo();\n                }\n                editor.text = editor.editor.getValue();\n                e.text = editor.text;\n            } else {\n                editor.text = text;\n            }\n        }\n    }\n}\n"],"names":["FileInstance","TextEditor","TextHistory","PatcherText","fromProjectItem","options","init","file","data","getEditor","editor","text","Response","_isReady","emit","serialize","Blob","arrayBuffer","clone","patcherText","env","project","FileEditor","TempTextFile","instanceId","instantiate","fileExtension","fileIcon","instance","value","isReady","Promise","resolve","reject","handleReady","off","on","editorLanguage","name","endsWith","bindEditor","didChanged","onDidChangeModelContent","e","oldText","getValue","didDispose","onDidDispose","dispose","undefined","addAction","id","label","keybindings","run","save","copy","focus","document","execCommand","cut","paste","navigator","clipboard","readText","executeEdits","range","getSelection","forceMoveMarkers","deleteSelected","selectAll","getModel","getFullModelRange","setSelection","onUiResized","History","eventListening","undoOf","eventName","eventData","undo","redoOf","redo"],"sourceRoot":""}